; Listing generated by Microsoft (R) Optimizing Compiler Version 19.16.27030.1 

	TITLE	C:\Dev\Tetris\src\menu.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG45929 DB	'Play', 00H
	ORG $+3
$SG45930 DB	'Highscores', 00H
	ORG $+1
$SG45931 DB	'Info', 00H
	ORG $+3
$SG45932 DB	'Exit', 00H
CONST	ENDS
PUBLIC	??0Color@core@@QAE@ABV01@@Z			; core::Color::Color
PUBLIC	??0Color@core@@QAE@EEE@Z			; core::Color::Color
PUBLIC	??0Button@ui@core@@QAE@HHPAU_TTF_Font@@PBDW4ButtonState@12@VColor@2@33@Z ; core::ui::Button::Button
PUBLIC	?GetWidth@Button@ui@core@@QBEHXZ		; core::ui::Button::GetWidth
PUBLIC	?GetHeight@Button@ui@core@@QBEHXZ		; core::ui::Button::GetHeight
PUBLIC	?SetState@Button@ui@core@@QAEXW4ButtonState@23@@Z ; core::ui::Button::SetState
PUBLIC	??0Button@ui@core@@QAE@ABV012@@Z		; core::ui::Button::Button
PUBLIC	??0Button@ui@core@@QAE@$$QAV012@@Z		; core::ui::Button::Button
PUBLIC	??2@YAPAXIPAX@Z					; operator new
PUBLIC	?max@?$numeric_limits@H@std@@SAHXZ		; std::numeric_limits<int>::max
PUBLIC	?_Orphan_all@_Container_base0@std@@QAEXXZ	; std::_Container_base0::_Orphan_all
PUBLIC	?_Swap_all@_Container_base0@std@@QAEXAAU12@@Z	; std::_Container_base0::_Swap_all
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??0?$allocator@VButton@ui@core@@@std@@QAE@XZ	; std::allocator<core::ui::Button>::allocator<core::ui::Button>
PUBLIC	?deallocate@?$allocator@VButton@ui@core@@@std@@QAEXQAVButton@ui@core@@I@Z ; std::allocator<core::ui::Button>::deallocate
PUBLIC	?allocate@?$allocator@VButton@ui@core@@@std@@QAEPAVButton@ui@core@@I@Z ; std::allocator<core::ui::Button>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@VButton@ui@core@@@std@@@std@@SAIABV?$allocator@VButton@ui@core@@@2@@Z ; std::_Default_allocator_traits<std::allocator<core::ui::Button> >::max_size
PUBLIC	??0?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >
PUBLIC	?_Move_alloc@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEXAAV?$allocator@VButton@ui@core@@@2@@Z ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Move_alloc
PUBLIC	?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Orphan_all
PUBLIC	?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEXAAV12@@Z ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Swap_all
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAV?$allocator@VButton@ui@core@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Getal
PUBLIC	?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QBEABV?$allocator@VButton@ui@core@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Getal
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Get_data
PUBLIC	?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Get_data
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myfirst
PUBLIC	?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QBEABQAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myfirst
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Mylast
PUBLIC	?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QBEABQAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Mylast
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myend
PUBLIC	?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QBEABQAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myend
PUBLIC	??0?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<core::ui::Button> >::_Vector_val<std::_Simple_types<core::ui::Button> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@VButton@ui@core@@@std@@V?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@$00@std@@QAEAAV?$allocator@VButton@ui@core@@@2@XZ ; std::_Compressed_pair<std::allocator<core::ui::Button>,std::_Vector_val<std::_Simple_types<core::ui::Button> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@VButton@ui@core@@@std@@V?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@$00@std@@QBEABV?$allocator@VButton@ui@core@@@2@XZ ; std::_Compressed_pair<std::allocator<core::ui::Button>,std::_Vector_val<std::_Simple_types<core::ui::Button> >,1>::_Get_first
PUBLIC	?_Get_second@?$_Compressed_pair@V?$allocator@VButton@ui@core@@@std@@V?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<core::ui::Button>,std::_Vector_val<std::_Simple_types<core::ui::Button> >,1>::_Get_second
PUBLIC	?_Get_second@?$_Compressed_pair@V?$allocator@VButton@ui@core@@@std@@V?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<core::ui::Button>,std::_Vector_val<std::_Simple_types<core::ui::Button> >,1>::_Get_second
PUBLIC	??0?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@XZ ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::vector<core::ui::Button,std::allocator<core::ui::Button> >
PUBLIC	?_Move_from@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Move_from
PUBLIC	?_Move_assign_from@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Move_assign_from
PUBLIC	??4?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEAAV01@$$QAV01@@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::operator=
PUBLIC	??1?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@XZ ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::~vector<core::ui::Button,std::allocator<core::ui::Button> >
PUBLIC	?push_back@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEX$$QAVButton@ui@core@@@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::push_back
PUBLIC	?size@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QBEIXZ ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::size
PUBLIC	?max_size@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QBEIXZ ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::max_size
PUBLIC	?capacity@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QBEIXZ ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::capacity
PUBLIC	?_Has_unused_capacity@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@ABE_NXZ ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Has_unused_capacity
PUBLIC	??A?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEAAVButton@ui@core@@I@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::operator[]
PUBLIC	?_Umove@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEPAVButton@ui@core@@PAV345@00@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Umove
PUBLIC	?_Umove_if_noexcept1@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEXPAVButton@ui@core@@00U?$integral_constant@_N$0A@@2@@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Umove_if_noexcept1
PUBLIC	?_Umove_if_noexcept@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEXPAVButton@ui@core@@00@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Umove_if_noexcept
PUBLIC	?_Destroy@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEXPAVButton@ui@core@@0@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Destroy
PUBLIC	?_Calculate_growth@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@ABEII@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEXQAVButton@ui@core@@II@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Change_array
PUBLIC	?_Tidy@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEXXZ ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Tidy
PUBLIC	?_Xlength@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@CAXXZ ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Xlength
PUBLIC	?_Orphan_range@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@ABEXPAVButton@ui@core@@0@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Orphan_range
PUBLIC	??0Menu@core@@QAE@PAUInputState@@PAU_TTF_Font@@@Z ; core::Menu::Menu
PUBLIC	?Update@Menu@core@@QAE?AW4GamePhase@@XZ		; core::Menu::Update
PUBLIC	?Render@Menu@core@@QAEXHHW4ButtonAlign@2@@Z	; core::Menu::Render
PUBLIC	??$move@AAVButton@ui@core@@@std@@YA$$QAVButton@ui@core@@AAV123@@Z ; std::move<core::ui::Button &>
PUBLIC	??$emplace_back@VButton@ui@core@@@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEX$$QAVButton@ui@core@@@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::emplace_back<core::ui::Button>
PUBLIC	??$forward@VButton@ui@core@@@std@@YA$$QAVButton@ui@core@@AAV123@@Z ; std::forward<core::ui::Button>
PUBLIC	??$_Emplace_back_with_unused_capacity@VButton@ui@core@@@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEX$$QAVButton@ui@core@@@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Emplace_back_with_unused_capacity<core::ui::Button>
PUBLIC	??$_Unfancy@VButton@ui@core@@@std@@YAPAVButton@ui@core@@PAV123@@Z ; std::_Unfancy<core::ui::Button>
PUBLIC	??$construct@VButton@ui@core@@V123@@?$_Default_allocator_traits@V?$allocator@VButton@ui@core@@@std@@@std@@SAXAAV?$allocator@VButton@ui@core@@@1@QAVButton@ui@core@@$$QAV345@@Z ; std::_Default_allocator_traits<std::allocator<core::ui::Button> >::construct<core::ui::Button,core::ui::Button>
PUBLIC	??$_Emplace_reallocate@VButton@ui@core@@@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEPAVButton@ui@core@@QAV234@$$QAV234@@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Emplace_reallocate<core::ui::Button>
PUBLIC	??$addressof@V?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@YAPAV?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@0@AAV10@@Z ; std::addressof<std::vector<core::ui::Button,std::allocator<core::ui::Button> > >
PUBLIC	??$move@AAV?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@YA$$QAV?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@0@AAV10@@Z ; std::move<std::vector<core::ui::Button,std::allocator<core::ui::Button> > &>
PUBLIC	??$_Pocma@V?$allocator@VButton@ui@core@@@std@@@std@@YAXAAV?$allocator@VButton@ui@core@@@0@0@Z ; std::_Pocma<std::allocator<core::ui::Button> >
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@VButton@ui@core@@@std@@V?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<core::ui::Button>,std::_Vector_val<std::_Simple_types<core::ui::Button> >,1>::_Compressed_pair<std::allocator<core::ui::Button>,std::_Vector_val<std::_Simple_types<core::ui::Button> >,1><>
PUBLIC	??$_Destroy_range@V?$allocator@VButton@ui@core@@@std@@@std@@YAXPAVButton@ui@core@@0AAV?$allocator@VButton@ui@core@@@0@@Z ; std::_Destroy_range<std::allocator<core::ui::Button> >
PUBLIC	??$_Deallocate@$07$0A@@std@@YAXPAXI@Z		; std::_Deallocate<8,0>
PUBLIC	??$_Pocma@V?$allocator@VButton@ui@core@@@std@@@std@@YAXAAV?$allocator@VButton@ui@core@@@0@0U?$integral_constant@_N$00@0@@Z ; std::_Pocma<std::allocator<core::ui::Button> >
PUBLIC	??$_Destroy_range1@V?$allocator@VButton@ui@core@@@std@@@std@@YAXPAVButton@ui@core@@0AAV?$allocator@VButton@ui@core@@@0@U?$integral_constant@_N$00@0@@Z ; std::_Destroy_range1<std::allocator<core::ui::Button> >
PUBLIC	??$_Uninitialized_move@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@QAV123@0PAV123@AAV?$allocator@VButton@ui@core@@@0@@Z ; std::_Uninitialized_move<core::ui::Button *,core::ui::Button *,std::allocator<core::ui::Button> >
PUBLIC	??$_Min_value@I@std@@YAABIABI0@Z		; std::_Min_value<unsigned int>
PUBLIC	??$_Get_size_of_n@$0CA@@std@@YAII@Z		; std::_Get_size_of_n<32>
PUBLIC	??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
PUBLIC	??$_Uninitialized_copy@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@QAV123@0PAV123@AAV?$allocator@VButton@ui@core@@@0@@Z ; std::_Uninitialized_copy<core::ui::Button *,core::ui::Button *,std::allocator<core::ui::Button> >
PUBLIC	??$move@AAV?$allocator@VButton@ui@core@@@std@@@std@@YA$$QAV?$allocator@VButton@ui@core@@@0@AAV10@@Z ; std::move<std::allocator<core::ui::Button> &>
PUBLIC	??$_Get_unwrapped@VButton@ui@core@@@std@@YAPAVButton@ui@core@@QAV123@@Z ; std::_Get_unwrapped<core::ui::Button>
PUBLIC	??$_Idl_distance@PAVButton@ui@core@@PAV123@@std@@YAHABQAVButton@ui@core@@0@Z ; std::_Idl_distance<core::ui::Button *,core::ui::Button *>
PUBLIC	??$_Idl_distance1@PAVButton@ui@core@@PAV123@@std@@YAHABQAVButton@ui@core@@0Urandom_access_iterator_tag@0@@Z ; std::_Idl_distance1<core::ui::Button *,core::ui::Button *>
PUBLIC	??$_Get_unwrapped_n@VButton@ui@core@@H$0A@@std@@YAPAVButton@ui@core@@QAV123@H@Z ; std::_Get_unwrapped_n<core::ui::Button,int,0>
PUBLIC	??$_Ptr_move_cat@VButton@ui@core@@V123@@std@@YA?AU_General_ptr_iterator_tag@0@ABQAVButton@ui@core@@0@Z ; std::_Ptr_move_cat<core::ui::Button,core::ui::Button>
PUBLIC	??$_Uninitialized_move_al_unchecked@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@PAV123@QAV123@1AAV?$allocator@VButton@ui@core@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z ; std::_Uninitialized_move_al_unchecked<core::ui::Button *,core::ui::Button *,std::allocator<core::ui::Button> >
PUBLIC	??$?0U?$integral_constant@_N$00@std@@@_Unused_parameter@std@@QAE@$$QAU?$integral_constant@_N$00@1@@Z ; std::_Unused_parameter::_Unused_parameter<std::integral_constant<bool,1> >
PUBLIC	??$_Seek_wrapped@VButton@ui@core@@@std@@YAXAAPAVButton@ui@core@@QAV123@@Z ; std::_Seek_wrapped<core::ui::Button>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Ptr_copy_cat@VButton@ui@core@@V123@@std@@YA?AU_General_ptr_iterator_tag@0@ABQAVButton@ui@core@@0@Z ; std::_Ptr_copy_cat<core::ui::Button,core::ui::Button>
PUBLIC	??$_Uninitialized_copy_al_unchecked@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@PAV123@QAV123@1AAV?$allocator@VButton@ui@core@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z ; std::_Uninitialized_copy_al_unchecked<core::ui::Button *,core::ui::Button *,std::allocator<core::ui::Button> >
PUBLIC	??0?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@PAVButton@ui@core@@AAV?$allocator@VButton@ui@core@@@1@@Z ; std::_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >::_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >
PUBLIC	??1?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >::~_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >
PUBLIC	?_Release@?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEPAVButton@ui@core@@XZ ; std::_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >::_Release
PUBLIC	??$_Emplace_back@VButton@ui@core@@@?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEX$$QAVButton@ui@core@@@Z ; std::_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >::_Emplace_back<core::ui::Button>
PUBLIC	??$_Emplace_back@AAVButton@ui@core@@@?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEXAAVButton@ui@core@@@Z ; std::_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >::_Emplace_back<core::ui::Button &>
PUBLIC	??$forward@AAVButton@ui@core@@@std@@YAAAVButton@ui@core@@AAV123@@Z ; std::forward<core::ui::Button &>
PUBLIC	??$construct@VButton@ui@core@@AAV123@@?$_Default_allocator_traits@V?$allocator@VButton@ui@core@@@std@@@std@@SAXAAV?$allocator@VButton@ui@core@@@1@QAVButton@ui@core@@AAV345@@Z ; std::_Default_allocator_traits<std::allocator<core::ui::Button> >::construct<core::ui::Button,core::ui::Button &>
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@	; `string'
PUBLIC	__real@3fc00000
PUBLIC	__xmm@41f00000000000000000000000000000
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__invalid_parameter_noinfo_noreturn:PROC
EXTRN	?Render@Button@ui@core@@QAEXHH@Z:PROC		; core::ui::Button::Render
EXTRN	?_Xlength_error@std@@YAXPBD@Z:PROC		; std::_Xlength_error
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__CxxThrowException@8:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?s_highlightColor@Palette@core@@2VColor@2@B:DWORD ; core::Palette::s_highlightColor
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __xmm@41f00000000000000000000000000000
CONST	SEGMENT
__xmm@41f00000000000000000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	00H, 00H, 00H, 00H, 00H, 00H, 00H, 0f0H, 'A'
CONST	ENDS
;	COMDAT __real@3fc00000
CONST	SEGMENT
__real@3fc00000 DD 03fc00000r			; 1.5
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@ DB 'vector<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninitialized_copy_al_unchecked@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@PAV123@QAV123@1AAV?$allocator@VButton@ui@core@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninitialized_copy_al_unchecked@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@PAV123@QAV123@1AAV?$allocator@VButton@ui@core@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z$0
__ehfuncinfo$??$_Uninitialized_copy_al_unchecked@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@PAV123@QAV123@1AAV?$allocator@VButton@ui@core@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Uninitialized_copy_al_unchecked@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@PAV123@QAV123@1AAV?$allocator@VButton@ui@core@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??$_Uninitialized_move_al_unchecked@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@PAV123@QAV123@1AAV?$allocator@VButton@ui@core@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??$_Uninitialized_move_al_unchecked@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@PAV123@QAV123@1AAV?$allocator@VButton@ui@core@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z$0
__ehfuncinfo$??$_Uninitialized_move_al_unchecked@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@PAV123@QAV123@1AAV?$allocator@VButton@ui@core@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??$_Uninitialized_move_al_unchecked@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@PAV123@QAV123@1AAV?$allocator@VButton@ui@core@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__catchsym$??$_Emplace_reallocate@VButton@ui@core@@@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEPAVButton@ui@core@@QAV234@$$QAV234@@Z$2 DD 040H
	DD	00H
	DD	00H
	DD	FLAT:__catch$??$_Emplace_reallocate@VButton@ui@core@@@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEPAVButton@ui@core@@QAV234@$$QAV234@@Z$0
__unwindtable$??$_Emplace_reallocate@VButton@ui@core@@@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEPAVButton@ui@core@@QAV234@$$QAV234@@Z DD 0ffffffffH
	DD	00H
	DD	0ffffffffH
	DD	00H
__tryblocktable$??$_Emplace_reallocate@VButton@ui@core@@@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEPAVButton@ui@core@@QAV234@$$QAV234@@Z DD 00H
	DD	00H
	DD	01H
	DD	01H
	DD	FLAT:__catchsym$??$_Emplace_reallocate@VButton@ui@core@@@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEPAVButton@ui@core@@QAV234@$$QAV234@@Z$2
__ehfuncinfo$??$_Emplace_reallocate@VButton@ui@core@@@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEPAVButton@ui@core@@QAV234@$$QAV234@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??$_Emplace_reallocate@VButton@ui@core@@@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEPAVButton@ui@core@@QAV234@$$QAV234@@Z
	DD	01H
	DD	FLAT:__tryblocktable$??$_Emplace_reallocate@VButton@ui@core@@@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEPAVButton@ui@core@@QAV234@$$QAV234@@Z
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
xdata$x	SEGMENT
__unwindtable$??0Menu@core@@QAE@PAUInputState@@PAU_TTF_Font@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0Menu@core@@QAE@PAUInputState@@PAU_TTF_Font@@@Z$0
__ehfuncinfo$??0Menu@core@@QAE@PAUInputState@@PAU_TTF_Font@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0Menu@core@@QAE@PAUInputState@@PAU_TTF_Font@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??1?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??4?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEAAV01@$$QAV01@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$?_Move_from@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEX$$QAV12@U?$integral_constant@_N$00@2@@Z DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__ehfuncinfo$??0?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@XZ DD 019930522H
	DD	00H
	DD	00H
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	05H
xdata$x	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$construct@VButton@ui@core@@AAV123@@?$_Default_allocator_traits@V?$allocator@VButton@ui@core@@@std@@@std@@SAXAAV?$allocator@VButton@ui@core@@@1@QAVButton@ui@core@@AAV345@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@VButton@ui@core@@AAV123@@?$_Default_allocator_traits@V?$allocator@VButton@ui@core@@@std@@@std@@SAXAAV?$allocator@VButton@ui@core@@@1@QAVButton@ui@core@@AAV345@@Z PROC ; std::_Default_allocator_traits<std::allocator<core::ui::Button> >::construct<core::ui::Button,core::ui::Button &>, COMDAT

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

  00004	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00007	50		 push	 eax
  00008	6a 20		 push	 32			; 00000020H
  0000a	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0000f	83 c4 08	 add	 esp, 8
  00012	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  00015	8b 4d 10	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 ??$forward@AAVButton@ui@core@@@std@@YAAAVButton@ui@core@@AAV123@@Z ; std::forward<core::ui::Button &>
  0001e	83 c4 04	 add	 esp, 4
  00021	50		 push	 eax
  00022	8b 4d fc	 mov	 ecx, DWORD PTR $T1[ebp]
  00025	e8 00 00 00 00	 call	 ??0Button@ui@core@@QAE@ABV012@@Z

; 881  : 			_Objty(_STD forward<_Types>(_Args)...);
; 882  : 		}

  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
??$construct@VButton@ui@core@@AAV123@@?$_Default_allocator_traits@V?$allocator@VButton@ui@core@@@std@@@std@@SAXAAV?$allocator@VButton@ui@core@@@1@QAVButton@ui@core@@AAV345@@Z ENDP ; std::_Default_allocator_traits<std::allocator<core::ui::Button> >::construct<core::ui::Button,core::ui::Button &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\type_traits
;	COMDAT ??$forward@AAVButton@ui@core@@@std@@YAAAVButton@ui@core@@AAV123@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@AAVButton@ui@core@@@std@@YAAAVButton@ui@core@@AAV123@@Z PROC ; std::forward<core::ui::Button &>, COMDAT

; 1573 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1574 : 	return (static_cast<_Ty&&>(_Arg));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1575 : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@AAVButton@ui@core@@@std@@YAAAVButton@ui@core@@AAV123@@Z ENDP ; std::forward<core::ui::Button &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory
;	COMDAT ??$_Emplace_back@AAVButton@ui@core@@@?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEXAAVButton@ui@core@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_<_Vals_0>$ = 8						; size = 4
??$_Emplace_back@AAVButton@ui@core@@@?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEXAAVButton@ui@core@@@Z PROC ; std::_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >::_Emplace_back<core::ui::Button &>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct a new element at *_Last and increment

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 164  : 		allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00007	8b 45 08	 mov	 eax, DWORD PTR _<_Vals_0>$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??$forward@AAVButton@ui@core@@@std@@YAAAVButton@ui@core@@AAV123@@Z ; std::forward<core::ui::Button &>
  00010	83 c4 04	 add	 esp, 4
  00013	50		 push	 eax
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0001a	52		 push	 edx
  0001b	e8 00 00 00 00	 call	 ??$_Unfancy@VButton@ui@core@@@std@@YAPAVButton@ui@core@@PAV123@@Z ; std::_Unfancy<core::ui::Button>
  00020	83 c4 04	 add	 esp, 4
  00023	50		 push	 eax
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ??$construct@VButton@ui@core@@AAV123@@?$_Default_allocator_traits@V?$allocator@VButton@ui@core@@@std@@@std@@SAXAAV?$allocator@VButton@ui@core@@@1@QAVButton@ui@core@@AAV345@@Z ; std::_Default_allocator_traits<std::allocator<core::ui::Button> >::construct<core::ui::Button,core::ui::Button &>
  00030	83 c4 0c	 add	 esp, 12			; 0000000cH

; 165  : 		++_Last;

  00033	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00036	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00039	83 c0 20	 add	 eax, 32			; 00000020H
  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 166  : 		}

  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
??$_Emplace_back@AAVButton@ui@core@@@?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEXAAVButton@ui@core@@@Z ENDP ; std::_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >::_Emplace_back<core::ui::Button &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory
;	COMDAT ??$_Emplace_back@VButton@ui@core@@@?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEX$$QAVButton@ui@core@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_<_Vals_0>$ = 8						; size = 4
??$_Emplace_back@VButton@ui@core@@@?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEX$$QAVButton@ui@core@@@Z PROC ; std::_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >::_Emplace_back<core::ui::Button>, COMDAT
; _this$ = ecx

; 163  : 		{	// construct a new element at *_Last and increment

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 164  : 		allocator_traits<_Alloc>::construct(_Al, _Unfancy(_Last), _STD forward<_Types>(_Vals)...);

  00007	8b 45 08	 mov	 eax, DWORD PTR _<_Vals_0>$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??$forward@VButton@ui@core@@@std@@YA$$QAVButton@ui@core@@AAV123@@Z ; std::forward<core::ui::Button>
  00010	83 c4 04	 add	 esp, 4
  00013	50		 push	 eax
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0001a	52		 push	 edx
  0001b	e8 00 00 00 00	 call	 ??$_Unfancy@VButton@ui@core@@@std@@YAPAVButton@ui@core@@PAV123@@Z ; std::_Unfancy<core::ui::Button>
  00020	83 c4 04	 add	 esp, 4
  00023	50		 push	 eax
  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0002a	51		 push	 ecx
  0002b	e8 00 00 00 00	 call	 ??$construct@VButton@ui@core@@V123@@?$_Default_allocator_traits@V?$allocator@VButton@ui@core@@@std@@@std@@SAXAAV?$allocator@VButton@ui@core@@@1@QAVButton@ui@core@@$$QAV345@@Z ; std::_Default_allocator_traits<std::allocator<core::ui::Button> >::construct<core::ui::Button,core::ui::Button>
  00030	83 c4 0c	 add	 esp, 12			; 0000000cH

; 165  : 		++_Last;

  00033	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00036	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00039	83 c0 20	 add	 eax, 32			; 00000020H
  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	89 41 04	 mov	 DWORD PTR [ecx+4], eax

; 166  : 		}

  00042	8b e5		 mov	 esp, ebp
  00044	5d		 pop	 ebp
  00045	c2 04 00	 ret	 4
??$_Emplace_back@VButton@ui@core@@@?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEX$$QAVButton@ui@core@@@Z ENDP ; std::_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >::_Emplace_back<core::ui::Button>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory
;	COMDAT ?_Release@?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEPAVButton@ui@core@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Release@?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEPAVButton@ui@core@@XZ PROC ; std::_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >::_Release, COMDAT
; _this$ = ecx

; 169  : 		{	// suppress any exception handling backout and return _Last

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 170  : 		_First = _Last;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  00010	89 10		 mov	 DWORD PTR [eax], edx

; 171  : 		return (_Last);

  00012	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00015	8b 40 04	 mov	 eax, DWORD PTR [eax+4]

; 172  : 		}

  00018	8b e5		 mov	 esp, ebp
  0001a	5d		 pop	 ebp
  0001b	c3		 ret	 0
?_Release@?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEPAVButton@ui@core@@XZ ENDP ; std::_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >::_Release
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory
;	COMDAT ??1?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@XZ PROC ; std::_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >::~_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >, COMDAT
; _this$ = ecx

; 157  : 		{	// destroy all elements guarded by this instance

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 158  : 		_Destroy_range(_First, _Last, _Al);

  00026	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00029	8b 48 08	 mov	 ecx, DWORD PTR [eax+8]
  0002c	51		 push	 ecx
  0002d	8b 55 f0	 mov	 edx, DWORD PTR _this$[ebp]
  00030	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  00033	50		 push	 eax
  00034	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00037	8b 11		 mov	 edx, DWORD PTR [ecx]
  00039	52		 push	 edx
  0003a	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@VButton@ui@core@@@std@@@std@@YAXPAVButton@ui@core@@0AAV?$allocator@VButton@ui@core@@@0@@Z ; std::_Destroy_range<std::allocator<core::ui::Button> >
  0003f	83 c4 0c	 add	 esp, 12			; 0000000cH

; 159  : 		}

  00042	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00045	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0004c	59		 pop	 ecx
  0004d	8b e5		 mov	 esp, ebp
  0004f	5d		 pop	 ebp
  00050	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@XZ ENDP ; std::_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >::~_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory
;	COMDAT ??0?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@PAVButton@ui@core@@AAV?$allocator@VButton@ui@core@@@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Dest$ = 8						; size = 4
__Al_$ = 12						; size = 4
??0?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@PAVButton@ui@core@@AAV?$allocator@VButton@ui@core@@@1@@Z PROC ; std::_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >::_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >, COMDAT
; _this$ = ecx

; 150  : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 147  : 		: _First(_Dest),

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR __Dest$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx

; 148  : 		_Last(_Dest),

  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 08	 mov	 eax, DWORD PTR __Dest$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax

; 149  : 		_Al(_Al_)

  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	8b 55 0c	 mov	 edx, DWORD PTR __Al_$[ebp]
  0001e	89 51 08	 mov	 DWORD PTR [ecx+8], edx

; 151  : 		}

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 08 00	 ret	 8
??0?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@PAVButton@ui@core@@AAV?$allocator@VButton@ui@core@@@1@@Z ENDP ; std::_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >::_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory
;	COMDAT ??$_Uninitialized_copy_al_unchecked@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@PAV123@QAV123@1AAV?$allocator@VButton@ui@core@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z
_TEXT	SEGMENT
__Backout$ = -28					; size = 12
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninitialized_copy_al_unchecked@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@PAV123@QAV123@1AAV?$allocator@VButton@ui@core@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z PROC ; std::_Uninitialized_copy_al_unchecked<core::ui::Button *,core::ui::Button *,std::allocator<core::ui::Button> >, COMDAT

; 186  : 	{	// copy [_First, _Last) to raw _Dest, using _Al, no special optimization

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Uninitialized_copy_al_unchecked@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@PAV123@QAV123@1AAV?$allocator@VButton@ui@core@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 187  : 	_Uninitialized_backout_al<_FwdIt, _Alloc> _Backout{_Dest, _Al};

  00025	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  00028	50		 push	 eax
  00029	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  0002c	51		 push	 ecx
  0002d	8d 4d e4	 lea	 ecx, DWORD PTR __Backout$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@PAVButton@ui@core@@AAV?$allocator@VButton@ui@core@@@1@@Z ; std::_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >::_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 188  : 	for (; _First != _Last; ++_First)

  0003c	eb 09		 jmp	 SHORT $LN4@Uninitiali
$LN2@Uninitiali:
  0003e	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00041	83 c2 20	 add	 edx, 32			; 00000020H
  00044	89 55 08	 mov	 DWORD PTR __First$[ebp], edx
$LN4@Uninitiali:
  00047	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0004a	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  0004d	74 0e		 je	 SHORT $LN3@Uninitiali

; 189  : 		{
; 190  : 		_Backout._Emplace_back(*_First);

  0004f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00052	51		 push	 ecx
  00053	8d 4d e4	 lea	 ecx, DWORD PTR __Backout$[ebp]
  00056	e8 00 00 00 00	 call	 ??$_Emplace_back@AAVButton@ui@core@@@?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEXAAVButton@ui@core@@@Z ; std::_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >::_Emplace_back<core::ui::Button &>

; 191  : 		}

  0005b	eb e1		 jmp	 SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 192  : 
; 193  : 	return (_Backout._Release());

  0005d	8d 4d e4	 lea	 ecx, DWORD PTR __Backout$[ebp]
  00060	e8 00 00 00 00	 call	 ?_Release@?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEPAVButton@ui@core@@XZ ; std::_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >::_Release
  00065	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00068	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0006f	8d 4d e4	 lea	 ecx, DWORD PTR __Backout$[ebp]
  00072	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >::~_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >
  00077	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]

; 194  : 	}

  0007a	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  0007d	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00084	59		 pop	 ecx
  00085	8b e5		 mov	 esp, ebp
  00087	5d		 pop	 ebp
  00088	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninitialized_copy_al_unchecked@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@PAV123@QAV123@1AAV?$allocator@VButton@ui@core@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z$0:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR __Backout$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >::~_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >
__ehhandler$??$_Uninitialized_copy_al_unchecked@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@PAV123@QAV123@1AAV?$allocator@VButton@ui@core@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninitialized_copy_al_unchecked@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@PAV123@QAV123@1AAV?$allocator@VButton@ui@core@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninitialized_copy_al_unchecked@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@PAV123@QAV123@1AAV?$allocator@VButton@ui@core@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z ENDP ; std::_Uninitialized_copy_al_unchecked<core::ui::Button *,core::ui::Button *,std::allocator<core::ui::Button> >
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Ptr_copy_cat@VButton@ui@core@@V123@@std@@YA?AU_General_ptr_iterator_tag@0@ABQAVButton@ui@core@@0@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_copy_cat@VButton@ui@core@@V123@@std@@YA?AU_General_ptr_iterator_tag@0@ABQAVButton@ui@core@@0@Z PROC ; std::_Ptr_copy_cat<core::ui::Button,core::ui::Button>, COMDAT

; 1069 : 	{	// return pointer copy optimization category for pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1070 : 	return {};

  00004	33 c0		 xor	 eax, eax
  00006	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  00009	8a 45 ff	 mov	 al, BYTE PTR $T1[ebp]

; 1071 : 	}

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??$_Ptr_copy_cat@VButton@ui@core@@V123@@std@@YA?AU_General_ptr_iterator_tag@0@ABQAVButton@ui@core@@0@Z ENDP ; std::_Ptr_copy_cat<core::ui::Button,core::ui::Button>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Ptr$ = -12						; size = 4
__Ptr_container$ = -8					; size = 4
__Block_size$ = -4					; size = 4
__Bytes$ = 8						; size = 4
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 92   : 	{	// allocate _Bytes manually aligned to at least _Big_allocation_alignment

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH

; 93   : 	size_t _Block_size = _Non_user_size + _Bytes;

  00006	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00009	83 c0 23	 add	 eax, 35			; 00000023H
  0000c	89 45 fc	 mov	 DWORD PTR __Block_size$[ebp], eax

; 94   : 	if (_Block_size <= _Bytes)

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR __Block_size$[ebp]
  00012	3b 4d 08	 cmp	 ecx, DWORD PTR __Bytes$[ebp]
  00015	77 07		 ja	 SHORT $LN8@Allocate_m

; 95   : 		{	// add overflow, try allocating all of memory and assume the
; 96   : 			// allocation function will throw bad_alloc
; 97   : 		_Block_size = static_cast<size_t>(-1);

  00017	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __Block_size$[ebp], -1
$LN8@Allocate_m:

; 98   : 		}
; 99   : 
; 100  : 	const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

  0001e	8b 55 fc	 mov	 edx, DWORD PTR __Block_size$[ebp]
  00021	52		 push	 edx
  00022	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ; std::_Default_allocate_traits::_Allocate
  00027	83 c4 04	 add	 esp, 4
  0002a	89 45 f8	 mov	 DWORD PTR __Ptr_container$[ebp], eax
$LN4@Allocate_m:

; 101  : 	_STL_VERIFY(_Ptr_container != 0, "invalid argument");	// validate even in release since we're doing p[-1]

  0002d	83 7d f8 00	 cmp	 DWORD PTR __Ptr_container$[ebp], 0
  00031	74 02		 je	 SHORT $LN7@Allocate_m
  00033	eb 09		 jmp	 SHORT $LN2@Allocate_m
$LN7@Allocate_m:
  00035	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
  0003a	33 c0		 xor	 eax, eax
  0003c	75 f7		 jne	 SHORT $LN7@Allocate_m
$LN2@Allocate_m:
  0003e	33 c9		 xor	 ecx, ecx
  00040	75 eb		 jne	 SHORT $LN4@Allocate_m

; 102  : 	void * const _Ptr = reinterpret_cast<void *>((_Ptr_container + _Non_user_size)
; 103  : 		& ~(_Big_allocation_alignment - 1));

  00042	8b 55 f8	 mov	 edx, DWORD PTR __Ptr_container$[ebp]
  00045	83 c2 23	 add	 edx, 35			; 00000023H
  00048	83 e2 e0	 and	 edx, -32		; ffffffe0H
  0004b	89 55 f4	 mov	 DWORD PTR __Ptr$[ebp], edx

; 104  : 	static_cast<uintptr_t *>(_Ptr)[-1] = _Ptr_container;

  0004e	b8 04 00 00 00	 mov	 eax, 4
  00053	6b c8 ff	 imul	 ecx, eax, -1
  00056	8b 55 f4	 mov	 edx, DWORD PTR __Ptr$[ebp]
  00059	8b 45 f8	 mov	 eax, DWORD PTR __Ptr_container$[ebp]
  0005c	89 04 0a	 mov	 DWORD PTR [edx+ecx], eax

; 105  : 
; 106  :   #ifdef _DEBUG
; 107  : 	static_cast<uintptr_t *>(_Ptr)[-2] = _Big_allocation_sentinel;
; 108  :   #endif /* _DEBUG */
; 109  : 	return (_Ptr);

  0005f	8b 45 f4	 mov	 eax, DWORD PTR __Ptr$[ebp]
$LN11@Allocate_m:

; 110  : 	}

  00062	8b e5		 mov	 esp, ebp
  00064	5d		 pop	 ebp
  00065	c3		 ret	 0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Seek_wrapped@VButton@ui@core@@@std@@YAXAAPAVButton@ui@core@@QAV123@@Z
_TEXT	SEGMENT
__It$ = 8						; size = 4
__UIt$ = 12						; size = 4
??$_Seek_wrapped@VButton@ui@core@@@std@@YAXAAPAVButton@ui@core@@QAV123@@Z PROC ; std::_Seek_wrapped<core::ui::Button>, COMDAT

; 871  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 872  : 	_It = _UIt;

  00003	8b 45 08	 mov	 eax, DWORD PTR __It$[ebp]
  00006	8b 4d 0c	 mov	 ecx, DWORD PTR __UIt$[ebp]
  00009	89 08		 mov	 DWORD PTR [eax], ecx

; 873  : 	}

  0000b	5d		 pop	 ebp
  0000c	c3		 ret	 0
??$_Seek_wrapped@VButton@ui@core@@@std@@YAXAAPAVButton@ui@core@@QAV123@@Z ENDP ; std::_Seek_wrapped<core::ui::Button>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$?0U?$integral_constant@_N$00@std@@@_Unused_parameter@std@@QAE@$$QAU?$integral_constant@_N$00@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
??$?0U?$integral_constant@_N$00@std@@@_Unused_parameter@std@@QAE@$$QAU?$integral_constant@_N$00@1@@Z PROC ; std::_Unused_parameter::_Unused_parameter<std::integral_constant<bool,1> >, COMDAT
; _this$ = ecx

; 436  : 		constexpr _Unused_parameter(_Ty&&) noexcept {}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c2 04 00	 ret	 4
??$?0U?$integral_constant@_N$00@std@@@_Unused_parameter@std@@QAE@$$QAU?$integral_constant@_N$00@1@@Z ENDP ; std::_Unused_parameter::_Unused_parameter<std::integral_constant<bool,1> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory
;	COMDAT ??$_Uninitialized_move_al_unchecked@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@PAV123@QAV123@1AAV?$allocator@VButton@ui@core@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z
_TEXT	SEGMENT
__Backout$ = -28					; size = 12
$T2 = -16						; size = 4
__$EHRec$ = -12						; size = 12
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
___formal$ = 24						; size = 1
___formal$ = 28						; size = 1
??$_Uninitialized_move_al_unchecked@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@PAV123@QAV123@1AAV?$allocator@VButton@ui@core@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z PROC ; std::_Uninitialized_move_al_unchecked<core::ui::Button *,core::ui::Button *,std::allocator<core::ui::Button> >, COMDAT

; 228  : 	{	// move [_First, _Last) to raw _Dest, using _Al, no special optimization

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Uninitialized_move_al_unchecked@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@PAV123@QAV123@1AAV?$allocator@VButton@ui@core@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 10	 sub	 esp, 16			; 00000010H
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax

; 229  : 	_Uninitialized_backout_al<_FwdIt, _Alloc> _Backout{_Dest, _Al};

  00025	8b 45 14	 mov	 eax, DWORD PTR __Al$[ebp]
  00028	50		 push	 eax
  00029	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  0002c	51		 push	 ecx
  0002d	8d 4d e4	 lea	 ecx, DWORD PTR __Backout$[ebp]
  00030	e8 00 00 00 00	 call	 ??0?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@PAVButton@ui@core@@AAV?$allocator@VButton@ui@core@@@1@@Z ; std::_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >::_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >
  00035	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 230  : 	for (; _First != _Last; ++_First)

  0003c	eb 09		 jmp	 SHORT $LN4@Uninitiali
$LN2@Uninitiali:
  0003e	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00041	83 c2 20	 add	 edx, 32			; 00000020H
  00044	89 55 08	 mov	 DWORD PTR __First$[ebp], edx
$LN4@Uninitiali:
  00047	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  0004a	3b 45 0c	 cmp	 eax, DWORD PTR __Last$[ebp]
  0004d	74 17		 je	 SHORT $LN3@Uninitiali

; 231  : 		{
; 232  : 		_Backout._Emplace_back(_STD move(*_First));

  0004f	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00052	51		 push	 ecx
  00053	e8 00 00 00 00	 call	 ??$move@AAVButton@ui@core@@@std@@YA$$QAVButton@ui@core@@AAV123@@Z ; std::move<core::ui::Button &>
  00058	83 c4 04	 add	 esp, 4
  0005b	50		 push	 eax
  0005c	8d 4d e4	 lea	 ecx, DWORD PTR __Backout$[ebp]
  0005f	e8 00 00 00 00	 call	 ??$_Emplace_back@VButton@ui@core@@@?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEX$$QAVButton@ui@core@@@Z ; std::_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >::_Emplace_back<core::ui::Button>

; 233  : 		}

  00064	eb d8		 jmp	 SHORT $LN2@Uninitiali
$LN3@Uninitiali:

; 234  : 
; 235  : 	return (_Backout._Release());

  00066	8d 4d e4	 lea	 ecx, DWORD PTR __Backout$[ebp]
  00069	e8 00 00 00 00	 call	 ?_Release@?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEPAVButton@ui@core@@XZ ; std::_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >::_Release
  0006e	89 45 f0	 mov	 DWORD PTR $T2[ebp], eax
  00071	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  00078	8d 4d e4	 lea	 ecx, DWORD PTR __Backout$[ebp]
  0007b	e8 00 00 00 00	 call	 ??1?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >::~_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >
  00080	8b 45 f0	 mov	 eax, DWORD PTR $T2[ebp]

; 236  : 	}

  00083	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00086	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0008d	59		 pop	 ecx
  0008e	8b e5		 mov	 esp, ebp
  00090	5d		 pop	 ebp
  00091	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??$_Uninitialized_move_al_unchecked@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@PAV123@QAV123@1AAV?$allocator@VButton@ui@core@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z$0:
  00000	8d 4d e4	 lea	 ecx, DWORD PTR __Backout$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1?$_Uninitialized_backout_al@PAVButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@XZ ; std::_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >::~_Uninitialized_backout_al<core::ui::Button *,std::allocator<core::ui::Button> >
__ehhandler$??$_Uninitialized_move_al_unchecked@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@PAV123@QAV123@1AAV?$allocator@VButton@ui@core@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Uninitialized_move_al_unchecked@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@PAV123@QAV123@1AAV?$allocator@VButton@ui@core@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Uninitialized_move_al_unchecked@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@PAV123@QAV123@1AAV?$allocator@VButton@ui@core@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z ENDP ; std::_Uninitialized_move_al_unchecked<core::ui::Button *,core::ui::Button *,std::allocator<core::ui::Button> >
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Ptr_move_cat@VButton@ui@core@@V123@@std@@YA?AU_General_ptr_iterator_tag@0@ABQAVButton@ui@core@@0@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Ptr_move_cat@VButton@ui@core@@V123@@std@@YA?AU_General_ptr_iterator_tag@0@ABQAVButton@ui@core@@0@Z PROC ; std::_Ptr_move_cat<core::ui::Button,core::ui::Button>, COMDAT

; 1086 : 	{	// return pointer move optimization category for pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1087 : 	return {};

  00004	33 c0		 xor	 eax, eax
  00006	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  00009	8a 45 ff	 mov	 al, BYTE PTR $T1[ebp]

; 1088 : 	}

  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
??$_Ptr_move_cat@VButton@ui@core@@V123@@std@@YA?AU_General_ptr_iterator_tag@0@ABQAVButton@ui@core@@0@Z ENDP ; std::_Ptr_move_cat<core::ui::Button,core::ui::Button>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Get_unwrapped_n@VButton@ui@core@@H$0A@@std@@YAPAVButton@ui@core@@QAV123@H@Z
_TEXT	SEGMENT
__Src$ = 8						; size = 4
___formal$ = 12						; size = 4
??$_Get_unwrapped_n@VButton@ui@core@@H$0A@@std@@YAPAVButton@ui@core@@QAV123@H@Z PROC ; std::_Get_unwrapped_n<core::ui::Button,int,0>, COMDAT

; 808  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 809  : 	return (_Src);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Src$[ebp]

; 810  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Get_unwrapped_n@VButton@ui@core@@H$0A@@std@@YAPAVButton@ui@core@@QAV123@H@Z ENDP ; std::_Get_unwrapped_n<core::ui::Button,int,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Idl_distance1@PAVButton@ui@core@@PAV123@@std@@YAHABQAVButton@ui@core@@0Urandom_access_iterator_tag@0@@Z
_TEXT	SEGMENT
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
___formal$ = 16						; size = 1
??$_Idl_distance1@PAVButton@ui@core@@PAV123@@std@@YAHABQAVButton@ui@core@@0Urandom_access_iterator_tag@0@@Z PROC ; std::_Idl_distance1<core::ui::Button *,core::ui::Button *>, COMDAT

; 967  : 	{	// _Idl_distance for random-access iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 968  : 	return (static_cast<_Iter_diff_t<_Checked>>(_Last - _First));

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00006	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00009	8b 00		 mov	 eax, DWORD PTR [eax]
  0000b	2b 01		 sub	 eax, DWORD PTR [ecx]
  0000d	c1 f8 05	 sar	 eax, 5

; 969  : 	}

  00010	5d		 pop	 ebp
  00011	c3		 ret	 0
??$_Idl_distance1@PAVButton@ui@core@@PAV123@@std@@YAHABQAVButton@ui@core@@0Urandom_access_iterator_tag@0@@Z ENDP ; std::_Idl_distance1<core::ui::Button *,core::ui::Button *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Idl_distance@PAVButton@ui@core@@PAV123@@std@@YAHABQAVButton@ui@core@@0@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
??$_Idl_distance@PAVButton@ui@core@@PAV123@@std@@YAHABQAVButton@ui@core@@0@Z PROC ; std::_Idl_distance<core::ui::Button *,core::ui::Button *>, COMDAT

; 974  : 	{	// tries to get the distance between _First and _Last if they are random-access iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 975  : 	return (_Idl_distance1<_Checked>(_First, _Last, _Iter_cat_t<_Iter>()));

  00004	0f b6 45 ff	 movzx	 eax, BYTE PTR $T1[ebp]
  00008	50		 push	 eax
  00009	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  0000c	51		 push	 ecx
  0000d	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  00010	52		 push	 edx
  00011	e8 00 00 00 00	 call	 ??$_Idl_distance1@PAVButton@ui@core@@PAV123@@std@@YAHABQAVButton@ui@core@@0Urandom_access_iterator_tag@0@@Z ; std::_Idl_distance1<core::ui::Button *,core::ui::Button *>
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH

; 976  : 	}

  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
??$_Idl_distance@PAVButton@ui@core@@PAV123@@std@@YAHABQAVButton@ui@core@@0@Z ENDP ; std::_Idl_distance<core::ui::Button *,core::ui::Button *>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$_Get_unwrapped@VButton@ui@core@@@std@@YAPAVButton@ui@core@@QAV123@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Get_unwrapped@VButton@ui@core@@@std@@YAPAVButton@ui@core@@QAV123@@Z PROC ; std::_Get_unwrapped<core::ui::Button>, COMDAT

; 662  : 	{	// special case already-unwrapped pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 663  : 	return (_Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 664  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Get_unwrapped@VButton@ui@core@@@std@@YAPAVButton@ui@core@@QAV123@@Z ENDP ; std::_Get_unwrapped<core::ui::Button>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\type_traits
;	COMDAT ??$move@AAV?$allocator@VButton@ui@core@@@std@@@std@@YA$$QAV?$allocator@VButton@ui@core@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$allocator@VButton@ui@core@@@std@@@std@@YA$$QAV?$allocator@VButton@ui@core@@@0@AAV10@@Z PROC ; std::move<std::allocator<core::ui::Button> &>, COMDAT

; 1588 : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1589 : 	return (static_cast<remove_reference_t<_Ty>&&>(_Arg));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1590 : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAV?$allocator@VButton@ui@core@@@std@@@std@@YA$$QAV?$allocator@VButton@ui@core@@@0@AAV10@@Z ENDP ; std::move<std::allocator<core::ui::Button> &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@QAV123@0PAV123@AAV?$allocator@VButton@ui@core@@@0@@Z
_TEXT	SEGMENT
__ULast$ = -16						; size = 4
__UDest$ = -12						; size = 4
__UFirst$ = -8						; size = 4
$T1 = -2						; size = 1
$T2 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_copy@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@QAV123@0PAV123@AAV?$allocator@VButton@ui@core@@@0@@Z PROC ; std::_Uninitialized_copy<core::ui::Button *,core::ui::Button *,std::allocator<core::ui::Button> >, COMDAT

; 209  : 	{	// copy [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 210  : 		// note: only called internally from elsewhere in the STL
; 211  : 	const auto _UFirst = _Get_unwrapped(_First);

  00006	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Get_unwrapped@VButton@ui@core@@@std@@YAPAVButton@ui@core@@QAV123@@Z ; std::_Get_unwrapped<core::ui::Button>
  0000f	83 c4 04	 add	 esp, 4
  00012	89 45 f8	 mov	 DWORD PTR __UFirst$[ebp], eax

; 212  : 	const auto _ULast = _Get_unwrapped(_Last);

  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 ??$_Get_unwrapped@VButton@ui@core@@@std@@YAPAVButton@ui@core@@QAV123@@Z ; std::_Get_unwrapped<core::ui::Button>
  0001e	83 c4 04	 add	 esp, 4
  00021	89 45 f0	 mov	 DWORD PTR __ULast$[ebp], eax

; 213  : 	const auto _UDest = _Get_unwrapped_n(_Dest, _Idl_distance<_InIt>(_UFirst, _ULast));

  00024	8d 55 f0	 lea	 edx, DWORD PTR __ULast$[ebp]
  00027	52		 push	 edx
  00028	8d 45 f8	 lea	 eax, DWORD PTR __UFirst$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ??$_Idl_distance@PAVButton@ui@core@@PAV123@@std@@YAHABQAVButton@ui@core@@0@Z ; std::_Idl_distance<core::ui::Button *,core::ui::Button *>
  00031	83 c4 08	 add	 esp, 8
  00034	50		 push	 eax
  00035	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  00038	51		 push	 ecx
  00039	e8 00 00 00 00	 call	 ??$_Get_unwrapped_n@VButton@ui@core@@H$0A@@std@@YAPAVButton@ui@core@@QAV123@H@Z ; std::_Get_unwrapped_n<core::ui::Button,int,0>
  0003e	83 c4 08	 add	 esp, 8
  00041	89 45 f4	 mov	 DWORD PTR __UDest$[ebp], eax

; 214  : 	_Seek_wrapped(_Dest,

  00044	8d 55 f4	 lea	 edx, DWORD PTR __UDest$[ebp]
  00047	52		 push	 edx
  00048	8d 45 f8	 lea	 eax, DWORD PTR __UFirst$[ebp]
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ??$_Ptr_copy_cat@VButton@ui@core@@V123@@std@@YA?AU_General_ptr_iterator_tag@0@ABQAVButton@ui@core@@0@Z ; std::_Ptr_copy_cat<core::ui::Button,core::ui::Button>
  00051	83 c4 08	 add	 esp, 8
  00054	88 45 ff	 mov	 BYTE PTR $T2[ebp], al
  00057	51		 push	 ecx
  00058	8b cc		 mov	 ecx, esp
  0005a	8d 55 fe	 lea	 edx, DWORD PTR $T1[ebp]
  0005d	52		 push	 edx
  0005e	e8 00 00 00 00	 call	 ??$?0U?$integral_constant@_N$00@std@@@_Unused_parameter@std@@QAE@$$QAU?$integral_constant@_N$00@1@@Z ; std::_Unused_parameter::_Unused_parameter<std::integral_constant<bool,1> >
  00063	0f b6 45 ff	 movzx	 eax, BYTE PTR $T2[ebp]
  00067	50		 push	 eax
  00068	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  0006b	51		 push	 ecx
  0006c	8b 55 f4	 mov	 edx, DWORD PTR __UDest$[ebp]
  0006f	52		 push	 edx
  00070	8b 45 f0	 mov	 eax, DWORD PTR __ULast$[ebp]
  00073	50		 push	 eax
  00074	8b 4d f8	 mov	 ecx, DWORD PTR __UFirst$[ebp]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 ??$_Uninitialized_copy_al_unchecked@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@PAV123@QAV123@1AAV?$allocator@VButton@ui@core@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z ; std::_Uninitialized_copy_al_unchecked<core::ui::Button *,core::ui::Button *,std::allocator<core::ui::Button> >
  0007d	83 c4 18	 add	 esp, 24			; 00000018H
  00080	50		 push	 eax
  00081	8d 55 10	 lea	 edx, DWORD PTR __Dest$[ebp]
  00084	52		 push	 edx
  00085	e8 00 00 00 00	 call	 ??$_Seek_wrapped@VButton@ui@core@@@std@@YAXAAPAVButton@ui@core@@QAV123@@Z ; std::_Seek_wrapped<core::ui::Button>
  0008a	83 c4 08	 add	 esp, 8

; 215  : 		_Uninitialized_copy_al_unchecked(_UFirst, _ULast, _UDest, _Al,
; 216  : 			_Ptr_copy_cat(_UFirst, _UDest),
; 217  : 			_Uses_default_construct_t<_Alloc, decltype(_Unfancy(_UDest)), decltype(*_UFirst)>()));
; 218  : 
; 219  : 	return (_Dest);

  0008d	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 220  : 	}

  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c3		 ret	 0
??$_Uninitialized_copy@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@QAV123@0PAV123@AAV?$allocator@VButton@ui@core@@@0@@Z ENDP ; std::_Uninitialized_copy<core::ui::Button *,core::ui::Button *,std::allocator<core::ui::Button> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z PROC ; std::_Allocate<8,std::_Default_allocate_traits,0>, COMDAT

; 180  : 	{	// allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 181  :  #if defined(_M_IX86) || defined(_M_X64)
; 182  : 	if (_Bytes >= _Big_allocation_threshold)

  00003	81 7d 08 00 10
	00 00		 cmp	 DWORD PTR __Bytes$[ebp], 4096 ; 00001000H
  0000a	72 0e		 jb	 SHORT $LN2@Allocate

; 183  : 		{	// boost the alignment of big allocations to help autovectorization
; 184  : 		return (_Allocate_manually_vector_aligned<_Traits>(_Bytes));

  0000c	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  0000f	50		 push	 eax
  00010	e8 00 00 00 00	 call	 ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPAXI@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
  00015	83 c4 04	 add	 esp, 4
  00018	eb 16		 jmp	 SHORT $LN1@Allocate
$LN2@Allocate:

; 185  : 		}
; 186  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 187  : 
; 188  : 	if (_Bytes != 0)

  0001a	83 7d 08 00	 cmp	 DWORD PTR __Bytes$[ebp], 0
  0001e	74 0e		 je	 SHORT $LN3@Allocate

; 189  : 		{
; 190  : 		return (_Traits::_Allocate(_Bytes));

  00020	8b 4d 08	 mov	 ecx, DWORD PTR __Bytes$[ebp]
  00023	51		 push	 ecx
  00024	e8 00 00 00 00	 call	 ?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ; std::_Default_allocate_traits::_Allocate
  00029	83 c4 04	 add	 esp, 4
  0002c	eb 02		 jmp	 SHORT $LN1@Allocate
$LN3@Allocate:

; 191  : 		}
; 192  : 
; 193  : 	return (nullptr);

  0002e	33 c0		 xor	 eax, eax
$LN1@Allocate:

; 194  : 	}

  00030	5d		 pop	 ebp
  00031	c3		 ret	 0
??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ENDP ; std::_Allocate<8,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Get_size_of_n@$0CA@@std@@YAII@Z
_TEXT	SEGMENT
__Max_possible$ = -8					; size = 4
__Result$ = -4						; size = 4
__Count$ = 8						; size = 4
??$_Get_size_of_n@$0CA@@std@@YAII@Z PROC		; std::_Get_size_of_n<32>, COMDAT

; 23   : 	{	// gets the size of _Count copies of a type sized _Ty_size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 24   : 	constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

  00006	c7 45 f8 ff ff
	ff 07		 mov	 DWORD PTR __Max_possible$[ebp], 134217727 ; 07ffffffH

; 25   : 	size_t _Result = _Count * _Ty_size;

  0000d	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  00010	c1 e0 05	 shl	 eax, 5
  00013	89 45 fc	 mov	 DWORD PTR __Result$[ebp], eax

; 26   : 	if (_Max_possible < _Count)

  00016	81 7d 08 ff ff
	ff 07		 cmp	 DWORD PTR __Count$[ebp], 134217727 ; 07ffffffH
  0001d	76 07		 jbe	 SHORT $LN2@Get_size_o

; 27   : 		{	// multiply overflow, try allocating all of memory and assume the
; 28   : 			// allocation function will throw bad_alloc
; 29   : 		_Result = static_cast<size_t>(-1);

  0001f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __Result$[ebp], -1
$LN2@Get_size_o:

; 30   : 		}
; 31   : 
; 32   : 	return (_Result);

  00026	8b 45 fc	 mov	 eax, DWORD PTR __Result$[ebp]

; 33   : 	}

  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??$_Get_size_of_n@$0CA@@std@@YAII@Z ENDP		; std::_Get_size_of_n<32>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\utility
;	COMDAT ??$_Min_value@I@std@@YAABIABI0@Z
_TEXT	SEGMENT
$T1 = -8						; size = 4
tv65 = -4						; size = 4
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Min_value@I@std@@YAABIABI0@Z PROC			; std::_Min_value<unsigned int>, COMDAT

; 23   : 	{	// return smaller of _Left and _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8

; 24   : 	return (_Right < _Left ? _Right : _Left);

  00006	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00009	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0000c	8b 10		 mov	 edx, DWORD PTR [eax]
  0000e	3b 11		 cmp	 edx, DWORD PTR [ecx]
  00010	73 08		 jae	 SHORT $LN3@Min_value
  00012	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00015	89 45 fc	 mov	 DWORD PTR tv65[ebp], eax
  00018	eb 06		 jmp	 SHORT $LN4@Min_value
$LN3@Min_value:
  0001a	8b 4d 08	 mov	 ecx, DWORD PTR __Left$[ebp]
  0001d	89 4d fc	 mov	 DWORD PTR tv65[ebp], ecx
$LN4@Min_value:
  00020	8b 55 fc	 mov	 edx, DWORD PTR tv65[ebp]
  00023	89 55 f8	 mov	 DWORD PTR $T1[ebp], edx
  00026	8b 45 f8	 mov	 eax, DWORD PTR $T1[ebp]

; 25   : 	}

  00029	8b e5		 mov	 esp, ebp
  0002b	5d		 pop	 ebp
  0002c	c3		 ret	 0
??$_Min_value@I@std@@YAABIABI0@Z ENDP			; std::_Min_value<unsigned int>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory
;	COMDAT ??$_Uninitialized_move@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@QAV123@0PAV123@AAV?$allocator@VButton@ui@core@@@0@@Z
_TEXT	SEGMENT
__ULast$ = -16						; size = 4
__UDest$ = -12						; size = 4
__UFirst$ = -8						; size = 4
$T1 = -2						; size = 1
$T2 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
__Al$ = 20						; size = 4
??$_Uninitialized_move@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@QAV123@0PAV123@AAV?$allocator@VButton@ui@core@@@0@@Z PROC ; std::_Uninitialized_move<core::ui::Button *,core::ui::Button *,std::allocator<core::ui::Button> >, COMDAT

; 251  : 	{	// move [_First, _Last) to raw _Dest, using _Al

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 252  : 		// note: only called internally from elsewhere in the STL
; 253  : 	const auto _UFirst = _Get_unwrapped(_First);

  00006	8b 45 08	 mov	 eax, DWORD PTR __First$[ebp]
  00009	50		 push	 eax
  0000a	e8 00 00 00 00	 call	 ??$_Get_unwrapped@VButton@ui@core@@@std@@YAPAVButton@ui@core@@QAV123@@Z ; std::_Get_unwrapped<core::ui::Button>
  0000f	83 c4 04	 add	 esp, 4
  00012	89 45 f8	 mov	 DWORD PTR __UFirst$[ebp], eax

; 254  : 	const auto _ULast = _Get_unwrapped(_Last);

  00015	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 ??$_Get_unwrapped@VButton@ui@core@@@std@@YAPAVButton@ui@core@@QAV123@@Z ; std::_Get_unwrapped<core::ui::Button>
  0001e	83 c4 04	 add	 esp, 4
  00021	89 45 f0	 mov	 DWORD PTR __ULast$[ebp], eax

; 255  : 	const auto _UDest = _Get_unwrapped_n(_Dest, _Idl_distance<_InIt>(_UFirst, _ULast));

  00024	8d 55 f0	 lea	 edx, DWORD PTR __ULast$[ebp]
  00027	52		 push	 edx
  00028	8d 45 f8	 lea	 eax, DWORD PTR __UFirst$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ??$_Idl_distance@PAVButton@ui@core@@PAV123@@std@@YAHABQAVButton@ui@core@@0@Z ; std::_Idl_distance<core::ui::Button *,core::ui::Button *>
  00031	83 c4 08	 add	 esp, 8
  00034	50		 push	 eax
  00035	8b 4d 10	 mov	 ecx, DWORD PTR __Dest$[ebp]
  00038	51		 push	 ecx
  00039	e8 00 00 00 00	 call	 ??$_Get_unwrapped_n@VButton@ui@core@@H$0A@@std@@YAPAVButton@ui@core@@QAV123@H@Z ; std::_Get_unwrapped_n<core::ui::Button,int,0>
  0003e	83 c4 08	 add	 esp, 8
  00041	89 45 f4	 mov	 DWORD PTR __UDest$[ebp], eax

; 256  : 	_Seek_wrapped(_Dest,

  00044	8d 55 f4	 lea	 edx, DWORD PTR __UDest$[ebp]
  00047	52		 push	 edx
  00048	8d 45 f8	 lea	 eax, DWORD PTR __UFirst$[ebp]
  0004b	50		 push	 eax
  0004c	e8 00 00 00 00	 call	 ??$_Ptr_move_cat@VButton@ui@core@@V123@@std@@YA?AU_General_ptr_iterator_tag@0@ABQAVButton@ui@core@@0@Z ; std::_Ptr_move_cat<core::ui::Button,core::ui::Button>
  00051	83 c4 08	 add	 esp, 8
  00054	88 45 ff	 mov	 BYTE PTR $T2[ebp], al
  00057	51		 push	 ecx
  00058	8b cc		 mov	 ecx, esp
  0005a	8d 55 fe	 lea	 edx, DWORD PTR $T1[ebp]
  0005d	52		 push	 edx
  0005e	e8 00 00 00 00	 call	 ??$?0U?$integral_constant@_N$00@std@@@_Unused_parameter@std@@QAE@$$QAU?$integral_constant@_N$00@1@@Z ; std::_Unused_parameter::_Unused_parameter<std::integral_constant<bool,1> >
  00063	0f b6 45 ff	 movzx	 eax, BYTE PTR $T2[ebp]
  00067	50		 push	 eax
  00068	8b 4d 14	 mov	 ecx, DWORD PTR __Al$[ebp]
  0006b	51		 push	 ecx
  0006c	8b 55 f4	 mov	 edx, DWORD PTR __UDest$[ebp]
  0006f	52		 push	 edx
  00070	8b 45 f0	 mov	 eax, DWORD PTR __ULast$[ebp]
  00073	50		 push	 eax
  00074	8b 4d f8	 mov	 ecx, DWORD PTR __UFirst$[ebp]
  00077	51		 push	 ecx
  00078	e8 00 00 00 00	 call	 ??$_Uninitialized_move_al_unchecked@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@PAV123@QAV123@1AAV?$allocator@VButton@ui@core@@@0@U_General_ptr_iterator_tag@0@U_Unused_parameter@0@@Z ; std::_Uninitialized_move_al_unchecked<core::ui::Button *,core::ui::Button *,std::allocator<core::ui::Button> >
  0007d	83 c4 18	 add	 esp, 24			; 00000018H
  00080	50		 push	 eax
  00081	8d 55 10	 lea	 edx, DWORD PTR __Dest$[ebp]
  00084	52		 push	 edx
  00085	e8 00 00 00 00	 call	 ??$_Seek_wrapped@VButton@ui@core@@@std@@YAXAAPAVButton@ui@core@@QAV123@@Z ; std::_Seek_wrapped<core::ui::Button>
  0008a	83 c4 08	 add	 esp, 8

; 257  : 		_Uninitialized_move_al_unchecked(_UFirst, _ULast, _UDest, _Al,
; 258  : 			_Ptr_move_cat(_UFirst, _UDest),
; 259  : 			_Uses_default_construct_t<_Alloc, decltype(_Unfancy(_UDest)), decltype(_STD move(*_UFirst))>()));
; 260  : 	return (_Dest);

  0008d	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]

; 261  : 	}

  00090	8b e5		 mov	 esp, ebp
  00092	5d		 pop	 ebp
  00093	c3		 ret	 0
??$_Uninitialized_move@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@QAV123@0PAV123@AAV?$allocator@VButton@ui@core@@@0@@Z ENDP ; std::_Uninitialized_move<core::ui::Button *,core::ui::Button *,std::allocator<core::ui::Button> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Destroy_range1@V?$allocator@VButton@ui@core@@@std@@@std@@YAXPAVButton@ui@core@@0AAV?$allocator@VButton@ui@core@@@0@U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
___formal$ = 16						; size = 4
___formal$ = 20						; size = 1
??$_Destroy_range1@V?$allocator@VButton@ui@core@@@std@@@std@@YAXPAVButton@ui@core@@0AAV?$allocator@VButton@ui@core@@@0@U?$integral_constant@_N$00@0@@Z PROC ; std::_Destroy_range1<std::allocator<core::ui::Button> >, COMDAT

; 1145 : 	{	// destroy [_First, _Last), trivially destructible and default destroy

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1146 : 		// nothing to do
; 1147 : 	}

  00003	5d		 pop	 ebp
  00004	c3		 ret	 0
??$_Destroy_range1@V?$allocator@VButton@ui@core@@@std@@@std@@YAXPAVButton@ui@core@@0AAV?$allocator@VButton@ui@core@@@0@U?$integral_constant@_N$00@0@@Z ENDP ; std::_Destroy_range1<std::allocator<core::ui::Button> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Pocma@V?$allocator@VButton@ui@core@@@std@@@std@@YAXAAV?$allocator@VButton@ui@core@@@0@0U?$integral_constant@_N$00@0@@Z
_TEXT	SEGMENT
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
___formal$ = 16						; size = 1
??$_Pocma@V?$allocator@VButton@ui@core@@@std@@@std@@YAXAAV?$allocator@VButton@ui@core@@@0@0U?$integral_constant@_N$00@0@@Z PROC ; std::_Pocma<std::allocator<core::ui::Button> >, COMDAT

; 1088 : 	{	// propagate on container move assignment

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1089 : 	_Left = _STD move(_Right);

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Right$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??$move@AAV?$allocator@VButton@ui@core@@@std@@@std@@YA$$QAV?$allocator@VButton@ui@core@@@0@AAV10@@Z ; std::move<std::allocator<core::ui::Button> &>
  0000c	83 c4 04	 add	 esp, 4

; 1090 : 	}

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
??$_Pocma@V?$allocator@VButton@ui@core@@@std@@@std@@YAXAAV?$allocator@VButton@ui@core@@@0@0U?$integral_constant@_N$00@0@@Z ENDP ; std::_Pocma<std::allocator<core::ui::Button> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z PROC		; std::_Deallocate<8,0>, COMDAT

; 199  : 	{	// deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 200  :  #if defined(_M_IX86) || defined(_M_X64)
; 201  : 	if (_Bytes >= _Big_allocation_threshold)

  00003	81 7d 0c 00 10
	00 00		 cmp	 DWORD PTR __Bytes$[ebp], 4096 ; 00001000H
  0000a	72 10		 jb	 SHORT $LN2@Deallocate

; 202  : 		{	// boost the alignment of big allocations to help autovectorization
; 203  : 		_Adjust_manually_vector_aligned(_Ptr, _Bytes);

  0000c	8d 45 0c	 lea	 eax, DWORD PTR __Bytes$[ebp]
  0000f	50		 push	 eax
  00010	8d 4d 08	 lea	 ecx, DWORD PTR __Ptr$[ebp]
  00013	51		 push	 ecx
  00014	e8 00 00 00 00	 call	 ?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ; std::_Adjust_manually_vector_aligned
  00019	83 c4 08	 add	 esp, 8
$LN2@Deallocate:

; 204  : 		}
; 205  :  #endif /* defined(_M_IX86) || defined(_M_X64) */
; 206  : 
; 207  : 	::operator delete(_Ptr, _Bytes);

  0001c	8b 55 0c	 mov	 edx, DWORD PTR __Bytes$[ebp]
  0001f	52		 push	 edx
  00020	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00023	50		 push	 eax
  00024	e8 00 00 00 00	 call	 ??3@YAXPAXI@Z		; operator delete
  00029	83 c4 08	 add	 esp, 8

; 208  : 	}

  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ENDP		; std::_Deallocate<8,0>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Destroy_range@V?$allocator@VButton@ui@core@@@std@@@std@@YAXPAVButton@ui@core@@0AAV?$allocator@VButton@ui@core@@@0@@Z
_TEXT	SEGMENT
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Al$ = 16						; size = 4
??$_Destroy_range@V?$allocator@VButton@ui@core@@@std@@@std@@YAXPAVButton@ui@core@@0AAV?$allocator@VButton@ui@core@@@0@@Z PROC ; std::_Destroy_range<std::allocator<core::ui::Button> >, COMDAT

; 1154 : 	{	// destroy [_First, _Last), choose optimization

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1155 : 		// note that this is an optimization for debug mode codegen;
; 1156 : 		// in release mode the BE removes all of this
; 1157 : 	using _Val = typename _Alloc::value_type;
; 1158 : 	_Destroy_range1(_First, _Last, _Al, bool_constant<conjunction_v<

  00004	33 c0		 xor	 eax, eax
  00006	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  00009	0f b6 4d ff	 movzx	 ecx, BYTE PTR $T1[ebp]
  0000d	51		 push	 ecx
  0000e	8b 55 10	 mov	 edx, DWORD PTR __Al$[ebp]
  00011	52		 push	 edx
  00012	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00015	50		 push	 eax
  00016	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00019	51		 push	 ecx
  0001a	e8 00 00 00 00	 call	 ??$_Destroy_range1@V?$allocator@VButton@ui@core@@@std@@@std@@YAXPAVButton@ui@core@@0AAV?$allocator@VButton@ui@core@@@0@U?$integral_constant@_N$00@0@@Z ; std::_Destroy_range1<std::allocator<core::ui::Button> >
  0001f	83 c4 10	 add	 esp, 16			; 00000010H

; 1159 : 		is_trivially_destructible<_Val>,
; 1160 : 		_Uses_default_destroy<_Alloc, _Val *>>>{});
; 1161 : 	}

  00022	8b e5		 mov	 esp, ebp
  00024	5d		 pop	 ebp
  00025	c3		 ret	 0
??$_Destroy_range@V?$allocator@VButton@ui@core@@@std@@@std@@YAXPAVButton@ui@core@@0AAV?$allocator@VButton@ui@core@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<core::ui::Button> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@VButton@ui@core@@@std@@V?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 1
??$?0$$V@?$_Compressed_pair@V?$allocator@VButton@ui@core@@@std@@V?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<core::ui::Button>,std::_Vector_val<std::_Simple_types<core::ui::Button> >,1>::_Compressed_pair<std::allocator<core::ui::Button>,std::_Vector_val<std::_Simple_types<core::ui::Button> >,1><>, COMDAT
; _this$ = ecx

; 278  : 		{	// construct from forwarded values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 277  : 		: _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...)

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ??0?$allocator@VButton@ui@core@@@std@@QAE@XZ ; std::allocator<core::ui::Button>::allocator<core::ui::Button>
  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ??0?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@std@@QAE@XZ ; std::_Vector_val<std::_Simple_types<core::ui::Button> >::_Vector_val<std::_Simple_types<core::ui::Button> >

; 279  : 		}

  00017	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 04 00	 ret	 4
??$?0$$V@?$_Compressed_pair@V?$allocator@VButton@ui@core@@@std@@V?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<core::ui::Button>,std::_Vector_val<std::_Simple_types<core::ui::Button> >,1>::_Compressed_pair<std::allocator<core::ui::Button>,std::_Vector_val<std::_Simple_types<core::ui::Button> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$_Pocma@V?$allocator@VButton@ui@core@@@std@@@std@@YAXAAV?$allocator@VButton@ui@core@@@0@0@Z
_TEXT	SEGMENT
__Tag$ = -1						; size = 1
__Left$ = 8						; size = 4
__Right$ = 12						; size = 4
??$_Pocma@V?$allocator@VButton@ui@core@@@std@@@std@@YAXAAV?$allocator@VButton@ui@core@@@0@0@Z PROC ; std::_Pocma<std::allocator<core::ui::Button> >, COMDAT

; 1099 : 	{	// (maybe) propagate on container move assignment

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 1100 : 	typename allocator_traits<_Alloc>::propagate_on_container_move_assignment _Tag;
; 1101 : 	_Pocma(_Left, _Right, _Tag);

  00004	0f b6 45 ff	 movzx	 eax, BYTE PTR __Tag$[ebp]
  00008	50		 push	 eax
  00009	8b 4d 0c	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000c	51		 push	 ecx
  0000d	8b 55 08	 mov	 edx, DWORD PTR __Left$[ebp]
  00010	52		 push	 edx
  00011	e8 00 00 00 00	 call	 ??$_Pocma@V?$allocator@VButton@ui@core@@@std@@@std@@YAXAAV?$allocator@VButton@ui@core@@@0@0U?$integral_constant@_N$00@0@@Z ; std::_Pocma<std::allocator<core::ui::Button> >
  00016	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1102 : 	}

  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
??$_Pocma@V?$allocator@VButton@ui@core@@@std@@@std@@YAXAAV?$allocator@VButton@ui@core@@@0@0@Z ENDP ; std::_Pocma<std::allocator<core::ui::Button> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\type_traits
;	COMDAT ??$move@AAV?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@YA$$QAV?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAV?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@YA$$QAV?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@0@AAV10@@Z PROC ; std::move<std::vector<core::ui::Button,std::allocator<core::ui::Button> > &>, COMDAT

; 1588 : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1589 : 	return (static_cast<remove_reference_t<_Ty>&&>(_Arg));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1590 : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAV?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@YA$$QAV?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@0@AAV10@@Z ENDP ; std::move<std::vector<core::ui::Button,std::allocator<core::ui::Button> > &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef
;	COMDAT ??$addressof@V?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@YAPAV?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@0@AAV10@@Z
_TEXT	SEGMENT
__Val$ = 8						; size = 4
??$addressof@V?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@YAPAV?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@0@AAV10@@Z PROC ; std::addressof<std::vector<core::ui::Button,std::allocator<core::ui::Button> > >, COMDAT

; 329  : 	{	// return address of _Val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 330  : 	return (__builtin_addressof(_Val));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]

; 331  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$addressof@V?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@YAPAV?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@0@AAV10@@Z ENDP ; std::addressof<std::vector<core::ui::Button,std::allocator<core::ui::Button> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??$_Emplace_reallocate@VButton@ui@core@@@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEPAVButton@ui@core@@QAV234@$$QAV234@@Z
_TEXT	SEGMENT
tv206 = -56						; size = 4
__Newsize$ = -52					; size = 4
__Constructed_last$ = -48				; size = 4
__Oldsize$ = -44					; size = 4
__Newcapacity$ = -40					; size = 4
__Al$ = -36						; size = 4
__Constructed_first$ = -32				; size = 4
__Whereoff$ = -28					; size = 4
__Newvec$ = -24						; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -16						; size = 16
__Whereptr$ = 8						; size = 4
_<_Val_0>$ = 12						; size = 4
??$_Emplace_reallocate@VButton@ui@core@@@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEPAVButton@ui@core@@QAV234@$$QAV234@@Z PROC ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Emplace_reallocate<core::ui::Button>, COMDAT
; _this$ = ecx

; 942  : 		{	// reallocate and insert by perfectly forwarding _Val at _Whereptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??$_Emplace_reallocate@VButton@ui@core@@@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEPAVButton@ui@core@@QAV234@$$QAV234@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	83 ec 28	 sub	 esp, 40			; 00000028H
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	57		 push	 edi
  00018	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001d	33 c5		 xor	 eax, ebp
  0001f	50		 push	 eax
  00020	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp+4]
  00023	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00029	89 65 f0	 mov	 DWORD PTR __$EHRec$[ebp], esp
  0002c	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 943  : 			// pre: !_Has_unused_capacity()
; 944  : 		const size_type _Whereoff = static_cast<size_type>(_Whereptr - this->_Myfirst());

  0002f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00032	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myfirst
  00037	8b 4d 08	 mov	 ecx, DWORD PTR __Whereptr$[ebp]
  0003a	2b 08		 sub	 ecx, DWORD PTR [eax]
  0003c	c1 f9 05	 sar	 ecx, 5
  0003f	89 4d e4	 mov	 DWORD PTR __Whereoff$[ebp], ecx

; 945  : 		_Alty& _Al = this->_Getal();

  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAV?$allocator@VButton@ui@core@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Getal
  0004a	89 45 dc	 mov	 DWORD PTR __Al$[ebp], eax

; 946  : 		const size_type _Oldsize = size();

  0004d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00050	e8 00 00 00 00	 call	 ?size@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QBEIXZ ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::size
  00055	89 45 d4	 mov	 DWORD PTR __Oldsize$[ebp], eax

; 947  : 
; 948  : 		if (_Oldsize == max_size())

  00058	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0005b	e8 00 00 00 00	 call	 ?max_size@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QBEIXZ ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::max_size
  00060	39 45 d4	 cmp	 DWORD PTR __Oldsize$[ebp], eax
  00063	75 05		 jne	 SHORT $LN2@Emplace_re

; 949  : 			{
; 950  : 			_Xlength();

  00065	e8 00 00 00 00	 call	 ?_Xlength@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@CAXXZ ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Xlength
$LN2@Emplace_re:

; 951  : 			}
; 952  : 
; 953  : 		const size_type _Newsize = _Oldsize + 1;

  0006a	8b 55 d4	 mov	 edx, DWORD PTR __Oldsize$[ebp]
  0006d	83 c2 01	 add	 edx, 1
  00070	89 55 cc	 mov	 DWORD PTR __Newsize$[ebp], edx

; 954  : 		const size_type _Newcapacity = _Calculate_growth(_Newsize);

  00073	8b 45 cc	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00076	50		 push	 eax
  00077	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0007a	e8 00 00 00 00	 call	 ?_Calculate_growth@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@ABEII@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Calculate_growth
  0007f	89 45 d8	 mov	 DWORD PTR __Newcapacity$[ebp], eax

; 955  : 
; 956  : 		const pointer _Newvec = _Al.allocate(_Newcapacity);

  00082	8b 4d d8	 mov	 ecx, DWORD PTR __Newcapacity$[ebp]
  00085	51		 push	 ecx
  00086	8b 4d dc	 mov	 ecx, DWORD PTR __Al$[ebp]
  00089	e8 00 00 00 00	 call	 ?allocate@?$allocator@VButton@ui@core@@@std@@QAEPAVButton@ui@core@@I@Z ; std::allocator<core::ui::Button>::allocate
  0008e	89 45 e8	 mov	 DWORD PTR __Newvec$[ebp], eax

; 957  : 		const pointer _Constructed_last = _Newvec + _Whereoff + 1;

  00091	8b 55 e4	 mov	 edx, DWORD PTR __Whereoff$[ebp]
  00094	c1 e2 05	 shl	 edx, 5
  00097	8b 45 e8	 mov	 eax, DWORD PTR __Newvec$[ebp]
  0009a	8d 4c 10 20	 lea	 ecx, DWORD PTR [eax+edx+32]
  0009e	89 4d d0	 mov	 DWORD PTR __Constructed_last$[ebp], ecx

; 958  : 		pointer _Constructed_first = _Constructed_last;

  000a1	8b 55 d0	 mov	 edx, DWORD PTR __Constructed_last$[ebp]
  000a4	89 55 e0	 mov	 DWORD PTR __Constructed_first$[ebp], edx

; 959  : 
; 960  : 		_TRY_BEGIN

  000a7	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+12], 0

; 961  : 		_Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

  000ae	8b 45 e4	 mov	 eax, DWORD PTR __Whereoff$[ebp]
  000b1	c1 e0 05	 shl	 eax, 5
  000b4	03 45 e8	 add	 eax, DWORD PTR __Newvec$[ebp]
  000b7	50		 push	 eax
  000b8	e8 00 00 00 00	 call	 ??$_Unfancy@VButton@ui@core@@@std@@YAPAVButton@ui@core@@PAV123@@Z ; std::_Unfancy<core::ui::Button>
  000bd	83 c4 04	 add	 esp, 4
  000c0	89 45 c8	 mov	 DWORD PTR tv206[ebp], eax
  000c3	8b 4d 0c	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
  000c6	51		 push	 ecx
  000c7	e8 00 00 00 00	 call	 ??$forward@VButton@ui@core@@@std@@YA$$QAVButton@ui@core@@AAV123@@Z ; std::forward<core::ui::Button>
  000cc	83 c4 04	 add	 esp, 4
  000cf	50		 push	 eax
  000d0	8b 55 c8	 mov	 edx, DWORD PTR tv206[ebp]
  000d3	52		 push	 edx
  000d4	8b 45 dc	 mov	 eax, DWORD PTR __Al$[ebp]
  000d7	50		 push	 eax
  000d8	e8 00 00 00 00	 call	 ??$construct@VButton@ui@core@@V123@@?$_Default_allocator_traits@V?$allocator@VButton@ui@core@@@std@@@std@@SAXAAV?$allocator@VButton@ui@core@@@1@QAVButton@ui@core@@$$QAV345@@Z ; std::_Default_allocator_traits<std::allocator<core::ui::Button> >::construct<core::ui::Button,core::ui::Button>
  000dd	83 c4 0c	 add	 esp, 12			; 0000000cH

; 962  : 		_Constructed_first = _Newvec + _Whereoff;

  000e0	8b 4d e4	 mov	 ecx, DWORD PTR __Whereoff$[ebp]
  000e3	c1 e1 05	 shl	 ecx, 5
  000e6	03 4d e8	 add	 ecx, DWORD PTR __Newvec$[ebp]
  000e9	89 4d e0	 mov	 DWORD PTR __Constructed_first$[ebp], ecx

; 963  : 
; 964  : 		if (_Whereptr == this->_Mylast())

  000ec	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  000ef	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Mylast
  000f4	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
  000f7	3b 10		 cmp	 edx, DWORD PTR [eax]
  000f9	75 24		 jne	 SHORT $LN4@Emplace_re

; 965  : 			{	// at back, provide strong guarantee
; 966  : 			_Umove_if_noexcept(this->_Myfirst(), this->_Mylast(), _Newvec);

  000fb	8b 45 e8	 mov	 eax, DWORD PTR __Newvec$[ebp]
  000fe	50		 push	 eax
  000ff	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00102	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Mylast
  00107	8b 08		 mov	 ecx, DWORD PTR [eax]
  00109	51		 push	 ecx
  0010a	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0010d	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myfirst
  00112	8b 10		 mov	 edx, DWORD PTR [eax]
  00114	52		 push	 edx
  00115	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00118	e8 00 00 00 00	 call	 ?_Umove_if_noexcept@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEXPAVButton@ui@core@@00@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Umove_if_noexcept

; 967  : 			}
; 968  : 		else

  0011d	eb 46		 jmp	 SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 969  : 			{	// provide basic guarantee
; 970  : 			_Umove(this->_Myfirst(), _Whereptr, _Newvec);

  0011f	8b 45 e8	 mov	 eax, DWORD PTR __Newvec$[ebp]
  00122	50		 push	 eax
  00123	8b 4d 08	 mov	 ecx, DWORD PTR __Whereptr$[ebp]
  00126	51		 push	 ecx
  00127	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  0012a	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myfirst
  0012f	8b 10		 mov	 edx, DWORD PTR [eax]
  00131	52		 push	 edx
  00132	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00135	e8 00 00 00 00	 call	 ?_Umove@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEPAVButton@ui@core@@PAV345@00@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Umove

; 971  : 			_Constructed_first = _Newvec;

  0013a	8b 45 e8	 mov	 eax, DWORD PTR __Newvec$[ebp]
  0013d	89 45 e0	 mov	 DWORD PTR __Constructed_first$[ebp], eax

; 972  : 			_Umove(_Whereptr, this->_Mylast(), _Newvec + _Whereoff + 1);

  00140	8b 4d e4	 mov	 ecx, DWORD PTR __Whereoff$[ebp]
  00143	c1 e1 05	 shl	 ecx, 5
  00146	8b 55 e8	 mov	 edx, DWORD PTR __Newvec$[ebp]
  00149	8d 44 0a 20	 lea	 eax, DWORD PTR [edx+ecx+32]
  0014d	50		 push	 eax
  0014e	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00151	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Mylast
  00156	8b 08		 mov	 ecx, DWORD PTR [eax]
  00158	51		 push	 ecx
  00159	8b 55 08	 mov	 edx, DWORD PTR __Whereptr$[ebp]
  0015c	52		 push	 edx
  0015d	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00160	e8 00 00 00 00	 call	 ?_Umove@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEPAVButton@ui@core@@PAV345@00@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Umove
$LN5@Emplace_re:
  00165	eb 2f		 jmp	 SHORT $LN7@Emplace_re
__catch$??$_Emplace_reallocate@VButton@ui@core@@@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEPAVButton@ui@core@@QAV234@$$QAV234@@Z$0:

; 973  : 			}
; 974  : 		_CATCH_ALL
; 975  : 		_Destroy(_Constructed_first, _Constructed_last);

  00167	8b 45 d0	 mov	 eax, DWORD PTR __Constructed_last$[ebp]
  0016a	50		 push	 eax
  0016b	8b 4d e0	 mov	 ecx, DWORD PTR __Constructed_first$[ebp]
  0016e	51		 push	 ecx
  0016f	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00172	e8 00 00 00 00	 call	 ?_Destroy@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEXPAVButton@ui@core@@0@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Destroy

; 976  : 		_Al.deallocate(_Newvec, _Newcapacity);

  00177	8b 55 d8	 mov	 edx, DWORD PTR __Newcapacity$[ebp]
  0017a	52		 push	 edx
  0017b	8b 45 e8	 mov	 eax, DWORD PTR __Newvec$[ebp]
  0017e	50		 push	 eax
  0017f	8b 4d dc	 mov	 ecx, DWORD PTR __Al$[ebp]
  00182	e8 00 00 00 00	 call	 ?deallocate@?$allocator@VButton@ui@core@@@std@@QAEXQAVButton@ui@core@@I@Z ; std::allocator<core::ui::Button>::deallocate

; 977  : 		_RERAISE;

  00187	6a 00		 push	 0
  00189	6a 00		 push	 0
  0018b	e8 00 00 00 00	 call	 __CxxThrowException@8

; 978  : 		_CATCH_END

  00190	b8 00 00 00 00	 mov	 eax, $LN10@Emplace_re
  00195	c3		 ret	 0
$LN7@Emplace_re:
  00196	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
  0019d	eb 07		 jmp	 SHORT __tryend$??$_Emplace_reallocate@VButton@ui@core@@@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEPAVButton@ui@core@@QAV234@$$QAV234@@Z$1
$LN10@Emplace_re:
  0019f	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+12], -1
__tryend$??$_Emplace_reallocate@VButton@ui@core@@@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEPAVButton@ui@core@@QAV234@$$QAV234@@Z$1:

; 979  : 
; 980  : 		_Change_array(_Newvec, _Newsize, _Newcapacity);

  001a6	8b 4d d8	 mov	 ecx, DWORD PTR __Newcapacity$[ebp]
  001a9	51		 push	 ecx
  001aa	8b 55 cc	 mov	 edx, DWORD PTR __Newsize$[ebp]
  001ad	52		 push	 edx
  001ae	8b 45 e8	 mov	 eax, DWORD PTR __Newvec$[ebp]
  001b1	50		 push	 eax
  001b2	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001b5	e8 00 00 00 00	 call	 ?_Change_array@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEXQAVButton@ui@core@@II@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Change_array

; 981  : 		return (this->_Myfirst() + _Whereoff);

  001ba	8b 75 e4	 mov	 esi, DWORD PTR __Whereoff$[ebp]
  001bd	c1 e6 05	 shl	 esi, 5
  001c0	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  001c3	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myfirst
  001c8	03 30		 add	 esi, DWORD PTR [eax]
  001ca	8b c6		 mov	 eax, esi
$LN6@Emplace_re:

; 982  : 		}

  001cc	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp+4]
  001cf	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  001d6	59		 pop	 ecx
  001d7	5f		 pop	 edi
  001d8	5e		 pop	 esi
  001d9	5b		 pop	 ebx
  001da	8b e5		 mov	 esp, ebp
  001dc	5d		 pop	 ebp
  001dd	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??$_Emplace_reallocate@VButton@ui@core@@@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEPAVButton@ui@core@@QAV234@$$QAV234@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a c4	 mov	 ecx, DWORD PTR [edx-60]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??$_Emplace_reallocate@VButton@ui@core@@@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEPAVButton@ui@core@@QAV234@$$QAV234@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??$_Emplace_reallocate@VButton@ui@core@@@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEPAVButton@ui@core@@QAV234@$$QAV234@@Z ENDP ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Emplace_reallocate<core::ui::Button>
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??$construct@VButton@ui@core@@V123@@?$_Default_allocator_traits@V?$allocator@VButton@ui@core@@@std@@@std@@SAXAAV?$allocator@VButton@ui@core@@@1@QAVButton@ui@core@@$$QAV345@@Z
_TEXT	SEGMENT
$T1 = -4						; size = 4
___formal$ = 8						; size = 4
__Ptr$ = 12						; size = 4
_<_Args_0>$ = 16					; size = 4
??$construct@VButton@ui@core@@V123@@?$_Default_allocator_traits@V?$allocator@VButton@ui@core@@@std@@@std@@SAXAAV?$allocator@VButton@ui@core@@@1@QAVButton@ui@core@@$$QAV345@@Z PROC ; std::_Default_allocator_traits<std::allocator<core::ui::Button> >::construct<core::ui::Button,core::ui::Button>, COMDAT

; 879  : 		{	// construct _Objty(_Types...) at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx

; 880  : 		::new (const_cast<void *>(static_cast<const volatile void *>(_Ptr)))

  00004	8b 45 0c	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00007	50		 push	 eax
  00008	6a 20		 push	 32			; 00000020H
  0000a	e8 00 00 00 00	 call	 ??2@YAPAXIPAX@Z		; operator new
  0000f	83 c4 08	 add	 esp, 8
  00012	89 45 fc	 mov	 DWORD PTR $T1[ebp], eax
  00015	8b 4d 10	 mov	 ecx, DWORD PTR _<_Args_0>$[ebp]
  00018	51		 push	 ecx
  00019	e8 00 00 00 00	 call	 ??$forward@VButton@ui@core@@@std@@YA$$QAVButton@ui@core@@AAV123@@Z ; std::forward<core::ui::Button>
  0001e	83 c4 04	 add	 esp, 4
  00021	50		 push	 eax
  00022	8b 4d fc	 mov	 ecx, DWORD PTR $T1[ebp]
  00025	e8 00 00 00 00	 call	 ??0Button@ui@core@@QAE@$$QAV012@@Z

; 881  : 			_Objty(_STD forward<_Types>(_Args)...);
; 882  : 		}

  0002a	8b e5		 mov	 esp, ebp
  0002c	5d		 pop	 ebp
  0002d	c3		 ret	 0
??$construct@VButton@ui@core@@V123@@?$_Default_allocator_traits@V?$allocator@VButton@ui@core@@@std@@@std@@SAXAAV?$allocator@VButton@ui@core@@@1@QAVButton@ui@core@@$$QAV345@@Z ENDP ; std::_Default_allocator_traits<std::allocator<core::ui::Button> >::construct<core::ui::Button,core::ui::Button>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xstddef
;	COMDAT ??$_Unfancy@VButton@ui@core@@@std@@YAPAVButton@ui@core@@PAV123@@Z
_TEXT	SEGMENT
__Ptr$ = 8						; size = 4
??$_Unfancy@VButton@ui@core@@@std@@YAPAVButton@ui@core@@PAV123@@Z PROC ; std::_Unfancy<core::ui::Button>, COMDAT

; 345  : 	{	// do nothing for plain pointers

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 346  : 	return (_Ptr);

  00003	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]

; 347  : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$_Unfancy@VButton@ui@core@@@std@@YAPAVButton@ui@core@@PAV123@@Z ENDP ; std::_Unfancy<core::ui::Button>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@VButton@ui@core@@@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEX$$QAVButton@ui@core@@@Z
_TEXT	SEGMENT
__Result$ = -12						; size = 4
tv142 = -8						; size = 4
_this$ = -4						; size = 4
_<_Val_0>$ = 8						; size = 4
??$_Emplace_back_with_unused_capacity@VButton@ui@core@@@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEX$$QAVButton@ui@core@@@Z PROC ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Emplace_back_with_unused_capacity<core::ui::Button>, COMDAT
; _this$ = ecx

; 900  : 		{	// insert by perfectly forwarding into element at end, provide strong guarantee

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 901  : 			// pre: _Has_unused_capacity()
; 902  : 		_Alty_traits::construct(this->_Getal(), _Unfancy(this->_Mylast()), _STD forward<_Valty>(_Val)...);

  00009	8b 45 08	 mov	 eax, DWORD PTR _<_Val_0>$[ebp]
  0000c	50		 push	 eax
  0000d	e8 00 00 00 00	 call	 ??$forward@VButton@ui@core@@@std@@YA$$QAVButton@ui@core@@AAV123@@Z ; std::forward<core::ui::Button>
  00012	83 c4 04	 add	 esp, 4
  00015	50		 push	 eax
  00016	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00019	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Mylast
  0001e	8b 08		 mov	 ecx, DWORD PTR [eax]
  00020	51		 push	 ecx
  00021	e8 00 00 00 00	 call	 ??$_Unfancy@VButton@ui@core@@@std@@YAPAVButton@ui@core@@PAV123@@Z ; std::_Unfancy<core::ui::Button>
  00026	83 c4 04	 add	 esp, 4
  00029	50		 push	 eax
  0002a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002d	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAV?$allocator@VButton@ui@core@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Getal
  00032	50		 push	 eax
  00033	e8 00 00 00 00	 call	 ??$construct@VButton@ui@core@@V123@@?$_Default_allocator_traits@V?$allocator@VButton@ui@core@@@std@@@std@@SAXAAV?$allocator@VButton@ui@core@@@1@QAVButton@ui@core@@$$QAV345@@Z ; std::_Default_allocator_traits<std::allocator<core::ui::Button> >::construct<core::ui::Button,core::ui::Button>
  00038	83 c4 0c	 add	 esp, 12			; 0000000cH

; 903  : 		_Orphan_range(this->_Mylast(), this->_Mylast());

  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Mylast
  00043	8b 10		 mov	 edx, DWORD PTR [eax]
  00045	52		 push	 edx
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Mylast
  0004e	8b 00		 mov	 eax, DWORD PTR [eax]
  00050	50		 push	 eax
  00051	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00054	e8 00 00 00 00	 call	 ?_Orphan_range@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@ABEXPAVButton@ui@core@@0@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Orphan_range

; 904  : 		_Ty& _Result = *this->_Mylast();

  00059	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Mylast
  00061	8b 08		 mov	 ecx, DWORD PTR [eax]
  00063	89 4d f4	 mov	 DWORD PTR __Result$[ebp], ecx

; 905  : 		++this->_Mylast();

  00066	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00069	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Mylast
  0006e	89 45 f8	 mov	 DWORD PTR tv142[ebp], eax
  00071	8b 55 f8	 mov	 edx, DWORD PTR tv142[ebp]
  00074	8b 02		 mov	 eax, DWORD PTR [edx]
  00076	83 c0 20	 add	 eax, 32			; 00000020H
  00079	8b 4d f8	 mov	 ecx, DWORD PTR tv142[ebp]
  0007c	89 01		 mov	 DWORD PTR [ecx], eax

; 906  : #if _HAS_CXX17
; 907  : 		return (_Result);
; 908  : #else /* ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv */
; 909  : 		(void)_Result;
; 910  : #endif /* _HAS_CXX17 */
; 911  : 		}

  0007e	8b e5		 mov	 esp, ebp
  00080	5d		 pop	 ebp
  00081	c2 04 00	 ret	 4
??$_Emplace_back_with_unused_capacity@VButton@ui@core@@@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEX$$QAVButton@ui@core@@@Z ENDP ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Emplace_back_with_unused_capacity<core::ui::Button>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\type_traits
;	COMDAT ??$forward@VButton@ui@core@@@std@@YA$$QAVButton@ui@core@@AAV123@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$forward@VButton@ui@core@@@std@@YA$$QAVButton@ui@core@@AAV123@@Z PROC ; std::forward<core::ui::Button>, COMDAT

; 1573 : 	{	// forward an lvalue as either an lvalue or an rvalue

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1574 : 	return (static_cast<_Ty&&>(_Arg));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1575 : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$forward@VButton@ui@core@@@std@@YA$$QAVButton@ui@core@@AAV123@@Z ENDP ; std::forward<core::ui::Button>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??$emplace_back@VButton@ui@core@@@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEX$$QAVButton@ui@core@@@Z
_TEXT	SEGMENT
__Result$ = -8						; size = 4
_this$ = -4						; size = 4
_<_Val_0>$ = 8						; size = 4
??$emplace_back@VButton@ui@core@@@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEX$$QAVButton@ui@core@@@Z PROC ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::emplace_back<core::ui::Button>, COMDAT
; _this$ = ecx

; 916  : 		{	// insert by perfectly forwarding into element at end, provide strong guarantee

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 917  : 		if (_Has_unused_capacity())

  00009	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?_Has_unused_capacity@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@ABE_NXZ ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Has_unused_capacity
  00011	0f b6 c0	 movzx	 eax, al
  00014	85 c0		 test	 eax, eax
  00016	74 17		 je	 SHORT $LN2@emplace_ba

; 918  : 			{
; 919  : 			return (_Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...));

  00018	8b 4d 08	 mov	 ecx, DWORD PTR _<_Val_0>$[ebp]
  0001b	51		 push	 ecx
  0001c	e8 00 00 00 00	 call	 ??$forward@VButton@ui@core@@@std@@YA$$QAVButton@ui@core@@AAV123@@Z ; std::forward<core::ui::Button>
  00021	83 c4 04	 add	 esp, 4
  00024	50		 push	 eax
  00025	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00028	e8 00 00 00 00	 call	 ??$_Emplace_back_with_unused_capacity@VButton@ui@core@@@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEX$$QAVButton@ui@core@@@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Emplace_back_with_unused_capacity<core::ui::Button>
  0002d	eb 23		 jmp	 SHORT $LN1@emplace_ba
$LN2@emplace_ba:

; 920  : 			}
; 921  : 
; 922  : 		_Ty& _Result = *_Emplace_reallocate(this->_Mylast(), _STD forward<_Valty>(_Val)...);

  0002f	8b 55 08	 mov	 edx, DWORD PTR _<_Val_0>$[ebp]
  00032	52		 push	 edx
  00033	e8 00 00 00 00	 call	 ??$forward@VButton@ui@core@@@std@@YA$$QAVButton@ui@core@@AAV123@@Z ; std::forward<core::ui::Button>
  00038	83 c4 04	 add	 esp, 4
  0003b	50		 push	 eax
  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Mylast
  00044	8b 00		 mov	 eax, DWORD PTR [eax]
  00046	50		 push	 eax
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	e8 00 00 00 00	 call	 ??$_Emplace_reallocate@VButton@ui@core@@@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEPAVButton@ui@core@@QAV234@$$QAV234@@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Emplace_reallocate<core::ui::Button>
  0004f	89 45 f8	 mov	 DWORD PTR __Result$[ebp], eax
$LN1@emplace_ba:

; 923  : #if _HAS_CXX17
; 924  : 		return (_Result);
; 925  : #else /* ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv */
; 926  : 		(void)_Result;
; 927  : #endif /* _HAS_CXX17 */
; 928  : 		}

  00052	8b e5		 mov	 esp, ebp
  00054	5d		 pop	 ebp
  00055	c2 04 00	 ret	 4
??$emplace_back@VButton@ui@core@@@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEX$$QAVButton@ui@core@@@Z ENDP ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::emplace_back<core::ui::Button>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\type_traits
;	COMDAT ??$move@AAVButton@ui@core@@@std@@YA$$QAVButton@ui@core@@AAV123@@Z
_TEXT	SEGMENT
__Arg$ = 8						; size = 4
??$move@AAVButton@ui@core@@@std@@YA$$QAVButton@ui@core@@AAV123@@Z PROC ; std::move<core::ui::Button &>, COMDAT

; 1588 : 	{	// forward _Arg as movable

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1589 : 	return (static_cast<remove_reference_t<_Ty>&&>(_Arg));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Arg$[ebp]

; 1590 : 	}

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??$move@AAVButton@ui@core@@@std@@YA$$QAVButton@ui@core@@AAV123@@Z ENDP ; std::move<core::ui::Button &>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\dev\tetris\src\menu.cpp
_TEXT	SEGMENT
tv169 = -32						; size = 8
_yOffset$1 = -24					; size = 4
tv165 = -20						; size = 4
tv69 = -16						; size = 4
_xOffset$2 = -12					; size = 4
_this$ = -8						; size = 4
_buttonIndex$3 = -4					; size = 4
_t_xOffset$ = 8						; size = 4
_t_yOffset$ = 12					; size = 4
_t_buttonAlign$ = 16					; size = 4
?Render@Menu@core@@QAEXHHW4ButtonAlign@2@@Z PROC	; core::Menu::Render
; _this$ = ecx

; 77   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 20	 sub	 esp, 32			; 00000020H
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 78   :     for (size_t buttonIndex = 0; buttonIndex < m_buttons.size(); ++buttonIndex)

  00009	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR _buttonIndex$3[ebp], 0
  00010	eb 09		 jmp	 SHORT $LN4@Render
$LN2@Render:
  00012	8b 45 fc	 mov	 eax, DWORD PTR _buttonIndex$3[ebp]
  00015	83 c0 01	 add	 eax, 1
  00018	89 45 fc	 mov	 DWORD PTR _buttonIndex$3[ebp], eax
$LN4@Render:
  0001b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0001e	83 c1 04	 add	 ecx, 4
  00021	e8 00 00 00 00	 call	 ?size@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QBEIXZ ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::size
  00026	39 45 fc	 cmp	 DWORD PTR _buttonIndex$3[ebp], eax
  00029	0f 83 e2 00 00
	00		 jae	 $LN3@Render

; 79   :     {
; 80   :         i32 xOffset = t_xOffset;

  0002f	8b 4d 08	 mov	 ecx, DWORD PTR _t_xOffset$[ebp]
  00032	89 4d f4	 mov	 DWORD PTR _xOffset$2[ebp], ecx

; 81   :         switch (t_buttonAlign)

  00035	8b 55 10	 mov	 edx, DWORD PTR _t_buttonAlign$[ebp]
  00038	89 55 f0	 mov	 DWORD PTR tv69[ebp], edx
  0003b	83 7d f0 00	 cmp	 DWORD PTR tv69[ebp], 0
  0003f	74 0e		 je	 SHORT $LN7@Render
  00041	83 7d f0 01	 cmp	 DWORD PTR tv69[ebp], 1
  00045	74 10		 je	 SHORT $LN8@Render
  00047	83 7d f0 02	 cmp	 DWORD PTR tv69[ebp], 2
  0004b	74 2f		 je	 SHORT $LN9@Render
  0004d	eb 4b		 jmp	 SHORT $LN5@Render
$LN7@Render:

; 82   :         {
; 83   :             case BUTTON_ALIGN_LEFT:
; 84   :             {
; 85   :                 xOffset = t_xOffset;

  0004f	8b 45 08	 mov	 eax, DWORD PTR _t_xOffset$[ebp]
  00052	89 45 f4	 mov	 DWORD PTR _xOffset$2[ebp], eax

; 86   :             } break;

  00055	eb 43		 jmp	 SHORT $LN5@Render
$LN8@Render:

; 87   :             
; 88   :             case BUTTON_ALIGN_CENTER:
; 89   :             {
; 90   :                 xOffset = t_xOffset - m_buttons[buttonIndex].GetWidth() / 2;

  00057	8b 4d fc	 mov	 ecx, DWORD PTR _buttonIndex$3[ebp]
  0005a	51		 push	 ecx
  0005b	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0005e	83 c1 04	 add	 ecx, 4
  00061	e8 00 00 00 00	 call	 ??A?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEAAVButton@ui@core@@I@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::operator[]
  00066	8b c8		 mov	 ecx, eax
  00068	e8 00 00 00 00	 call	 ?GetWidth@Button@ui@core@@QBEHXZ ; core::ui::Button::GetWidth
  0006d	99		 cdq
  0006e	2b c2		 sub	 eax, edx
  00070	d1 f8		 sar	 eax, 1
  00072	8b 55 08	 mov	 edx, DWORD PTR _t_xOffset$[ebp]
  00075	2b d0		 sub	 edx, eax
  00077	89 55 f4	 mov	 DWORD PTR _xOffset$2[ebp], edx

; 91   :             } break;

  0007a	eb 1e		 jmp	 SHORT $LN5@Render
$LN9@Render:

; 92   :             
; 93   :             case BUTTON_ALIGN_RIGHT:
; 94   :             {
; 95   :                 xOffset = t_xOffset - m_buttons[buttonIndex].GetWidth();

  0007c	8b 45 fc	 mov	 eax, DWORD PTR _buttonIndex$3[ebp]
  0007f	50		 push	 eax
  00080	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00083	83 c1 04	 add	 ecx, 4
  00086	e8 00 00 00 00	 call	 ??A?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEAAVButton@ui@core@@I@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::operator[]
  0008b	8b c8		 mov	 ecx, eax
  0008d	e8 00 00 00 00	 call	 ?GetWidth@Button@ui@core@@QBEHXZ ; core::ui::Button::GetWidth
  00092	8b 4d 08	 mov	 ecx, DWORD PTR _t_xOffset$[ebp]
  00095	2b c8		 sub	 ecx, eax
  00097	89 4d f4	 mov	 DWORD PTR _xOffset$2[ebp], ecx
$LN5@Render:

; 96   :             } break;
; 97   :         }
; 98   :         
; 99   :         i32 yOffset = t_yOffset + 

  0009a	8b 55 fc	 mov	 edx, DWORD PTR _buttonIndex$3[ebp]
  0009d	52		 push	 edx
  0009e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000a1	83 c1 04	 add	 ecx, 4
  000a4	e8 00 00 00 00	 call	 ??A?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEAAVButton@ui@core@@I@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::operator[]
  000a9	8b c8		 mov	 ecx, eax
  000ab	e8 00 00 00 00	 call	 ?GetHeight@Button@ui@core@@QBEHXZ ; core::ui::Button::GetHeight
  000b0	f3 0f 2a c0	 cvtsi2ss xmm0, eax
  000b4	f3 0f 59 05 00
	00 00 00	 mulss	 xmm0, DWORD PTR __real@3fc00000
  000bc	8b 45 fc	 mov	 eax, DWORD PTR _buttonIndex$3[ebp]
  000bf	89 45 ec	 mov	 DWORD PTR tv165[ebp], eax
  000c2	f2 0f 2a 4d ec	 cvtsi2sd xmm1, DWORD PTR tv165[ebp]
  000c7	8b 4d ec	 mov	 ecx, DWORD PTR tv165[ebp]
  000ca	c1 e9 1f	 shr	 ecx, 31			; 0000001fH
  000cd	f2 0f 58 0c cd
	00 00 00 00	 addsd	 xmm1, QWORD PTR __xmm@41f00000000000000000000000000000[ecx*8]
  000d6	f2 0f 11 4d e0	 movsd	 QWORD PTR tv169[ebp], xmm1
  000db	f2 0f 5a 4d e0	 cvtsd2ss xmm1, QWORD PTR tv169[ebp]
  000e0	f3 0f 59 c1	 mulss	 xmm0, xmm1
  000e4	f3 0f 2c d0	 cvttss2si edx, xmm0
  000e8	03 55 0c	 add	 edx, DWORD PTR _t_yOffset$[ebp]
  000eb	89 55 e8	 mov	 DWORD PTR _yOffset$1[ebp], edx

; 100  :             (i32)(m_buttons[buttonIndex].GetHeight() * 1.5f * buttonIndex);
; 101  :         m_buttons[buttonIndex].Render(xOffset, yOffset);

  000ee	8b 45 e8	 mov	 eax, DWORD PTR _yOffset$1[ebp]
  000f1	50		 push	 eax
  000f2	8b 4d f4	 mov	 ecx, DWORD PTR _xOffset$2[ebp]
  000f5	51		 push	 ecx
  000f6	8b 55 fc	 mov	 edx, DWORD PTR _buttonIndex$3[ebp]
  000f9	52		 push	 edx
  000fa	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  000fd	83 c1 04	 add	 ecx, 4
  00100	e8 00 00 00 00	 call	 ??A?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEAAVButton@ui@core@@I@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::operator[]
  00105	8b c8		 mov	 ecx, eax
  00107	e8 00 00 00 00	 call	 ?Render@Button@ui@core@@QAEXHH@Z ; core::ui::Button::Render

; 102  :     }

  0010c	e9 01 ff ff ff	 jmp	 $LN2@Render
$LN3@Render:

; 103  : }

  00111	8b e5		 mov	 esp, ebp
  00113	5d		 pop	 ebp
  00114	c2 0c 00	 ret	 12			; 0000000cH
?Render@Menu@core@@QAEXHHW4ButtonAlign@2@@Z ENDP	; core::Menu::Render
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\dev\tetris\src\menu.cpp
_TEXT	SEGMENT
tv151 = -8						; size = 4
_this$ = -4						; size = 4
?Update@Menu@core@@QAE?AW4GamePhase@@XZ PROC		; core::Menu::Update
; _this$ = ecx

; 32   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 33   :     if (m_input->ddown > 0)

  0000a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000d	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000f	0f be 51 0b	 movsx	 edx, BYTE PTR [ecx+11]
  00013	85 d2		 test	 edx, edx
  00015	7e 58		 jle	 SHORT $LN4@Update

; 34   :     {
; 35   :         m_buttons[m_menuState].SetState(BUTTON_OUT_FOCUS);

  00017	6a 00		 push	 0
  00019	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001c	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  0001f	51		 push	 ecx
  00020	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	83 c1 04	 add	 ecx, 4
  00026	e8 00 00 00 00	 call	 ??A?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEAAVButton@ui@core@@I@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::operator[]
  0002b	8b c8		 mov	 ecx, eax
  0002d	e8 00 00 00 00	 call	 ?SetState@Button@ui@core@@QAEXW4ButtonState@23@@Z ; core::ui::Button::SetState

; 36   :         m_menuState = (MenuState)((m_menuState + 1) % m_buttons.size());

  00032	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00035	8b 72 10	 mov	 esi, DWORD PTR [edx+16]
  00038	83 c6 01	 add	 esi, 1
  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	83 c1 04	 add	 ecx, 4
  00041	e8 00 00 00 00	 call	 ?size@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QBEIXZ ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::size
  00046	8b c8		 mov	 ecx, eax
  00048	8b c6		 mov	 eax, esi
  0004a	33 d2		 xor	 edx, edx
  0004c	f7 f1		 div	 ecx
  0004e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00051	89 50 10	 mov	 DWORD PTR [eax+16], edx

; 37   :         m_buttons[m_menuState].SetState(BUTTON_IN_FOCUS);

  00054	6a 01		 push	 1
  00056	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00059	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  0005c	52		 push	 edx
  0005d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	83 c1 04	 add	 ecx, 4
  00063	e8 00 00 00 00	 call	 ??A?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEAAVButton@ui@core@@I@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::operator[]
  00068	8b c8		 mov	 ecx, eax
  0006a	e8 00 00 00 00	 call	 ?SetState@Button@ui@core@@QAEXW4ButtonState@23@@Z ; core::ui::Button::SetState
$LN4@Update:

; 38   :     }
; 39   :     
; 40   :     if (m_input->dup > 0)

  0006f	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00072	8b 08		 mov	 ecx, DWORD PTR [eax]
  00074	0f be 51 0a	 movsx	 edx, BYTE PTR [ecx+10]
  00078	85 d2		 test	 edx, edx
  0007a	7e 58		 jle	 SHORT $LN5@Update

; 41   :     {
; 42   :         m_buttons[m_menuState].SetState(BUTTON_OUT_FOCUS);

  0007c	6a 00		 push	 0
  0007e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00081	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  00084	51		 push	 ecx
  00085	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00088	83 c1 04	 add	 ecx, 4
  0008b	e8 00 00 00 00	 call	 ??A?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEAAVButton@ui@core@@I@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::operator[]
  00090	8b c8		 mov	 ecx, eax
  00092	e8 00 00 00 00	 call	 ?SetState@Button@ui@core@@QAEXW4ButtonState@23@@Z ; core::ui::Button::SetState

; 43   :         m_menuState = (MenuState)((m_menuState - 1) % m_buttons.size());

  00097	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0009a	8b 72 10	 mov	 esi, DWORD PTR [edx+16]
  0009d	83 ee 01	 sub	 esi, 1
  000a0	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000a3	83 c1 04	 add	 ecx, 4
  000a6	e8 00 00 00 00	 call	 ?size@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QBEIXZ ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::size
  000ab	8b c8		 mov	 ecx, eax
  000ad	8b c6		 mov	 eax, esi
  000af	33 d2		 xor	 edx, edx
  000b1	f7 f1		 div	 ecx
  000b3	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000b6	89 50 10	 mov	 DWORD PTR [eax+16], edx

; 44   :         m_buttons[m_menuState].SetState(BUTTON_IN_FOCUS);

  000b9	6a 01		 push	 1
  000bb	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000be	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  000c1	52		 push	 edx
  000c2	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  000c5	83 c1 04	 add	 ecx, 4
  000c8	e8 00 00 00 00	 call	 ??A?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEAAVButton@ui@core@@I@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::operator[]
  000cd	8b c8		 mov	 ecx, eax
  000cf	e8 00 00 00 00	 call	 ?SetState@Button@ui@core@@QAEXW4ButtonState@23@@Z ; core::ui::Button::SetState
$LN5@Update:

; 45   :     }
; 46   :     
; 47   :     if (m_input->denter > 0)

  000d4	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000d7	8b 08		 mov	 ecx, DWORD PTR [eax]
  000d9	0f be 51 0d	 movsx	 edx, BYTE PTR [ecx+13]
  000dd	85 d2		 test	 edx, edx
  000df	7e 3b		 jle	 SHORT $LN6@Update

; 48   :     {
; 49   :         switch (m_menuState)

  000e1	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  000e4	8b 48 10	 mov	 ecx, DWORD PTR [eax+16]
  000e7	89 4d f8	 mov	 DWORD PTR tv151[ebp], ecx
  000ea	83 7d f8 03	 cmp	 DWORD PTR tv151[ebp], 3
  000ee	77 2c		 ja	 SHORT $LN6@Update
  000f0	8b 55 f8	 mov	 edx, DWORD PTR tv151[ebp]
  000f3	ff 24 95 00 00
	00 00		 jmp	 DWORD PTR $LN12@Update[edx*4]
$LN7@Update:

; 50   :         {
; 51   :             case MENU_PLAY:
; 52   :             {
; 53   :                 return GAME_PHASE_START;

  000fa	b8 01 00 00 00	 mov	 eax, 1
  000ff	eb 1d		 jmp	 SHORT $LN1@Update

; 54   :             } break;

  00101	eb 19		 jmp	 SHORT $LN6@Update
$LN8@Update:

; 55   :             
; 56   :             case MENU_HIGHSCORES:
; 57   :             {
; 58   :                 return GAME_PHASE_HIGHSCORES;

  00103	b8 05 00 00 00	 mov	 eax, 5
  00108	eb 14		 jmp	 SHORT $LN1@Update

; 59   :             } break;

  0010a	eb 10		 jmp	 SHORT $LN6@Update
$LN9@Update:

; 60   :             
; 61   :             case MENU_INFO:
; 62   :             {
; 63   :                 return GAME_PHASE_INFO;

  0010c	b8 06 00 00 00	 mov	 eax, 6
  00111	eb 0b		 jmp	 SHORT $LN1@Update

; 64   :             } break;

  00113	eb 07		 jmp	 SHORT $LN6@Update
$LN10@Update:

; 65   :             
; 66   :             case MENU_EXIT:
; 67   :             {
; 68   :                 return GAME_PHASE_EXIT;

  00115	b8 07 00 00 00	 mov	 eax, 7
  0011a	eb 02		 jmp	 SHORT $LN1@Update
$LN6@Update:

; 69   :             } break;
; 70   :         }
; 71   :     }
; 72   :     
; 73   :     return GAME_PHASE_MENU;

  0011c	33 c0		 xor	 eax, eax
$LN1@Update:

; 74   : }

  0011e	5e		 pop	 esi
  0011f	8b e5		 mov	 esp, ebp
  00121	5d		 pop	 ebp
  00122	c3		 ret	 0
  00123	90		 npad	 1
$LN12@Update:
  00124	00 00 00 00	 DD	 $LN7@Update
  00128	00 00 00 00	 DD	 $LN8@Update
  0012c	00 00 00 00	 DD	 $LN9@Update
  00130	00 00 00 00	 DD	 $LN10@Update
?Update@Menu@core@@QAE?AW4GamePhase@@XZ ENDP		; core::Menu::Update
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\dev\tetris\src\menu.cpp
_TEXT	SEGMENT
$T2 = -220						; size = 32
$T3 = -188						; size = 32
$T4 = -156						; size = 32
$T5 = -124						; size = 32
$T6 = -92						; size = 12
$T7 = -80						; size = 4
$T8 = -76						; size = 4
$T9 = -72						; size = 4
$T10 = -68						; size = 4
$T11 = -64						; size = 4
$T12 = -60						; size = 4
$T13 = -56						; size = 4
$T14 = -52						; size = 4
$T15 = -48						; size = 4
$T16 = -44						; size = 4
$T17 = -40						; size = 4
$T18 = -36						; size = 4
tv302 = -32						; size = 4
_outFocusColor$ = -28					; size = 4
_inFocusColor$ = -24					; size = 4
_textColor$ = -20					; size = 4
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_t_input$ = 8						; size = 4
_t_font$ = 12						; size = 4
??0Menu@core@@QAE@PAUInputState@@PAU_TTF_Font@@@Z PROC	; core::Menu::Menu
; _this$ = ecx

; 8    : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0Menu@core@@QAE@PAUInputState@@PAU_TTF_Font@@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	81 ec d0 00 00
	00		 sub	 esp, 208		; 000000d0H
  00017	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0001c	33 c5		 xor	 eax, ebp
  0001e	50		 push	 eax
  0001f	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  00022	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00028	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 7    : Menu::Menu(InputState *t_input, TTF_Font *t_font) : m_input(t_input)

  0002b	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0002e	8b 4d 08	 mov	 ecx, DWORD PTR _t_input$[ebp]
  00031	89 08		 mov	 DWORD PTR [eax], ecx

; 8    : {

  00033	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	83 c1 04	 add	 ecx, 4
  00039	e8 00 00 00 00	 call	 ??0?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@XZ ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::vector<core::ui::Button,std::allocator<core::ui::Button> >
  0003e	c7 45 fc 00 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 0

; 9    :     Color outFocusColor = Color(0xad, 0x7f, 0x00);

  00045	6a 00		 push	 0
  00047	6a 7f		 push	 127			; 0000007fH
  00049	68 ad 00 00 00	 push	 173			; 000000adH
  0004e	8d 4d e4	 lea	 ecx, DWORD PTR _outFocusColor$[ebp]
  00051	e8 00 00 00 00	 call	 ??0Color@core@@QAE@EEE@Z ; core::Color::Color

; 10   :     Color inFocusColor = Color(0xfc, 0xba, 0x03);

  00056	6a 03		 push	 3
  00058	68 ba 00 00 00	 push	 186			; 000000baH
  0005d	68 fc 00 00 00	 push	 252			; 000000fcH
  00062	8d 4d e8	 lea	 ecx, DWORD PTR _inFocusColor$[ebp]
  00065	e8 00 00 00 00	 call	 ??0Color@core@@QAE@EEE@Z ; core::Color::Color

; 11   :     Color textColor = Palette::s_highlightColor;

  0006a	68 00 00 00 00	 push	 OFFSET ?s_highlightColor@Palette@core@@2VColor@2@B ; core::Palette::s_highlightColor
  0006f	8d 4d ec	 lea	 ecx, DWORD PTR _textColor$[ebp]
  00072	e8 00 00 00 00	 call	 ??0Color@core@@QAE@ABV01@@Z ; core::Color::Color

; 12   :     
; 13   :     m_buttons = std::vector<Button>();

  00077	8d 4d a4	 lea	 ecx, DWORD PTR $T6[ebp]
  0007a	e8 00 00 00 00	 call	 ??0?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@XZ ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::vector<core::ui::Button,std::allocator<core::ui::Button> >
  0007f	89 45 e0	 mov	 DWORD PTR tv302[ebp], eax
  00082	8b 55 e0	 mov	 edx, DWORD PTR tv302[ebp]
  00085	52		 push	 edx
  00086	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00089	83 c1 04	 add	 ecx, 4
  0008c	e8 00 00 00 00	 call	 ??4?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEAAV01@$$QAV01@@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::operator=
  00091	8d 4d a4	 lea	 ecx, DWORD PTR $T6[ebp]
  00094	e8 00 00 00 00	 call	 ??1?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@XZ ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::~vector<core::ui::Button,std::allocator<core::ui::Button> >

; 14   :     m_menuState = MENU_PLAY;

  00099	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0009c	c7 40 10 00 00
	00 00		 mov	 DWORD PTR [eax+16], 0

; 15   :     
; 16   :     m_buttons.push_back(Button(BUTTON_WIDTH, BUTTON_HEIGHT, t_font, "Play", 

  000a3	51		 push	 ecx
  000a4	8b cc		 mov	 ecx, esp
  000a6	89 65 dc	 mov	 DWORD PTR $T18[ebp], esp
  000a9	8d 55 ec	 lea	 edx, DWORD PTR _textColor$[ebp]
  000ac	52		 push	 edx
  000ad	e8 00 00 00 00	 call	 ??0Color@core@@QAE@ABV01@@Z ; core::Color::Color
  000b2	51		 push	 ecx
  000b3	8b cc		 mov	 ecx, esp
  000b5	89 65 d8	 mov	 DWORD PTR $T17[ebp], esp
  000b8	8d 45 e8	 lea	 eax, DWORD PTR _inFocusColor$[ebp]
  000bb	50		 push	 eax
  000bc	e8 00 00 00 00	 call	 ??0Color@core@@QAE@ABV01@@Z ; core::Color::Color
  000c1	51		 push	 ecx
  000c2	8b cc		 mov	 ecx, esp
  000c4	89 65 d4	 mov	 DWORD PTR $T16[ebp], esp
  000c7	8d 55 e4	 lea	 edx, DWORD PTR _outFocusColor$[ebp]
  000ca	52		 push	 edx
  000cb	e8 00 00 00 00	 call	 ??0Color@core@@QAE@ABV01@@Z ; core::Color::Color
  000d0	6a 00		 push	 0
  000d2	68 00 00 00 00	 push	 OFFSET $SG45929
  000d7	8b 45 0c	 mov	 eax, DWORD PTR _t_font$[ebp]
  000da	50		 push	 eax
  000db	6a 3c		 push	 60			; 0000003cH
  000dd	68 a0 00 00 00	 push	 160			; 000000a0H
  000e2	8d 4d 84	 lea	 ecx, DWORD PTR $T5[ebp]
  000e5	e8 00 00 00 00	 call	 ??0Button@ui@core@@QAE@HHPAU_TTF_Font@@PBDW4ButtonState@12@VColor@2@33@Z ; core::ui::Button::Button
  000ea	50		 push	 eax
  000eb	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  000ee	83 c1 04	 add	 ecx, 4
  000f1	e8 00 00 00 00	 call	 ?push_back@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEX$$QAVButton@ui@core@@@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::push_back

; 17   :                                ui::BUTTON_OUT_FOCUS, outFocusColor, inFocusColor, textColor));
; 18   :     
; 19   :     m_buttons.push_back(Button(BUTTON_WIDTH, BUTTON_HEIGHT, t_font, "Highscores",

  000f6	51		 push	 ecx
  000f7	8b cc		 mov	 ecx, esp
  000f9	89 65 d0	 mov	 DWORD PTR $T15[ebp], esp
  000fc	8d 55 ec	 lea	 edx, DWORD PTR _textColor$[ebp]
  000ff	52		 push	 edx
  00100	e8 00 00 00 00	 call	 ??0Color@core@@QAE@ABV01@@Z ; core::Color::Color
  00105	51		 push	 ecx
  00106	8b cc		 mov	 ecx, esp
  00108	89 65 cc	 mov	 DWORD PTR $T14[ebp], esp
  0010b	8d 45 e8	 lea	 eax, DWORD PTR _inFocusColor$[ebp]
  0010e	50		 push	 eax
  0010f	e8 00 00 00 00	 call	 ??0Color@core@@QAE@ABV01@@Z ; core::Color::Color
  00114	51		 push	 ecx
  00115	8b cc		 mov	 ecx, esp
  00117	89 65 c8	 mov	 DWORD PTR $T13[ebp], esp
  0011a	8d 55 e4	 lea	 edx, DWORD PTR _outFocusColor$[ebp]
  0011d	52		 push	 edx
  0011e	e8 00 00 00 00	 call	 ??0Color@core@@QAE@ABV01@@Z ; core::Color::Color
  00123	6a 00		 push	 0
  00125	68 00 00 00 00	 push	 OFFSET $SG45930
  0012a	8b 45 0c	 mov	 eax, DWORD PTR _t_font$[ebp]
  0012d	50		 push	 eax
  0012e	6a 3c		 push	 60			; 0000003cH
  00130	68 a0 00 00 00	 push	 160			; 000000a0H
  00135	8d 8d 64 ff ff
	ff		 lea	 ecx, DWORD PTR $T4[ebp]
  0013b	e8 00 00 00 00	 call	 ??0Button@ui@core@@QAE@HHPAU_TTF_Font@@PBDW4ButtonState@12@VColor@2@33@Z ; core::ui::Button::Button
  00140	50		 push	 eax
  00141	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00144	83 c1 04	 add	 ecx, 4
  00147	e8 00 00 00 00	 call	 ?push_back@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEX$$QAVButton@ui@core@@@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::push_back

; 20   :                                ui::BUTTON_OUT_FOCUS, outFocusColor, inFocusColor, textColor));
; 21   :     
; 22   :     m_buttons.push_back(Button(BUTTON_WIDTH, BUTTON_HEIGHT, t_font, "Info",

  0014c	51		 push	 ecx
  0014d	8b cc		 mov	 ecx, esp
  0014f	89 65 c4	 mov	 DWORD PTR $T12[ebp], esp
  00152	8d 55 ec	 lea	 edx, DWORD PTR _textColor$[ebp]
  00155	52		 push	 edx
  00156	e8 00 00 00 00	 call	 ??0Color@core@@QAE@ABV01@@Z ; core::Color::Color
  0015b	51		 push	 ecx
  0015c	8b cc		 mov	 ecx, esp
  0015e	89 65 c0	 mov	 DWORD PTR $T11[ebp], esp
  00161	8d 45 e8	 lea	 eax, DWORD PTR _inFocusColor$[ebp]
  00164	50		 push	 eax
  00165	e8 00 00 00 00	 call	 ??0Color@core@@QAE@ABV01@@Z ; core::Color::Color
  0016a	51		 push	 ecx
  0016b	8b cc		 mov	 ecx, esp
  0016d	89 65 bc	 mov	 DWORD PTR $T10[ebp], esp
  00170	8d 55 e4	 lea	 edx, DWORD PTR _outFocusColor$[ebp]
  00173	52		 push	 edx
  00174	e8 00 00 00 00	 call	 ??0Color@core@@QAE@ABV01@@Z ; core::Color::Color
  00179	6a 00		 push	 0
  0017b	68 00 00 00 00	 push	 OFFSET $SG45931
  00180	8b 45 0c	 mov	 eax, DWORD PTR _t_font$[ebp]
  00183	50		 push	 eax
  00184	6a 3c		 push	 60			; 0000003cH
  00186	68 a0 00 00 00	 push	 160			; 000000a0H
  0018b	8d 8d 44 ff ff
	ff		 lea	 ecx, DWORD PTR $T3[ebp]
  00191	e8 00 00 00 00	 call	 ??0Button@ui@core@@QAE@HHPAU_TTF_Font@@PBDW4ButtonState@12@VColor@2@33@Z ; core::ui::Button::Button
  00196	50		 push	 eax
  00197	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0019a	83 c1 04	 add	 ecx, 4
  0019d	e8 00 00 00 00	 call	 ?push_back@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEX$$QAVButton@ui@core@@@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::push_back

; 23   :                                ui::BUTTON_OUT_FOCUS, outFocusColor, inFocusColor, textColor));
; 24   :     
; 25   :     m_buttons.push_back(Button(BUTTON_WIDTH, BUTTON_HEIGHT, t_font, "Exit",

  001a2	51		 push	 ecx
  001a3	8b cc		 mov	 ecx, esp
  001a5	89 65 b8	 mov	 DWORD PTR $T9[ebp], esp
  001a8	8d 55 ec	 lea	 edx, DWORD PTR _textColor$[ebp]
  001ab	52		 push	 edx
  001ac	e8 00 00 00 00	 call	 ??0Color@core@@QAE@ABV01@@Z ; core::Color::Color
  001b1	51		 push	 ecx
  001b2	8b cc		 mov	 ecx, esp
  001b4	89 65 b4	 mov	 DWORD PTR $T8[ebp], esp
  001b7	8d 45 e8	 lea	 eax, DWORD PTR _inFocusColor$[ebp]
  001ba	50		 push	 eax
  001bb	e8 00 00 00 00	 call	 ??0Color@core@@QAE@ABV01@@Z ; core::Color::Color
  001c0	51		 push	 ecx
  001c1	8b cc		 mov	 ecx, esp
  001c3	89 65 b0	 mov	 DWORD PTR $T7[ebp], esp
  001c6	8d 55 e4	 lea	 edx, DWORD PTR _outFocusColor$[ebp]
  001c9	52		 push	 edx
  001ca	e8 00 00 00 00	 call	 ??0Color@core@@QAE@ABV01@@Z ; core::Color::Color
  001cf	6a 00		 push	 0
  001d1	68 00 00 00 00	 push	 OFFSET $SG45932
  001d6	8b 45 0c	 mov	 eax, DWORD PTR _t_font$[ebp]
  001d9	50		 push	 eax
  001da	6a 3c		 push	 60			; 0000003cH
  001dc	68 a0 00 00 00	 push	 160			; 000000a0H
  001e1	8d 8d 24 ff ff
	ff		 lea	 ecx, DWORD PTR $T2[ebp]
  001e7	e8 00 00 00 00	 call	 ??0Button@ui@core@@QAE@HHPAU_TTF_Font@@PBDW4ButtonState@12@VColor@2@33@Z ; core::ui::Button::Button
  001ec	50		 push	 eax
  001ed	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001f0	83 c1 04	 add	 ecx, 4
  001f3	e8 00 00 00 00	 call	 ?push_back@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEX$$QAVButton@ui@core@@@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::push_back

; 26   :                                ui::BUTTON_OUT_FOCUS, outFocusColor, inFocusColor, textColor));
; 27   :     
; 28   :     m_buttons[m_menuState].SetState(BUTTON_IN_FOCUS);

  001f8	6a 01		 push	 1
  001fa	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  001fd	8b 51 10	 mov	 edx, DWORD PTR [ecx+16]
  00200	52		 push	 edx
  00201	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00204	83 c1 04	 add	 ecx, 4
  00207	e8 00 00 00 00	 call	 ??A?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEAAVButton@ui@core@@I@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::operator[]
  0020c	8b c8		 mov	 ecx, eax
  0020e	e8 00 00 00 00	 call	 ?SetState@Button@ui@core@@QAEXW4ButtonState@23@@Z ; core::ui::Button::SetState

; 29   : }

  00213	c7 45 fc ff ff
	ff ff		 mov	 DWORD PTR __$EHRec$[ebp+8], -1
  0021a	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  0021d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00220	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00227	59		 pop	 ecx
  00228	8b e5		 mov	 esp, ebp
  0022a	5d		 pop	 ebp
  0022b	c2 08 00	 ret	 8
_TEXT	ENDS
text$x	SEGMENT
__unwindfunclet$??0Menu@core@@QAE@PAUInputState@@PAU_TTF_Font@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	83 c1 04	 add	 ecx, 4
  00006	e9 00 00 00 00	 jmp	 ??1?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@XZ ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::~vector<core::ui::Button,std::allocator<core::ui::Button> >
__ehhandler$??0Menu@core@@QAE@PAUInputState@@PAU_TTF_Font@@@Z:
  0000b	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000f	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00012	8b 8a 2c ff ff
	ff		 mov	 ecx, DWORD PTR [edx-212]
  00018	33 c8		 xor	 ecx, eax
  0001a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0001f	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0Menu@core@@QAE@PAUInputState@@PAU_TTF_Font@@@Z
  00024	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0Menu@core@@QAE@PAUInputState@@PAU_TTF_Font@@@Z ENDP	; core::Menu::Menu
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Orphan_range@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@ABEXPAVButton@ui@core@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
___formal$ = 12						; size = 4
?_Orphan_range@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@ABEXPAVButton@ui@core@@0@Z PROC ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Orphan_range, COMDAT
; _this$ = ecx

; 1959 : 		{	// orphan iterators within specified (inclusive) range

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1960 : 		}

  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 08 00	 ret	 8
?_Orphan_range@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@ABEXPAVButton@ui@core@@0@Z ENDP ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Xlength@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@CAXXZ PROC ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Xlength, COMDAT

; 1925 : 		{	// report a length_error

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 1926 : 		_Xlength_error("vector<T> too long");

  00003	68 00 00 00 00	 push	 OFFSET ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
  00008	e8 00 00 00 00	 call	 ?_Xlength_error@std@@YAXPBD@Z ; std::_Xlength_error
$LN2@Xlength:

; 1927 : 		}

  0000d	5d		 pop	 ebp
  0000e	c3		 ret	 0
?_Xlength@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@CAXXZ ENDP ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Tidy@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Tidy@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEXXZ PROC ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Tidy, COMDAT
; _this$ = ecx

; 1910 : 		{	// free all storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1911 : 		this->_Orphan_all();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Orphan_all

; 1912 : 
; 1913 : 		if (this->_Myfirst() != pointer())

  0000f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00012	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myfirst
  00017	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001a	74 6b		 je	 SHORT $LN1@Tidy

; 1914 : 			{	// destroy and deallocate old array
; 1915 : 			_Destroy(this->_Myfirst(), this->_Mylast());

  0001c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001f	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Mylast
  00024	8b 00		 mov	 eax, DWORD PTR [eax]
  00026	50		 push	 eax
  00027	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002a	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myfirst
  0002f	8b 08		 mov	 ecx, DWORD PTR [eax]
  00031	51		 push	 ecx
  00032	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00035	e8 00 00 00 00	 call	 ?_Destroy@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEXPAVButton@ui@core@@0@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Destroy

; 1916 : 			this->_Getal().deallocate(this->_Myfirst(), capacity());

  0003a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003d	e8 00 00 00 00	 call	 ?capacity@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QBEIXZ ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::capacity
  00042	50		 push	 eax
  00043	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00046	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myfirst
  0004b	8b 10		 mov	 edx, DWORD PTR [eax]
  0004d	52		 push	 edx
  0004e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00051	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAV?$allocator@VButton@ui@core@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Getal
  00056	8b c8		 mov	 ecx, eax
  00058	e8 00 00 00 00	 call	 ?deallocate@?$allocator@VButton@ui@core@@@std@@QAEXQAVButton@ui@core@@I@Z ; std::allocator<core::ui::Button>::deallocate

; 1917 : 
; 1918 : 			this->_Myfirst() = pointer();

  0005d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00060	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myfirst
  00065	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1919 : 			this->_Mylast() = pointer();

  0006b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006e	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Mylast
  00073	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 1920 : 			this->_Myend() = pointer();

  00079	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0007c	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myend
  00081	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0
$LN1@Tidy:

; 1921 : 			}
; 1922 : 		}

  00087	8b e5		 mov	 esp, ebp
  00089	5d		 pop	 ebp
  0008a	c3		 ret	 0
?_Tidy@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEXXZ ENDP ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Change_array@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEXQAVButton@ui@core@@II@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Newvec$ = 8						; size = 4
__Newsize$ = 12						; size = 4
__Newcapacity$ = 16					; size = 4
?_Change_array@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEXQAVButton@ui@core@@II@Z PROC ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Change_array, COMDAT
; _this$ = ecx

; 1895 : 		{	// orphan all iterators, discard old array, acquire new array

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1896 : 		this->_Orphan_all();

  00008	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e8 00 00 00 00	 call	 ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEXXZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Orphan_all

; 1897 : 
; 1898 : 		if (this->_Myfirst() != pointer())

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myfirst
  00018	83 38 00	 cmp	 DWORD PTR [eax], 0
  0001b	74 41		 je	 SHORT $LN2@Change_arr

; 1899 : 			{	// destroy and deallocate old array
; 1900 : 			_Destroy(this->_Myfirst(), this->_Mylast());

  0001d	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00020	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Mylast
  00025	8b 00		 mov	 eax, DWORD PTR [eax]
  00027	50		 push	 eax
  00028	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0002b	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myfirst
  00030	8b 08		 mov	 ecx, DWORD PTR [eax]
  00032	51		 push	 ecx
  00033	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00036	e8 00 00 00 00	 call	 ?_Destroy@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEXPAVButton@ui@core@@0@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Destroy

; 1901 : 			this->_Getal().deallocate(this->_Myfirst(), capacity());

  0003b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003e	e8 00 00 00 00	 call	 ?capacity@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QBEIXZ ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::capacity
  00043	50		 push	 eax
  00044	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00047	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myfirst
  0004c	8b 10		 mov	 edx, DWORD PTR [eax]
  0004e	52		 push	 edx
  0004f	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00052	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAV?$allocator@VButton@ui@core@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Getal
  00057	8b c8		 mov	 ecx, eax
  00059	e8 00 00 00 00	 call	 ?deallocate@?$allocator@VButton@ui@core@@@std@@QAEXQAVButton@ui@core@@I@Z ; std::allocator<core::ui::Button>::deallocate
$LN2@Change_arr:

; 1902 : 			}
; 1903 : 
; 1904 : 		this->_Myfirst() = _Newvec;

  0005e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00061	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myfirst
  00066	8b 4d 08	 mov	 ecx, DWORD PTR __Newvec$[ebp]
  00069	89 08		 mov	 DWORD PTR [eax], ecx

; 1905 : 		this->_Mylast() = _Newvec + _Newsize;

  0006b	8b 75 0c	 mov	 esi, DWORD PTR __Newsize$[ebp]
  0006e	c1 e6 05	 shl	 esi, 5
  00071	03 75 08	 add	 esi, DWORD PTR __Newvec$[ebp]
  00074	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00077	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Mylast
  0007c	89 30		 mov	 DWORD PTR [eax], esi

; 1906 : 		this->_Myend() = _Newvec + _Newcapacity;

  0007e	8b 75 10	 mov	 esi, DWORD PTR __Newcapacity$[ebp]
  00081	c1 e6 05	 shl	 esi, 5
  00084	03 75 08	 add	 esi, DWORD PTR __Newvec$[ebp]
  00087	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008a	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myend
  0008f	89 30		 mov	 DWORD PTR [eax], esi

; 1907 : 		}

  00091	5e		 pop	 esi
  00092	8b e5		 mov	 esp, ebp
  00094	5d		 pop	 ebp
  00095	c2 0c 00	 ret	 12			; 0000000cH
?_Change_array@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEXQAVButton@ui@core@@II@Z ENDP ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Calculate_growth@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@ABEII@Z
_TEXT	SEGMENT
__Geometric$ = -12					; size = 4
_this$ = -8						; size = 4
__Oldcapacity$ = -4					; size = 4
__Newsize$ = 8						; size = 4
?_Calculate_growth@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@ABEII@Z PROC ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Calculate_growth, COMDAT
; _this$ = ecx

; 1853 : 		{	// given _Oldcapacity and _Newsize, calculate geometric growth

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1854 : 		const size_type _Oldcapacity = capacity();

  00009	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?capacity@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QBEIXZ ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::capacity
  00011	89 45 fc	 mov	 DWORD PTR __Oldcapacity$[ebp], eax

; 1855 : 
; 1856 : 		if (_Oldcapacity > max_size() - _Oldcapacity / 2)

  00014	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ?max_size@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QBEIXZ ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::max_size
  0001c	8b 4d fc	 mov	 ecx, DWORD PTR __Oldcapacity$[ebp]
  0001f	d1 e9		 shr	 ecx, 1
  00021	2b c1		 sub	 eax, ecx
  00023	39 45 fc	 cmp	 DWORD PTR __Oldcapacity$[ebp], eax
  00026	76 05		 jbe	 SHORT $LN2@Calculate_

; 1857 : 			{
; 1858 : 			return (_Newsize);	// geometric growth would overflow

  00028	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  0002b	eb 1b		 jmp	 SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1859 : 			}
; 1860 : 
; 1861 : 		const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

  0002d	8b 55 fc	 mov	 edx, DWORD PTR __Oldcapacity$[ebp]
  00030	d1 ea		 shr	 edx, 1
  00032	03 55 fc	 add	 edx, DWORD PTR __Oldcapacity$[ebp]
  00035	89 55 f4	 mov	 DWORD PTR __Geometric$[ebp], edx

; 1862 : 
; 1863 : 		if (_Geometric < _Newsize)

  00038	8b 45 f4	 mov	 eax, DWORD PTR __Geometric$[ebp]
  0003b	3b 45 08	 cmp	 eax, DWORD PTR __Newsize$[ebp]
  0003e	73 05		 jae	 SHORT $LN3@Calculate_

; 1864 : 			{
; 1865 : 			return (_Newsize);	// geometric growth would be insufficient

  00040	8b 45 08	 mov	 eax, DWORD PTR __Newsize$[ebp]
  00043	eb 03		 jmp	 SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1866 : 			}
; 1867 : 
; 1868 : 		return (_Geometric);	// geometric growth is sufficient

  00045	8b 45 f4	 mov	 eax, DWORD PTR __Geometric$[ebp]
$LN1@Calculate_:

; 1869 : 		}

  00048	8b e5		 mov	 esp, ebp
  0004a	5d		 pop	 ebp
  0004b	c2 04 00	 ret	 4
?_Calculate_growth@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@ABEII@Z ENDP ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Destroy@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEXPAVButton@ui@core@@0@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
?_Destroy@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEXPAVButton@ui@core@@0@Z PROC ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Destroy, COMDAT
; _this$ = ecx

; 1848 : 		{	// destroy [_First, _Last) using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1849 : 		_Destroy_range(_First, _Last, this->_Getal());

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAV?$allocator@VButton@ui@core@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Getal
  0000f	50		 push	 eax
  00010	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  00013	50		 push	 eax
  00014	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  00017	51		 push	 ecx
  00018	e8 00 00 00 00	 call	 ??$_Destroy_range@V?$allocator@VButton@ui@core@@@std@@@std@@YAXPAVButton@ui@core@@0AAV?$allocator@VButton@ui@core@@@0@@Z ; std::_Destroy_range<std::allocator<core::ui::Button> >
  0001d	83 c4 0c	 add	 esp, 12			; 0000000cH

; 1850 : 		}

  00020	8b e5		 mov	 esp, ebp
  00022	5d		 pop	 ebp
  00023	c2 08 00	 ret	 8
?_Destroy@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEXPAVButton@ui@core@@0@Z ENDP ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Umove_if_noexcept@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEXPAVButton@ui@core@@00@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
?_Umove_if_noexcept@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEXPAVButton@ui@core@@00@Z PROC ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Umove_if_noexcept, COMDAT
; _this$ = ecx

; 1842 : 		{	// move_if_noexcept [_First, _Last) to raw _Dest, using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 1843 : 		_Umove_if_noexcept1(_First, _Last, _Dest,

  00009	33 c0		 xor	 eax, eax
  0000b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0000e	0f b6 4d ff	 movzx	 ecx, BYTE PTR $T1[ebp]
  00012	51		 push	 ecx
  00013	8b 55 10	 mov	 edx, DWORD PTR __Dest$[ebp]
  00016	52		 push	 edx
  00017	8b 45 0c	 mov	 eax, DWORD PTR __Last$[ebp]
  0001a	50		 push	 eax
  0001b	8b 4d 08	 mov	 ecx, DWORD PTR __First$[ebp]
  0001e	51		 push	 ecx
  0001f	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00022	e8 00 00 00 00	 call	 ?_Umove_if_noexcept1@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEXPAVButton@ui@core@@00U?$integral_constant@_N$0A@@2@@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Umove_if_noexcept1

; 1844 : 			bool_constant<disjunction_v<is_nothrow_move_constructible<_Ty>, negation<is_copy_constructible<_Ty>>>>{});
; 1845 : 		}

  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c2 0c 00	 ret	 12			; 0000000cH
?_Umove_if_noexcept@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEXPAVButton@ui@core@@00@Z ENDP ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Umove_if_noexcept
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Umove_if_noexcept1@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEXPAVButton@ui@core@@00U?$integral_constant@_N$0A@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
___formal$ = 20						; size = 1
?_Umove_if_noexcept1@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEXPAVButton@ui@core@@00U?$integral_constant@_N$0A@@2@@Z PROC ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Umove_if_noexcept1, COMDAT
; _this$ = ecx

; 1837 : 		{	// copy [_First, _Last) to raw _Dest, using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1838 : 		_Uninitialized_copy(_First, _Last, _Dest, this->_Getal());

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAV?$allocator@VButton@ui@core@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Getal
  0000f	50		 push	 eax
  00010	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00013	50		 push	 eax
  00014	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00017	51		 push	 ecx
  00018	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0001b	52		 push	 edx
  0001c	e8 00 00 00 00	 call	 ??$_Uninitialized_copy@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@QAV123@0PAV123@AAV?$allocator@VButton@ui@core@@@0@@Z ; std::_Uninitialized_copy<core::ui::Button *,core::ui::Button *,std::allocator<core::ui::Button> >
  00021	83 c4 10	 add	 esp, 16			; 00000010H

; 1839 : 		}

  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 10 00	 ret	 16			; 00000010H
?_Umove_if_noexcept1@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEXPAVButton@ui@core@@00U?$integral_constant@_N$0A@@2@@Z ENDP ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Umove_if_noexcept1
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Umove@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEPAVButton@ui@core@@PAV345@00@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__First$ = 8						; size = 4
__Last$ = 12						; size = 4
__Dest$ = 16						; size = 4
?_Umove@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEPAVButton@ui@core@@PAV345@00@Z PROC ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Umove, COMDAT
; _this$ = ecx

; 1827 : 		{	// move [_First, _Last) to raw _Dest, using allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1828 : 		return (_Uninitialized_move(_First, _Last, _Dest, this->_Getal()));

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAV?$allocator@VButton@ui@core@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Getal
  0000f	50		 push	 eax
  00010	8b 45 10	 mov	 eax, DWORD PTR __Dest$[ebp]
  00013	50		 push	 eax
  00014	8b 4d 0c	 mov	 ecx, DWORD PTR __Last$[ebp]
  00017	51		 push	 ecx
  00018	8b 55 08	 mov	 edx, DWORD PTR __First$[ebp]
  0001b	52		 push	 edx
  0001c	e8 00 00 00 00	 call	 ??$_Uninitialized_move@PAVButton@ui@core@@PAV123@V?$allocator@VButton@ui@core@@@std@@@std@@YAPAVButton@ui@core@@QAV123@0PAV123@AAV?$allocator@VButton@ui@core@@@0@@Z ; std::_Uninitialized_move<core::ui::Button *,core::ui::Button *,std::allocator<core::ui::Button> >
  00021	83 c4 10	 add	 esp, 16			; 00000010H

; 1829 : 		}

  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c2 0c 00	 ret	 12			; 0000000cH
?_Umove@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEPAVButton@ui@core@@PAV345@00@Z ENDP ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Umove
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??A?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEAAVButton@ui@core@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Pos$ = 8						; size = 4
??A?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEAAVButton@ui@core@@I@Z PROC ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::operator[], COMDAT
; _this$ = ecx

; 1731 : 		{	// subscript mutable sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1732 :  #if _ITERATOR_DEBUG_LEVEL != 0
; 1733 : 		_STL_VERIFY(_Pos < size(), "vector subscript out of range");
; 1734 :  #endif /* _ITERATOR_DEBUG_LEVEL != 0 */
; 1735 : 
; 1736 : 		return (this->_Myfirst()[_Pos]);

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myfirst
  0000f	8b 4d 08	 mov	 ecx, DWORD PTR __Pos$[ebp]
  00012	c1 e1 05	 shl	 ecx, 5
  00015	03 08		 add	 ecx, DWORD PTR [eax]
  00017	8b c1		 mov	 eax, ecx

; 1737 : 		}

  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??A?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEAAVButton@ui@core@@I@Z ENDP ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::operator[]
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Has_unused_capacity@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@ABE_NXZ
_TEXT	SEGMENT
tv77 = -8						; size = 4
_this$ = -4						; size = 4
?_Has_unused_capacity@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@ABE_NXZ PROC ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Has_unused_capacity, COMDAT
; _this$ = ecx

; 1725 : 		{	// micro-optimization for capacity() != size()

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	56		 push	 esi
  00007	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1726 : 		return (this->_Myend() != this->_Mylast());

  0000a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000d	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QBEABQAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myend
  00012	8b f0		 mov	 esi, eax
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QBEABQAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Mylast
  0001c	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0001e	3b 08		 cmp	 ecx, DWORD PTR [eax]
  00020	74 09		 je	 SHORT $LN3@Has_unused
  00022	c7 45 f8 01 00
	00 00		 mov	 DWORD PTR tv77[ebp], 1
  00029	eb 07		 jmp	 SHORT $LN4@Has_unused
$LN3@Has_unused:
  0002b	c7 45 f8 00 00
	00 00		 mov	 DWORD PTR tv77[ebp], 0
$LN4@Has_unused:
  00032	8a 45 f8	 mov	 al, BYTE PTR tv77[ebp]

; 1727 : 		}

  00035	5e		 pop	 esi
  00036	8b e5		 mov	 esp, ebp
  00038	5d		 pop	 ebp
  00039	c3		 ret	 0
?_Has_unused_capacity@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@ABE_NXZ ENDP ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Has_unused_capacity
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?capacity@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?capacity@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QBEIXZ PROC ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::capacity, COMDAT
; _this$ = ecx

; 1714 : 		{	// return current length of allocated storage

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1715 : 		return (static_cast<size_type>(this->_Myend() - this->_Myfirst()));

  00008	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QBEABQAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myend
  00010	8b f0		 mov	 esi, eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QBEABQAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myfirst
  0001a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0001c	2b 08		 sub	 ecx, DWORD PTR [eax]
  0001e	c1 f9 05	 sar	 ecx, 5
  00021	8b c1		 mov	 eax, ecx

; 1716 : 		}

  00023	5e		 pop	 esi
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?capacity@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QBEIXZ ENDP ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?max_size@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
$T1 = -12						; size = 4
$T2 = -8						; size = 4
_this$ = -4						; size = 4
?max_size@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QBEIXZ PROC ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::max_size, COMDAT
; _this$ = ecx

; 1708 : 		{	// return maximum possible length of sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1709 : 		return (_Min_value(static_cast<size_type>((numeric_limits<difference_type>::max)()),

  00009	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000c	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QBEABV?$allocator@VButton@ui@core@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Getal
  00011	50		 push	 eax
  00012	e8 00 00 00 00	 call	 ?max_size@?$_Default_allocator_traits@V?$allocator@VButton@ui@core@@@std@@@std@@SAIABV?$allocator@VButton@ui@core@@@2@@Z ; std::_Default_allocator_traits<std::allocator<core::ui::Button> >::max_size
  00017	83 c4 04	 add	 esp, 4
  0001a	89 45 f8	 mov	 DWORD PTR $T2[ebp], eax
  0001d	e8 00 00 00 00	 call	 ?max@?$numeric_limits@H@std@@SAHXZ ; std::numeric_limits<int>::max
  00022	89 45 f4	 mov	 DWORD PTR $T1[ebp], eax
  00025	8d 45 f8	 lea	 eax, DWORD PTR $T2[ebp]
  00028	50		 push	 eax
  00029	8d 4d f4	 lea	 ecx, DWORD PTR $T1[ebp]
  0002c	51		 push	 ecx
  0002d	e8 00 00 00 00	 call	 ??$_Min_value@I@std@@YAABIABI0@Z ; std::_Min_value<unsigned int>
  00032	83 c4 08	 add	 esp, 8
  00035	8b 00		 mov	 eax, DWORD PTR [eax]

; 1710 : 			_Alty_traits::max_size(this->_Getal())));
; 1711 : 		}

  00037	8b e5		 mov	 esp, ebp
  00039	5d		 pop	 ebp
  0003a	c3		 ret	 0
?max_size@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QBEIXZ ENDP ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?size@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QBEIXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?size@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QBEIXZ PROC ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::size, COMDAT
; _this$ = ecx

; 1703 : 		{	// return length of sequence

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	56		 push	 esi
  00005	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 1704 : 		return (static_cast<size_type>(this->_Mylast() - this->_Myfirst()));

  00008	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QBEABQAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Mylast
  00010	8b f0		 mov	 esi, eax
  00012	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00015	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QBEABQAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myfirst
  0001a	8b 0e		 mov	 ecx, DWORD PTR [esi]
  0001c	2b 08		 sub	 ecx, DWORD PTR [eax]
  0001e	c1 f9 05	 sar	 ecx, 5
  00021	8b c1		 mov	 eax, ecx

; 1705 : 		}

  00023	5e		 pop	 esi
  00024	8b e5		 mov	 esp, ebp
  00026	5d		 pop	 ebp
  00027	c3		 ret	 0
?size@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QBEIXZ ENDP ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?push_back@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEX$$QAVButton@ui@core@@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Val$ = 8						; size = 4
?push_back@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEX$$QAVButton@ui@core@@@Z PROC ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::push_back, COMDAT
; _this$ = ecx

; 936  : 		{	// insert by moving into element at end, provide strong guarantee

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 937  : 		emplace_back(_STD move(_Val));

  00007	8b 45 08	 mov	 eax, DWORD PTR __Val$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??$move@AAVButton@ui@core@@@std@@YA$$QAVButton@ui@core@@AAV123@@Z ; std::move<core::ui::Button &>
  00010	83 c4 04	 add	 esp, 4
  00013	50		 push	 eax
  00014	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00017	e8 00 00 00 00	 call	 ??$emplace_back@VButton@ui@core@@@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEX$$QAVButton@ui@core@@@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::emplace_back<core::ui::Button>

; 938  : 		}

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
?push_back@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEX$$QAVButton@ui@core@@@Z ENDP ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??1?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@XZ PROC ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::~vector<core::ui::Button,std::allocator<core::ui::Button> >, COMDAT
; _this$ = ecx

; 893  : 		{	// destroy the object

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??1?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 894  : 		_Tidy();

  00026	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ?_Tidy@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEXXZ ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Tidy

; 895  : 		}

  0002e	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00031	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00038	59		 pop	 ecx
  00039	8b e5		 mov	 esp, ebp
  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??1?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@XZ ENDP ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::~vector<core::ui::Button,std::allocator<core::ui::Button> >
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??4?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -20						; size = 4
$T2 = -13						; size = 1
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
??4?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEAAV01@$$QAV01@@Z PROC ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::operator=, COMDAT
; _this$ = ecx

; 875  : 		{	// assign by moving _Right

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??4?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEAAV01@$$QAV01@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	83 ec 08	 sub	 esp, 8
  00014	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00019	33 c5		 xor	 eax, ebp
  0001b	50		 push	 eax
  0001c	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001f	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00025	89 4d ec	 mov	 DWORD PTR _this$[ebp], ecx

; 876  : 		if (this != _STD addressof(_Right))

  00028	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0002b	50		 push	 eax
  0002c	e8 00 00 00 00	 call	 ??$addressof@V?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@YAPAV?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@0@AAV10@@Z ; std::addressof<std::vector<core::ui::Button,std::allocator<core::ui::Button> > >
  00031	83 c4 04	 add	 esp, 4
  00034	39 45 ec	 cmp	 DWORD PTR _this$[ebp], eax
  00037	74 41		 je	 SHORT $LN2@operator

; 877  : 			{	// different, assign it
; 878  : #pragma warning(push)
; 879  : #pragma warning(disable: 4127)	// conditional expression is constant
; 880  : 			if (_Always_equal_after_move<_Alty>
; 881  : 				|| this->_Getal() == _Right._Getal())

  00039	b9 01 00 00 00	 mov	 ecx, 1
  0003e	85 c9		 test	 ecx, ecx
  00040	74 08		 je	 SHORT $LN3@operator

; 882  : 				{	// will steal _Right's contents (also, POCMA non-equal must reload array)
; 883  : 				_Tidy();

  00042	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00045	e8 00 00 00 00	 call	 ?_Tidy@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEXXZ ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Tidy
$LN3@operator:

; 884  : 				}
; 885  : #pragma warning(pop)
; 886  : 			this->_Move_alloc(_Right._Getal());

  0004a	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0004d	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAV?$allocator@VButton@ui@core@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Getal
  00052	50		 push	 eax
  00053	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?_Move_alloc@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEXAAV?$allocator@VButton@ui@core@@@2@@Z ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Move_alloc

; 887  : 			_Move_assign_from(_STD move(_Right), bool_constant<_Always_equal_after_move<_Alty>>{});

  0005b	33 d2		 xor	 edx, edx
  0005d	88 55 f3	 mov	 BYTE PTR $T2[ebp], dl
  00060	0f b6 45 f3	 movzx	 eax, BYTE PTR $T2[ebp]
  00064	50		 push	 eax
  00065	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00068	51		 push	 ecx
  00069	e8 00 00 00 00	 call	 ??$move@AAV?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@YA$$QAV?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@0@AAV10@@Z ; std::move<std::vector<core::ui::Button,std::allocator<core::ui::Button> > &>
  0006e	83 c4 04	 add	 esp, 4
  00071	50		 push	 eax
  00072	8b 4d ec	 mov	 ecx, DWORD PTR _this$[ebp]
  00075	e8 00 00 00 00	 call	 ?_Move_assign_from@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Move_assign_from
$LN2@operator:

; 888  : 			}
; 889  : 		return (*this);

  0007a	8b 45 ec	 mov	 eax, DWORD PTR _this$[ebp]

; 890  : 		}

  0007d	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00080	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  00087	59		 pop	 ecx
  00088	8b e5		 mov	 esp, ebp
  0008a	5d		 pop	 ebp
  0008b	c2 04 00	 ret	 4
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??4?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEAAV01@$$QAV01@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??4?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEAAV01@$$QAV01@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??4?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAEAAV01@$$QAV01@@Z ENDP ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::operator=
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Move_assign_from@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEX$$QAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
__Right$ = 8						; size = 4
___formal$ = 12						; size = 1
?_Move_assign_from@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEX$$QAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Move_assign_from, COMDAT
; _this$ = ecx

; 817  : 		{	// move from _Right, stealing its contents

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 818  : 		_Move_from(_STD move(_Right), true_type{});

  00009	33 c0		 xor	 eax, eax
  0000b	88 45 ff	 mov	 BYTE PTR $T1[ebp], al
  0000e	0f b6 4d ff	 movzx	 ecx, BYTE PTR $T1[ebp]
  00012	51		 push	 ecx
  00013	8b 55 08	 mov	 edx, DWORD PTR __Right$[ebp]
  00016	52		 push	 edx
  00017	e8 00 00 00 00	 call	 ??$move@AAV?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@YA$$QAV?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@0@AAV10@@Z ; std::move<std::vector<core::ui::Button,std::allocator<core::ui::Button> > &>
  0001c	83 c4 04	 add	 esp, 4
  0001f	50		 push	 eax
  00020	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00023	e8 00 00 00 00	 call	 ?_Move_from@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Move_from

; 819  : 		}

  00028	8b e5		 mov	 esp, ebp
  0002a	5d		 pop	 ebp
  0002b	c2 08 00	 ret	 8
?_Move_assign_from@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Move_assign_from
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Move_from@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEX$$QAV12@U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
__Right$ = 8						; size = 4
___formal$ = 12						; size = 1
?_Move_from@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEX$$QAV12@U?$integral_constant@_N$00@2@@Z PROC ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Move_from, COMDAT
; _this$ = ecx

; 762  : 		{	// move from _Right, stealing its contents

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$?_Move_from@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEX$$QAV12@U?$integral_constant@_N$00@2@@Z
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	56		 push	 esi
  00013	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00018	33 c5		 xor	 eax, ebp
  0001a	50		 push	 eax
  0001b	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001e	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00024	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 763  : 		this->_Swap_all(_Right);

  00027	8b 45 08	 mov	 eax, DWORD PTR __Right$[ebp]
  0002a	50		 push	 eax
  0002b	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0002e	e8 00 00 00 00	 call	 ?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEXAAV12@@Z ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Swap_all

; 764  : 
; 765  : 		this->_Myfirst() = _Right._Myfirst();

  00033	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00036	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myfirst
  0003b	8b f0		 mov	 esi, eax
  0003d	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00040	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myfirst
  00045	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00047	89 08		 mov	 DWORD PTR [eax], ecx

; 766  : 		this->_Mylast() = _Right._Mylast();

  00049	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0004c	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Mylast
  00051	8b f0		 mov	 esi, eax
  00053	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00056	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Mylast
  0005b	8b 16		 mov	 edx, DWORD PTR [esi]
  0005d	89 10		 mov	 DWORD PTR [eax], edx

; 767  : 		this->_Myend() = _Right._Myend();

  0005f	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00062	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myend
  00067	8b f0		 mov	 esi, eax
  00069	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0006c	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myend
  00071	8b 0e		 mov	 ecx, DWORD PTR [esi]
  00073	89 08		 mov	 DWORD PTR [eax], ecx

; 768  : 
; 769  : 		_Right._Myfirst() = pointer();

  00075	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00078	e8 00 00 00 00	 call	 ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myfirst
  0007d	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 770  : 		_Right._Mylast() = pointer();

  00083	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00086	e8 00 00 00 00	 call	 ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Mylast
  0008b	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 771  : 		_Right._Myend() = pointer();

  00091	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  00094	e8 00 00 00 00	 call	 ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myend
  00099	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 772  : 		}

  0009f	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  000a2	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  000a9	59		 pop	 ecx
  000aa	5e		 pop	 esi
  000ab	8b e5		 mov	 esp, ebp
  000ad	5d		 pop	 ebp
  000ae	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$?_Move_from@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEX$$QAV12@U?$integral_constant@_N$00@2@@Z:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f4	 mov	 ecx, DWORD PTR [edx-12]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$?_Move_from@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEX$$QAV12@U?$integral_constant@_N$00@2@@Z
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
?_Move_from@?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@AAEX$$QAV12@U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::_Move_from
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??0?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??0?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@XZ PROC ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::vector<core::ui::Button,std::allocator<core::ui::Button> >, COMDAT
; _this$ = ecx

; 651  : 		{	// construct empty vector

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	6a ff		 push	 -1
  00005	68 00 00 00 00	 push	 __ehhandler$??0?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@XZ
  0000a	64 a1 00 00 00
	00		 mov	 eax, DWORD PTR fs:0
  00010	50		 push	 eax
  00011	51		 push	 ecx
  00012	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  00017	33 c5		 xor	 eax, ebp
  00019	50		 push	 eax
  0001a	8d 45 f4	 lea	 eax, DWORD PTR __$EHRec$[ebp]
  0001d	64 a3 00 00 00
	00		 mov	 DWORD PTR fs:0, eax
  00023	89 4d f0	 mov	 DWORD PTR _this$[ebp], ecx

; 650  : 		: _Mybase()

  00026	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00029	e8 00 00 00 00	 call	 ??0?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAE@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >

; 652  : 		}

  0002e	8b 45 f0	 mov	 eax, DWORD PTR _this$[ebp]
  00031	8b 4d f4	 mov	 ecx, DWORD PTR __$EHRec$[ebp]
  00034	64 89 0d 00 00
	00 00		 mov	 DWORD PTR fs:0, ecx
  0003b	59		 pop	 ecx
  0003c	8b e5		 mov	 esp, ebp
  0003e	5d		 pop	 ebp
  0003f	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__ehhandler$??0?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@XZ:
  00000	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  00004	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  00007	8b 4a f8	 mov	 ecx, DWORD PTR [edx-8]
  0000a	33 c8		 xor	 ecx, eax
  0000c	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00011	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@XZ
  00016	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0?$vector@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@QAE@XZ ENDP ; std::vector<core::ui::Button,std::allocator<core::ui::Button> >::vector<core::ui::Button,std::allocator<core::ui::Button> >
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@VButton@ui@core@@@std@@V?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_second@?$_Compressed_pair@V?$allocator@VButton@ui@core@@@std@@V?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<core::ui::Button>,std::_Vector_val<std::_Simple_types<core::ui::Button> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 306  : 		{	// return const reference to second

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 307  : 		return (_Myval2);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 308  : 		}

  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
?_Get_second@?$_Compressed_pair@V?$allocator@VButton@ui@core@@@std@@V?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<core::ui::Button>,std::_Vector_val<std::_Simple_types<core::ui::Button> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_second@?$_Compressed_pair@V?$allocator@VButton@ui@core@@@std@@V?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_second@?$_Compressed_pair@V?$allocator@VButton@ui@core@@@std@@V?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<core::ui::Button>,std::_Vector_val<std::_Simple_types<core::ui::Button> >,1>::_Get_second, COMDAT
; _this$ = ecx

; 301  : 		{	// return reference to second

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 302  : 		return (_Myval2);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 303  : 		}

  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
?_Get_second@?$_Compressed_pair@V?$allocator@VButton@ui@core@@@std@@V?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<core::ui::Button>,std::_Vector_val<std::_Simple_types<core::ui::Button> >,1>::_Get_second
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@VButton@ui@core@@@std@@V?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@$00@std@@QBEABV?$allocator@VButton@ui@core@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@VButton@ui@core@@@std@@V?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@$00@std@@QBEABV?$allocator@VButton@ui@core@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<core::ui::Button>,std::_Vector_val<std::_Simple_types<core::ui::Button> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 296  : 		{	// return const reference to first

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 297  : 		return (*this);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 298  : 		}

  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@VButton@ui@core@@@std@@V?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@$00@std@@QBEABV?$allocator@VButton@ui@core@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<core::ui::Button>,std::_Vector_val<std::_Simple_types<core::ui::Button> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@VButton@ui@core@@@std@@V?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@$00@std@@QAEAAV?$allocator@VButton@ui@core@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_first@?$_Compressed_pair@V?$allocator@VButton@ui@core@@@std@@V?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@$00@std@@QAEAAV?$allocator@VButton@ui@core@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<core::ui::Button>,std::_Vector_val<std::_Simple_types<core::ui::Button> >,1>::_Get_first, COMDAT
; _this$ = ecx

; 291  : 		{	// return reference to first

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 292  : 		return (*this);

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]

; 293  : 		}

  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
?_Get_first@?$_Compressed_pair@V?$allocator@VButton@ui@core@@@std@@V?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@$00@std@@QAEAAV?$allocator@VButton@ui@core@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<core::ui::Button>,std::_Vector_val<std::_Simple_types<core::ui::Button> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@std@@QAE@XZ PROC ; std::_Vector_val<std::_Simple_types<core::ui::Button> >::_Vector_val<std::_Simple_types<core::ui::Button> >, COMDAT
; _this$ = ecx

; 392  : 		{	// initialize values

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 389  : 		: _Myfirst(),

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	c7 00 00 00 00
	00		 mov	 DWORD PTR [eax], 0

; 390  : 		_Mylast(),

  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	c7 41 04 00 00
	00 00		 mov	 DWORD PTR [ecx+4], 0

; 391  : 		_Myend()

  0001a	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0001d	c7 42 08 00 00
	00 00		 mov	 DWORD PTR [edx+8], 0

; 393  : 		}

  00024	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00027	8b e5		 mov	 esp, ebp
  00029	5d		 pop	 ebp
  0002a	c3		 ret	 0
??0?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_val<std::_Simple_types<core::ui::Button> >::_Vector_val<std::_Simple_types<core::ui::Button> >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QBEABQAVButton@ui@core@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QBEABQAVButton@ui@core@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myend, COMDAT
; _this$ = ecx

; 600  : 		{	// return const reference to _Myend

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 601  : 		return (_Get_data()._Myend);

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Get_data
  0000f	83 c0 08	 add	 eax, 8

; 602  : 		}

  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QBEABQAVButton@ui@core@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myend, COMDAT
; _this$ = ecx

; 595  : 		{	// return reference to _Myend

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 596  : 		return (_Get_data()._Myend);

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Get_data
  0000f	83 c0 08	 add	 eax, 8

; 597  : 		}

  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?_Myend@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myend
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QBEABQAVButton@ui@core@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QBEABQAVButton@ui@core@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Mylast, COMDAT
; _this$ = ecx

; 590  : 		{	// return const reference to _Mylast

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 591  : 		return (_Get_data()._Mylast);

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Get_data
  0000f	83 c0 04	 add	 eax, 4

; 592  : 		}

  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QBEABQAVButton@ui@core@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Mylast, COMDAT
; _this$ = ecx

; 585  : 		{	// return reference to _Mylast

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 586  : 		return (_Get_data()._Mylast);

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Get_data
  0000f	83 c0 04	 add	 eax, 4

; 587  : 		}

  00012	8b e5		 mov	 esp, ebp
  00014	5d		 pop	 ebp
  00015	c3		 ret	 0
?_Mylast@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Mylast
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QBEABQAVButton@ui@core@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QBEABQAVButton@ui@core@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myfirst, COMDAT
; _this$ = ecx

; 580  : 		{	// return const reference to _Myfirst

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 581  : 		return (_Get_data()._Myfirst);

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Get_data

; 582  : 		}

  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QBEABQAVButton@ui@core@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myfirst, COMDAT
; _this$ = ecx

; 575  : 		{	// return reference to _Myfirst

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 576  : 		return (_Get_data()._Myfirst);

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Get_data

; 577  : 		}

  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?_Myfirst@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAPAVButton@ui@core@@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Myfirst
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Get_data, COMDAT
; _this$ = ecx

; 559  : 		{	// return const reference to _Vector_val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 560  : 		return (_Mypair._Get_second());

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Get_second@?$_Compressed_pair@V?$allocator@VButton@ui@core@@@std@@V?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@$00@std@@QBEABV?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<core::ui::Button>,std::_Vector_val<std::_Simple_types<core::ui::Button> >,1>::_Get_second

; 561  : 		}

  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QBEABV?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Get_data, COMDAT
; _this$ = ecx

; 554  : 		{	// return reference to _Vector_val

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 555  : 		return (_Mypair._Get_second());

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Get_second@?$_Compressed_pair@V?$allocator@VButton@ui@core@@@std@@V?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@$00@std@@QAEAAV?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@XZ ; std::_Compressed_pair<std::allocator<core::ui::Button>,std::_Vector_val<std::_Simple_types<core::ui::Button> >,1>::_Get_second

; 556  : 		}

  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Get_data
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QBEABV?$allocator@VButton@ui@core@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QBEABV?$allocator@VButton@ui@core@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Getal, COMDAT
; _this$ = ecx

; 549  : 		{	// return const reference to allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 550  : 		return (_Mypair._Get_first());

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@VButton@ui@core@@@std@@V?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@$00@std@@QBEABV?$allocator@VButton@ui@core@@@2@XZ ; std::_Compressed_pair<std::allocator<core::ui::Button>,std::_Vector_val<std::_Simple_types<core::ui::Button> >,1>::_Get_first

; 551  : 		}

  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QBEABV?$allocator@VButton@ui@core@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAV?$allocator@VButton@ui@core@@@2@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAV?$allocator@VButton@ui@core@@@2@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Getal, COMDAT
; _this$ = ecx

; 544  : 		{	// return reference to allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 545  : 		return (_Mypair._Get_first());

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Get_first@?$_Compressed_pair@V?$allocator@VButton@ui@core@@@std@@V?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@$00@std@@QAEAAV?$allocator@VButton@ui@core@@@2@XZ ; std::_Compressed_pair<std::allocator<core::ui::Button>,std::_Vector_val<std::_Simple_types<core::ui::Button> >,1>::_Get_first

; 546  : 		}

  0000f	8b e5		 mov	 esp, ebp
  00011	5d		 pop	 ebp
  00012	c3		 ret	 0
?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAV?$allocator@VButton@ui@core@@@2@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEXAAV12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Right$ = 8						; size = 4
?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEXAAV12@@Z PROC ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Swap_all, COMDAT
; _this$ = ecx

; 539  : 		{	// swap all iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 540  : 		_Get_data()._Swap_all(_Right._Get_data());

  00007	8b 4d 08	 mov	 ecx, DWORD PTR __Right$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Get_data
  0000f	50		 push	 eax
  00010	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00013	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Get_data
  00018	8b c8		 mov	 ecx, eax
  0001a	e8 00 00 00 00	 call	 ?_Swap_all@_Container_base0@std@@QAEXAAU12@@Z ; std::_Container_base0::_Swap_all

; 541  : 		}

  0001f	8b e5		 mov	 esp, ebp
  00021	5d		 pop	 ebp
  00022	c2 04 00	 ret	 4
?_Swap_all@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEXAAV12@@Z ENDP ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Swap_all
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEXXZ PROC ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Orphan_all, COMDAT
; _this$ = ecx

; 534  : 		{	// orphan all iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 535  : 		_Get_data()._Orphan_all();

  00007	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000a	e8 00 00 00 00	 call	 ?_Get_data@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAV?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Get_data
  0000f	8b c8		 mov	 ecx, eax
  00011	e8 00 00 00 00	 call	 ?_Orphan_all@_Container_base0@std@@QAEXXZ ; std::_Container_base0::_Orphan_all

; 536  : 		}

  00016	8b e5		 mov	 esp, ebp
  00018	5d		 pop	 ebp
  00019	c3		 ret	 0
?_Orphan_all@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEXXZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ?_Move_alloc@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEXAAV?$allocator@VButton@ui@core@@@2@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Al$ = 8						; size = 4
?_Move_alloc@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEXAAV?$allocator@VButton@ui@core@@@2@@Z PROC ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Move_alloc, COMDAT
; _this$ = ecx

; 439  : 		{	// replace old allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 440  : 		_Pocma(_Getal(), _Al);

  00007	8b 45 08	 mov	 eax, DWORD PTR __Al$[ebp]
  0000a	50		 push	 eax
  0000b	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0000e	e8 00 00 00 00	 call	 ?_Getal@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEAAV?$allocator@VButton@ui@core@@@2@XZ ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Getal
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$_Pocma@V?$allocator@VButton@ui@core@@@std@@@std@@YAXAAV?$allocator@VButton@ui@core@@@0@0@Z ; std::_Pocma<std::allocator<core::ui::Button> >
  00019	83 c4 08	 add	 esp, 8

; 441  : 		}

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
?_Move_alloc@?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAEXAAV?$allocator@VButton@ui@core@@@2@@Z ENDP ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Move_alloc
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vector
;	COMDAT ??0?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
$T1 = -1						; size = 1
??0?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAE@XZ PROC ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >, COMDAT
; _this$ = ecx

; 422  : 		{	// default construct allocator

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d f8	 mov	 DWORD PTR _this$[ebp], ecx

; 421  : 		: _Mypair(_Zero_then_variadic_args_t())

  00009	0f b6 45 ff	 movzx	 eax, BYTE PTR $T1[ebp]
  0000d	50		 push	 eax
  0000e	8b 4d f8	 mov	 ecx, DWORD PTR _this$[ebp]
  00011	e8 00 00 00 00	 call	 ??$?0$$V@?$_Compressed_pair@V?$allocator@VButton@ui@core@@@std@@V?$_Vector_val@U?$_Simple_types@VButton@ui@core@@@std@@@2@$00@std@@QAE@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<core::ui::Button>,std::_Vector_val<std::_Simple_types<core::ui::Button> >,1>::_Compressed_pair<std::allocator<core::ui::Button>,std::_Vector_val<std::_Simple_types<core::ui::Button> >,1><>

; 423  : 		}

  00016	8b 45 f8	 mov	 eax, DWORD PTR _this$[ebp]
  00019	8b e5		 mov	 esp, ebp
  0001b	5d		 pop	 ebp
  0001c	c3		 ret	 0
??0?$_Vector_alloc@U?$_Vec_base_types@VButton@ui@core@@V?$allocator@VButton@ui@core@@@std@@@std@@@std@@QAE@XZ ENDP ; std::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >::_Vector_alloc<std::_Vec_base_types<core::ui::Button,std::allocator<core::ui::Button> > >
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@VButton@ui@core@@@std@@@std@@SAIABV?$allocator@VButton@ui@core@@@2@@Z
_TEXT	SEGMENT
___formal$ = 8						; size = 4
?max_size@?$_Default_allocator_traits@V?$allocator@VButton@ui@core@@@std@@@std@@SAIABV?$allocator@VButton@ui@core@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<core::ui::Button> >::max_size, COMDAT

; 891  : 		{	// get maximum size

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 892  : 		return (static_cast<size_t>(-1) / sizeof(value_type));

  00003	b8 ff ff ff 07	 mov	 eax, 134217727		; 07ffffffH

; 893  : 		}

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?max_size@?$_Default_allocator_traits@V?$allocator@VButton@ui@core@@@std@@@std@@SAIABV?$allocator@VButton@ui@core@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<core::ui::Button> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?allocate@?$allocator@VButton@ui@core@@@std@@QAEPAVButton@ui@core@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Count$ = 8						; size = 4
?allocate@?$allocator@VButton@ui@core@@@std@@QAEPAVButton@ui@core@@I@Z PROC ; std::allocator<core::ui::Button>::allocate, COMDAT
; _this$ = ecx

; 996  : 		{	// allocate array of _Count elements

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 997  : 		return (static_cast<_Ty *>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count))));

  00007	8b 45 08	 mov	 eax, DWORD PTR __Count$[ebp]
  0000a	50		 push	 eax
  0000b	e8 00 00 00 00	 call	 ??$_Get_size_of_n@$0CA@@std@@YAII@Z ; std::_Get_size_of_n<32>
  00010	83 c4 04	 add	 esp, 4
  00013	50		 push	 eax
  00014	e8 00 00 00 00	 call	 ??$_Allocate@$07U_Default_allocate_traits@std@@$0A@@std@@YAPAXI@Z ; std::_Allocate<8,std::_Default_allocate_traits,0>
  00019	83 c4 04	 add	 esp, 4

; 998  : 		}

  0001c	8b e5		 mov	 esp, ebp
  0001e	5d		 pop	 ebp
  0001f	c2 04 00	 ret	 4
?allocate@?$allocator@VButton@ui@core@@@std@@QAEPAVButton@ui@core@@I@Z ENDP ; std::allocator<core::ui::Button>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?deallocate@?$allocator@VButton@ui@core@@@std@@QAEXQAVButton@ui@core@@I@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
__Ptr$ = 8						; size = 4
__Count$ = 12						; size = 4
?deallocate@?$allocator@VButton@ui@core@@@std@@QAEXQAVButton@ui@core@@I@Z PROC ; std::allocator<core::ui::Button>::deallocate, COMDAT
; _this$ = ecx

; 990  : 		{	// deallocate object at _Ptr

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 991  : 		// no overflow check on the following multiply; we assume _Allocate did that check
; 992  : 		_Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

  00007	8b 45 0c	 mov	 eax, DWORD PTR __Count$[ebp]
  0000a	c1 e0 05	 shl	 eax, 5
  0000d	50		 push	 eax
  0000e	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  00011	51		 push	 ecx
  00012	e8 00 00 00 00	 call	 ??$_Deallocate@$07$0A@@std@@YAXPAXI@Z ; std::_Deallocate<8,0>
  00017	83 c4 08	 add	 esp, 8

; 993  : 		}

  0001a	8b e5		 mov	 esp, ebp
  0001c	5d		 pop	 ebp
  0001d	c2 08 00	 ret	 8
?deallocate@?$allocator@VButton@ui@core@@@std@@QAEXQAVButton@ui@core@@I@Z ENDP ; std::allocator<core::ui::Button>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ??0?$allocator@VButton@ui@core@@@std@@QAE@XZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
??0?$allocator@VButton@ui@core@@@std@@QAE@XZ PROC	; std::allocator<core::ui::Button>::allocator<core::ui::Button>, COMDAT
; _this$ = ecx

; 979  : 	constexpr allocator() noexcept

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 980  : 		{	// construct default allocator (do nothing)
; 981  : 		}

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b e5		 mov	 esp, ebp
  0000c	5d		 pop	 ebp
  0000d	c3		 ret	 0
??0?$allocator@VButton@ui@core@@@std@@QAE@XZ ENDP	; std::allocator<core::ui::Button>::allocator<core::ui::Button>
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z
_TEXT	SEGMENT
__Min_back_shift$ = -16					; size = 4
__Ptr_user$ = -12					; size = 4
__Ptr_container$ = -8					; size = 4
__Back_shift$ = -4					; size = 4
__Ptr$ = 8						; size = 4
__Bytes$ = 12						; size = 4
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 114  : 	{	// adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 10	 sub	 esp, 16			; 00000010H

; 115  : 	_Bytes += _Non_user_size;

  00006	8b 45 0c	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00009	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000b	83 c1 23	 add	 ecx, 35			; 00000023H
  0000e	8b 55 0c	 mov	 edx, DWORD PTR __Bytes$[ebp]
  00011	89 0a		 mov	 DWORD PTR [edx], ecx

; 116  : 
; 117  : 	const uintptr_t * const _Ptr_user = reinterpret_cast<uintptr_t *>(_Ptr);

  00013	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00016	8b 08		 mov	 ecx, DWORD PTR [eax]
  00018	89 4d f4	 mov	 DWORD PTR __Ptr_user$[ebp], ecx

; 118  : 	const uintptr_t _Ptr_container = _Ptr_user[-1];

  0001b	ba 04 00 00 00	 mov	 edx, 4
  00020	6b c2 ff	 imul	 eax, edx, -1
  00023	8b 4d f4	 mov	 ecx, DWORD PTR __Ptr_user$[ebp]
  00026	8b 14 01	 mov	 edx, DWORD PTR [ecx+eax]
  00029	89 55 f8	 mov	 DWORD PTR __Ptr_container$[ebp], edx

; 119  : 
; 120  : 	// If the following asserts, it likely means that we are performing
; 121  : 	// an aligned delete on memory coming from an unaligned allocation.
; 122  : 	_STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");
; 123  : 
; 124  : 	// Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 125  : 	// in range [_Min_back_shift, _Non_user_size]
; 126  :   #ifdef _DEBUG
; 127  : 	constexpr uintptr_t _Min_back_shift = 2 * sizeof(void *);
; 128  :   #else /* ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv */
; 129  : 	constexpr uintptr_t _Min_back_shift = sizeof(void *);

  0002c	c7 45 f0 04 00
	00 00		 mov	 DWORD PTR __Min_back_shift$[ebp], 4

; 130  :   #endif /* _DEBUG */
; 131  : 	const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

  00033	8b 45 08	 mov	 eax, DWORD PTR __Ptr$[ebp]
  00036	8b 08		 mov	 ecx, DWORD PTR [eax]
  00038	2b 4d f8	 sub	 ecx, DWORD PTR __Ptr_container$[ebp]
  0003b	89 4d fc	 mov	 DWORD PTR __Back_shift$[ebp], ecx
$LN4@Adjust_man:

; 132  : 	_STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

  0003e	83 7d fc 04	 cmp	 DWORD PTR __Back_shift$[ebp], 4
  00042	72 08		 jb	 SHORT $LN7@Adjust_man
  00044	83 7d fc 23	 cmp	 DWORD PTR __Back_shift$[ebp], 35 ; 00000023H
  00048	77 02		 ja	 SHORT $LN7@Adjust_man
  0004a	eb 09		 jmp	 SHORT $LN2@Adjust_man
$LN7@Adjust_man:
  0004c	e8 00 00 00 00	 call	 __invalid_parameter_noinfo_noreturn
  00051	33 d2		 xor	 edx, edx
  00053	75 f7		 jne	 SHORT $LN7@Adjust_man
$LN2@Adjust_man:
  00055	33 c0		 xor	 eax, eax
  00057	75 e5		 jne	 SHORT $LN4@Adjust_man

; 133  : 	_Ptr = reinterpret_cast<void *>(_Ptr_container);

  00059	8b 4d 08	 mov	 ecx, DWORD PTR __Ptr$[ebp]
  0005c	8b 55 f8	 mov	 edx, DWORD PTR __Ptr_container$[ebp]
  0005f	89 11		 mov	 DWORD PTR [ecx], edx
$LN10@Adjust_man:

; 134  : 	}

  00061	8b e5		 mov	 esp, ebp
  00063	5d		 pop	 ebp
  00064	c3		 ret	 0
?_Adjust_manually_vector_aligned@std@@YAXAAPAXAAI@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xmemory0
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z
_TEXT	SEGMENT
__Bytes$ = 8						; size = 4
?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z PROC	; std::_Default_allocate_traits::_Allocate, COMDAT

; 51   : 		{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 52   : 		return (::operator new(_Bytes));

  00003	8b 45 08	 mov	 eax, DWORD PTR __Bytes$[ebp]
  00006	50		 push	 eax
  00007	e8 00 00 00 00	 call	 ??2@YAPAXI@Z		; operator new
  0000c	83 c4 04	 add	 esp, 4

; 53   : 		}

  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?_Allocate@_Default_allocate_traits@std@@SAPAXI@Z ENDP	; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Swap_all@_Container_base0@std@@QAEXAAU12@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___formal$ = 8						; size = 4
?_Swap_all@_Container_base0@std@@QAEXAAU12@@Z PROC	; std::_Container_base0::_Swap_all, COMDAT
; _this$ = ecx

; 46   : 		{	// swap all iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 47   : 		}

  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c2 04 00	 ret	 4
?_Swap_all@_Container_base0@std@@QAEXAAU12@@Z ENDP	; std::_Container_base0::_Swap_all
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\xutility
;	COMDAT ?_Orphan_all@_Container_base0@std@@QAEXXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?_Orphan_all@_Container_base0@std@@QAEXXZ PROC		; std::_Container_base0::_Orphan_all, COMDAT
; _this$ = ecx

; 42   : 		{	// orphan all iterators

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 43   : 		}

  00007	8b e5		 mov	 esp, ebp
  00009	5d		 pop	 ebp
  0000a	c3		 ret	 0
?_Orphan_all@_Container_base0@std@@QAEXXZ ENDP		; std::_Container_base0::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\limits
;	COMDAT ?max@?$numeric_limits@H@std@@SAHXZ
_TEXT	SEGMENT
?max@?$numeric_limits@H@std@@SAHXZ PROC			; std::numeric_limits<int>::max, COMDAT

; 616  : 		{	// return maximum value

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 617  : 		return (INT_MAX);

  00003	b8 ff ff ff 7f	 mov	 eax, 2147483647		; 7fffffffH

; 618  : 		}

  00008	5d		 pop	 ebp
  00009	c3		 ret	 0
?max@?$numeric_limits@H@std@@SAHXZ ENDP			; std::numeric_limits<int>::max
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.16.27023\include\vcruntime_new.h
;	COMDAT ??2@YAPAXIPAX@Z
_TEXT	SEGMENT
__Size$ = 8						; size = 4
__Where$ = 12						; size = 4
??2@YAPAXIPAX@Z PROC					; operator new, COMDAT

; 185  :     {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 186  :         (void)_Size;
; 187  :         return _Where;

  00003	8b 45 0c	 mov	 eax, DWORD PTR __Where$[ebp]

; 188  :     }

  00006	5d		 pop	 ebp
  00007	c3		 ret	 0
??2@YAPAXIPAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0Button@ui@core@@QAE@$$QAV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0Button@ui@core@@QAE@$$QAV012@@Z PROC			; core::ui::Button::Button, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00017	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0001a	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00023	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00026	89 50 08	 mov	 DWORD PTR [eax+8], edx
  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0002f	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00032	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  00035	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00038	83 c0 10	 add	 eax, 16			; 00000010H
  0003b	50		 push	 eax
  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	83 c1 10	 add	 ecx, 16			; 00000010H
  00042	e8 00 00 00 00	 call	 ??0Color@core@@QAE@ABV01@@Z ; core::Color::Color
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	8b 55 08	 mov	 edx, DWORD PTR ___that$[ebp]
  0004d	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00050	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00053	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00056	83 c1 18	 add	 ecx, 24			; 00000018H
  00059	51		 push	 ecx
  0005a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	83 c1 18	 add	 ecx, 24			; 00000018H
  00060	e8 00 00 00 00	 call	 ??0Color@core@@QAE@ABV01@@Z ; core::Color::Color
  00065	8b 55 08	 mov	 edx, DWORD PTR ___that$[ebp]
  00068	83 c2 1c	 add	 edx, 28			; 0000001cH
  0006b	52		 push	 edx
  0006c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	83 c1 1c	 add	 ecx, 28			; 0000001cH
  00072	e8 00 00 00 00	 call	 ??0Color@core@@QAE@ABV01@@Z ; core::Color::Color
  00077	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c2 04 00	 ret	 4
??0Button@ui@core@@QAE@$$QAV012@@Z ENDP			; core::ui::Button::Button
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ??0Button@ui@core@@QAE@ABV012@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
___that$ = 8						; size = 4
??0Button@ui@core@@QAE@ABV012@@Z PROC			; core::ui::Button::Button, COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0000d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0000f	89 10		 mov	 DWORD PTR [eax], edx
  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00017	8b 51 04	 mov	 edx, DWORD PTR [ecx+4]
  0001a	89 50 04	 mov	 DWORD PTR [eax+4], edx
  0001d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00020	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00023	8b 51 08	 mov	 edx, DWORD PTR [ecx+8]
  00026	89 50 08	 mov	 DWORD PTR [eax+8], edx
  00029	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002c	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  0002f	8b 51 0c	 mov	 edx, DWORD PTR [ecx+12]
  00032	89 50 0c	 mov	 DWORD PTR [eax+12], edx
  00035	8b 45 08	 mov	 eax, DWORD PTR ___that$[ebp]
  00038	83 c0 10	 add	 eax, 16			; 00000010H
  0003b	50		 push	 eax
  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	83 c1 10	 add	 ecx, 16			; 00000010H
  00042	e8 00 00 00 00	 call	 ??0Color@core@@QAE@ABV01@@Z ; core::Color::Color
  00047	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0004a	8b 55 08	 mov	 edx, DWORD PTR ___that$[ebp]
  0004d	8b 42 14	 mov	 eax, DWORD PTR [edx+20]
  00050	89 41 14	 mov	 DWORD PTR [ecx+20], eax
  00053	8b 4d 08	 mov	 ecx, DWORD PTR ___that$[ebp]
  00056	83 c1 18	 add	 ecx, 24			; 00000018H
  00059	51		 push	 ecx
  0005a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0005d	83 c1 18	 add	 ecx, 24			; 00000018H
  00060	e8 00 00 00 00	 call	 ??0Color@core@@QAE@ABV01@@Z ; core::Color::Color
  00065	8b 55 08	 mov	 edx, DWORD PTR ___that$[ebp]
  00068	83 c2 1c	 add	 edx, 28			; 0000001cH
  0006b	52		 push	 edx
  0006c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0006f	83 c1 1c	 add	 ecx, 28			; 0000001cH
  00072	e8 00 00 00 00	 call	 ??0Color@core@@QAE@ABV01@@Z ; core::Color::Color
  00077	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0007a	8b e5		 mov	 esp, ebp
  0007c	5d		 pop	 ebp
  0007d	c2 04 00	 ret	 4
??0Button@ui@core@@QAE@ABV012@@Z ENDP			; core::ui::Button::Button
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\dev\tetris\src\ui\button.hpp
;	COMDAT ?SetState@Button@ui@core@@QAEXW4ButtonState@23@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_t_state$ = 8						; size = 4
?SetState@Button@ui@core@@QAEXW4ButtonState@23@@Z PROC	; core::ui::Button::SetState, COMDAT
; _this$ = ecx

; 55   :             inline void SetState(ButtonState t_state) { m_state = t_state; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _t_state$[ebp]
  0000d	89 48 14	 mov	 DWORD PTR [eax+20], ecx
  00010	8b e5		 mov	 esp, ebp
  00012	5d		 pop	 ebp
  00013	c2 04 00	 ret	 4
?SetState@Button@ui@core@@QAEXW4ButtonState@23@@Z ENDP	; core::ui::Button::SetState
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\dev\tetris\src\ui\button.hpp
;	COMDAT ?GetHeight@Button@ui@core@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetHeight@Button@ui@core@@QBEHXZ PROC			; core::ui::Button::GetHeight, COMDAT
; _this$ = ecx

; 48   :             inline i32 GetHeight() const { return m_buttonHeight; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 40 04	 mov	 eax, DWORD PTR [eax+4]
  0000d	8b e5		 mov	 esp, ebp
  0000f	5d		 pop	 ebp
  00010	c3		 ret	 0
?GetHeight@Button@ui@core@@QBEHXZ ENDP			; core::ui::Button::GetHeight
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\dev\tetris\src\ui\button.hpp
;	COMDAT ?GetWidth@Button@ui@core@@QBEHXZ
_TEXT	SEGMENT
_this$ = -4						; size = 4
?GetWidth@Button@ui@core@@QBEHXZ PROC			; core::ui::Button::GetWidth, COMDAT
; _this$ = ecx

; 45   :             inline i32 GetWidth() const { return m_buttonWidth; }

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx
  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 00		 mov	 eax, DWORD PTR [eax]
  0000c	8b e5		 mov	 esp, ebp
  0000e	5d		 pop	 ebp
  0000f	c3		 ret	 0
?GetWidth@Button@ui@core@@QBEHXZ ENDP			; core::ui::Button::GetWidth
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\dev\tetris\src\ui\button.hpp
;	COMDAT ??0Button@ui@core@@QAE@HHPAU_TTF_Font@@PBDW4ButtonState@12@VColor@2@33@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_t_width$ = 8						; size = 4
_t_height$ = 12						; size = 4
_t_font$ = 16						; size = 4
_t_label$ = 20						; size = 4
_t_initialState$ = 24					; size = 4
_t_colorOutFocus$ = 28					; size = 4
_t_colorInFocus$ = 32					; size = 4
_t_textColor$ = 36					; size = 4
??0Button@ui@core@@QAE@HHPAU_TTF_Font@@PBDW4ButtonState@12@VColor@2@33@Z PROC ; core::ui::Button::Button, COMDAT
; _this$ = ecx

; 40   :             Button(i32 t_width, i32 t_height, TTF_Font *t_font, const char *t_label, ButtonState t_initialState, Color t_colorOutFocus, Color t_colorInFocus, Color t_textColor)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 41   :                 : m_buttonWidth(t_width), m_buttonHeight(t_height), m_buttonFont(t_font), m_buttonLabel(t_label), m_state(t_initialState), m_colorOutFocus(t_colorOutFocus), m_colorInFocus(t_colorInFocus), m_buttonTextColor(t_textColor) {}

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _t_width$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 0c	 mov	 eax, DWORD PTR _t_height$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	8b 55 10	 mov	 edx, DWORD PTR _t_font$[ebp]
  0001e	89 51 08	 mov	 DWORD PTR [ecx+8], edx
  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	8b 4d 14	 mov	 ecx, DWORD PTR _t_label$[ebp]
  00027	89 48 0c	 mov	 DWORD PTR [eax+12], ecx
  0002a	8d 55 24	 lea	 edx, DWORD PTR _t_textColor$[ebp]
  0002d	52		 push	 edx
  0002e	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00031	83 c1 10	 add	 ecx, 16			; 00000010H
  00034	e8 00 00 00 00	 call	 ??0Color@core@@QAE@ABV01@@Z ; core::Color::Color
  00039	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0003c	8b 4d 18	 mov	 ecx, DWORD PTR _t_initialState$[ebp]
  0003f	89 48 14	 mov	 DWORD PTR [eax+20], ecx
  00042	8d 55 1c	 lea	 edx, DWORD PTR _t_colorOutFocus$[ebp]
  00045	52		 push	 edx
  00046	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00049	83 c1 18	 add	 ecx, 24			; 00000018H
  0004c	e8 00 00 00 00	 call	 ??0Color@core@@QAE@ABV01@@Z ; core::Color::Color
  00051	8d 45 20	 lea	 eax, DWORD PTR _t_colorInFocus$[ebp]
  00054	50		 push	 eax
  00055	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  00058	83 c1 1c	 add	 ecx, 28			; 0000001cH
  0005b	e8 00 00 00 00	 call	 ??0Color@core@@QAE@ABV01@@Z ; core::Color::Color
  00060	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00063	8b e5		 mov	 esp, ebp
  00065	5d		 pop	 ebp
  00066	c2 20 00	 ret	 32			; 00000020H
??0Button@ui@core@@QAE@HHPAU_TTF_Font@@PBDW4ButtonState@12@VColor@2@33@Z ENDP ; core::ui::Button::Button
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\dev\tetris\src\color.hpp
;	COMDAT ??0Color@core@@QAE@EEE@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_r$ = 8							; size = 1
_g$ = 12						; size = 1
_b$ = 16						; size = 1
??0Color@core@@QAE@EEE@Z PROC				; core::Color::Color, COMDAT
; _this$ = ecx

; 32   :         Color(u8 r, u8 g, u8 b)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 33   :         {
; 34   :             this->r = r;

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8a 4d 08	 mov	 cl, BYTE PTR _r$[ebp]
  0000d	88 08		 mov	 BYTE PTR [eax], cl

; 35   :             this->g = g;

  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8a 45 0c	 mov	 al, BYTE PTR _g$[ebp]
  00015	88 42 01	 mov	 BYTE PTR [edx+1], al

; 36   :             this->b = b;

  00018	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0001b	8a 55 10	 mov	 dl, BYTE PTR _b$[ebp]
  0001e	88 51 02	 mov	 BYTE PTR [ecx+2], dl

; 37   :             this->a = 255;

  00021	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00024	c6 40 03 ff	 mov	 BYTE PTR [eax+3], 255	; 000000ffH

; 38   :         }

  00028	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0002b	8b e5		 mov	 esp, ebp
  0002d	5d		 pop	 ebp
  0002e	c2 0c 00	 ret	 12			; 0000000cH
??0Color@core@@QAE@EEE@Z ENDP				; core::Color::Color
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\dev\tetris\src\color.hpp
;	COMDAT ??0Color@core@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_t_color$ = 8						; size = 4
??0Color@core@@QAE@ABV01@@Z PROC			; core::Color::Color, COMDAT
; _this$ = ecx

; 19   :         Color(const Color& t_color)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 20   :         {
; 21   :             *this = t_color;

  00007	8b 45 08	 mov	 eax, DWORD PTR _t_color$[ebp]
  0000a	8b 08		 mov	 ecx, DWORD PTR [eax]
  0000c	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  0000f	89 0a		 mov	 DWORD PTR [edx], ecx

; 22   :         }

  00011	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00014	8b e5		 mov	 esp, ebp
  00016	5d		 pop	 ebp
  00017	c2 04 00	 ret	 4
??0Color@core@@QAE@ABV01@@Z ENDP			; core::Color::Color
_TEXT	ENDS
END
