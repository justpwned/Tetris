; Listing generated by Microsoft (R) Optimizing Compiler Version 19.15.26726.0 

	TITLE	C:\Dev\Tetris\src\tetromino.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
?TETROMINO_1@@3QBEB DB 00H				; TETROMINO_1
	DB	00H
	DB	00H
	DB	00H
	DB	01H
	DB	01H
	DB	01H
	DB	01H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
?TETROMINO_2@@3QBEB DB 02H				; TETROMINO_2
	DB	02H
	DB	02H
	DB	02H
?TETROMINO_3@@3QBEB DB 00H				; TETROMINO_3
	DB	00H
	DB	00H
	DB	03H
	DB	03H
	DB	03H
	DB	00H
	DB	03H
	DB	00H
	ORG $+3
?TETROMINO_4@@3QBEB DB 00H				; TETROMINO_4
	DB	04H
	DB	04H
	DB	04H
	DB	04H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	ORG $+3
?TETROMINO_5@@3QBEB DB 05H				; TETROMINO_5
	DB	05H
	DB	00H
	DB	00H
	DB	05H
	DB	05H
	DB	00H
	DB	00H
	DB	00H
	ORG $+3
?TETROMINO_6@@3QBEB DB 06H				; TETROMINO_6
	DB	00H
	DB	00H
	DB	06H
	DB	06H
	DB	06H
	DB	00H
	DB	00H
	DB	00H
	ORG $+3
?TETROMINO_7@@3QBEB DB 00H				; TETROMINO_7
	DB	00H
	DB	07H
	DB	07H
	DB	07H
	DB	07H
	DB	00H
	DB	00H
	DB	00H
CONST	ENDS
PUBLIC	??0Tetromino@gameplay@core@@QAE@PBEH@Z		; core::gameplay::Tetromino::Tetromino
PUBLIC	?GetValue@Tetromino@gameplay@core@@QAEEHHH@Z	; core::gameplay::Tetromino::GetValue
PUBLIC	?s_tetrominos@Tetromino@gameplay@core@@2QBV123@B ; core::gameplay::Tetromino::s_tetrominos
_BSS	SEGMENT
?s_tetrominos@Tetromino@gameplay@core@@2QBV123@B DQ 07H DUP (?) ; core::gameplay::Tetromino::s_tetrominos
_BSS	ENDS
CRT$XCU	SEGMENT
??s_tetrominos$initializer$@Tetromino@gameplay@core@@2P6AXXZA@@3P6AXXZA DD FLAT:??__E?s_tetrominos@Tetromino@gameplay@core@@2QBV123@B@@YAXXZ ; ??s_tetrominos$initializer$@Tetromino@gameplay@core@@2P6AXXZA@@3P6AXXZA
CRT$XCU	ENDS
; Function compile flags: /Odtp
; File c:\dev\tetris\src\tetromino.cpp
;	COMDAT ??__E?s_tetrominos@Tetromino@gameplay@core@@2QBV123@B@@YAXXZ
text$di	SEGMENT
??__E?s_tetrominos@Tetromino@gameplay@core@@2QBV123@B@@YAXXZ PROC ; `dynamic initializer for 'core::gameplay::Tetromino::s_tetrominos'', COMDAT

; 55   : };

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 48   :     Tetromino(TETROMINO_1, 4),

  00003	6a 04		 push	 4
  00005	68 00 00 00 00	 push	 OFFSET ?TETROMINO_1@@3QBEB
  0000a	b9 00 00 00 00	 mov	 ecx, OFFSET ?s_tetrominos@Tetromino@gameplay@core@@2QBV123@B ; core::gameplay::Tetromino::s_tetrominos
  0000f	e8 00 00 00 00	 call	 ??0Tetromino@gameplay@core@@QAE@PBEH@Z ; core::gameplay::Tetromino::Tetromino

; 49   :     Tetromino(TETROMINO_2, 2),

  00014	6a 02		 push	 2
  00016	68 00 00 00 00	 push	 OFFSET ?TETROMINO_2@@3QBEB
  0001b	b9 08 00 00 00	 mov	 ecx, OFFSET ?s_tetrominos@Tetromino@gameplay@core@@2QBV123@B+8
  00020	e8 00 00 00 00	 call	 ??0Tetromino@gameplay@core@@QAE@PBEH@Z ; core::gameplay::Tetromino::Tetromino

; 50   :     Tetromino(TETROMINO_3, 3),

  00025	6a 03		 push	 3
  00027	68 00 00 00 00	 push	 OFFSET ?TETROMINO_3@@3QBEB
  0002c	b9 10 00 00 00	 mov	 ecx, OFFSET ?s_tetrominos@Tetromino@gameplay@core@@2QBV123@B+16
  00031	e8 00 00 00 00	 call	 ??0Tetromino@gameplay@core@@QAE@PBEH@Z ; core::gameplay::Tetromino::Tetromino

; 51   :     Tetromino(TETROMINO_4, 3),

  00036	6a 03		 push	 3
  00038	68 00 00 00 00	 push	 OFFSET ?TETROMINO_4@@3QBEB
  0003d	b9 18 00 00 00	 mov	 ecx, OFFSET ?s_tetrominos@Tetromino@gameplay@core@@2QBV123@B+24
  00042	e8 00 00 00 00	 call	 ??0Tetromino@gameplay@core@@QAE@PBEH@Z ; core::gameplay::Tetromino::Tetromino

; 52   :     Tetromino(TETROMINO_5, 3),

  00047	6a 03		 push	 3
  00049	68 00 00 00 00	 push	 OFFSET ?TETROMINO_5@@3QBEB
  0004e	b9 20 00 00 00	 mov	 ecx, OFFSET ?s_tetrominos@Tetromino@gameplay@core@@2QBV123@B+32
  00053	e8 00 00 00 00	 call	 ??0Tetromino@gameplay@core@@QAE@PBEH@Z ; core::gameplay::Tetromino::Tetromino

; 53   :     Tetromino(TETROMINO_6, 3),

  00058	6a 03		 push	 3
  0005a	68 00 00 00 00	 push	 OFFSET ?TETROMINO_6@@3QBEB
  0005f	b9 28 00 00 00	 mov	 ecx, OFFSET ?s_tetrominos@Tetromino@gameplay@core@@2QBV123@B+40
  00064	e8 00 00 00 00	 call	 ??0Tetromino@gameplay@core@@QAE@PBEH@Z ; core::gameplay::Tetromino::Tetromino

; 54   :     Tetromino(TETROMINO_7, 3),

  00069	6a 03		 push	 3
  0006b	68 00 00 00 00	 push	 OFFSET ?TETROMINO_7@@3QBEB
  00070	b9 30 00 00 00	 mov	 ecx, OFFSET ?s_tetrominos@Tetromino@gameplay@core@@2QBV123@B+48
  00075	e8 00 00 00 00	 call	 ??0Tetromino@gameplay@core@@QAE@PBEH@Z ; core::gameplay::Tetromino::Tetromino
  0007a	5d		 pop	 ebp
  0007b	c3		 ret	 0
??__E?s_tetrominos@Tetromino@gameplay@core@@2QBV123@B@@YAXXZ ENDP ; `dynamic initializer for 'core::gameplay::Tetromino::s_tetrominos''
text$di	ENDS
; Function compile flags: /Odtp
; File c:\dev\tetris\src\tetromino.cpp
_TEXT	SEGMENT
tv65 = -8						; size = 4
_this$ = -4						; size = 4
_t_row$ = 8						; size = 4
_t_col$ = 12						; size = 4
_t_rotation$ = 16					; size = 4
?GetValue@Tetromino@gameplay@core@@QAEEHHH@Z PROC	; core::gameplay::Tetromino::GetValue
; _this$ = ecx

; 58   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 08	 sub	 esp, 8
  00006	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 59   :     switch (t_rotation % 4)

  00009	8b 45 10	 mov	 eax, DWORD PTR _t_rotation$[ebp]
  0000c	25 03 00 00 80	 and	 eax, -2147483645	; 80000003H
  00011	79 05		 jns	 SHORT $LN9@GetValue
  00013	48		 dec	 eax
  00014	83 c8 fc	 or	 eax, -4			; fffffffcH
  00017	40		 inc	 eax
$LN9@GetValue:
  00018	89 45 f8	 mov	 DWORD PTR tv65[ebp], eax
  0001b	83 7d f8 03	 cmp	 DWORD PTR tv65[ebp], 3
  0001f	0f 87 92 00 00
	00		 ja	 $LN2@GetValue
  00025	8b 4d f8	 mov	 ecx, DWORD PTR tv65[ebp]
  00028	ff 24 8d 00 00
	00 00		 jmp	 DWORD PTR $LN10@GetValue[ecx*4]
$LN4@GetValue:

; 60   :     {
; 61   :         case 0:
; 62   :         {
; 63   :             return m_data[t_row * m_side + t_col];

  0002f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00032	8b 45 08	 mov	 eax, DWORD PTR _t_row$[ebp]
  00035	0f af 42 04	 imul	 eax, DWORD PTR [edx+4]
  00039	03 45 0c	 add	 eax, DWORD PTR _t_col$[ebp]
  0003c	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0003f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00041	8a 04 02	 mov	 al, BYTE PTR [edx+eax]
  00044	eb 73		 jmp	 SHORT $LN1@GetValue

; 64   :         } break;

  00046	eb 6f		 jmp	 SHORT $LN2@GetValue
$LN5@GetValue:

; 65   :         
; 66   :         case 1:
; 67   :         {
; 68   :             return m_data[(m_side - t_col - 1) * m_side + t_row];

  00048	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0004b	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  0004e	2b 4d 0c	 sub	 ecx, DWORD PTR _t_col$[ebp]
  00051	83 e9 01	 sub	 ecx, 1
  00054	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00057	0f af 4a 04	 imul	 ecx, DWORD PTR [edx+4]
  0005b	03 4d 08	 add	 ecx, DWORD PTR _t_row$[ebp]
  0005e	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00061	8b 10		 mov	 edx, DWORD PTR [eax]
  00063	8a 04 0a	 mov	 al, BYTE PTR [edx+ecx]
  00066	eb 51		 jmp	 SHORT $LN1@GetValue

; 69   :         } break;

  00068	eb 4d		 jmp	 SHORT $LN2@GetValue
$LN6@GetValue:

; 70   :         
; 71   :         case 2:
; 72   :         {
; 73   :             return m_data[(m_side - t_row - 1) * m_side + (m_side - t_col - 1)];

  0006a	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0006d	8b 48 04	 mov	 ecx, DWORD PTR [eax+4]
  00070	2b 4d 08	 sub	 ecx, DWORD PTR _t_row$[ebp]
  00073	83 e9 01	 sub	 ecx, 1
  00076	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00079	0f af 4a 04	 imul	 ecx, DWORD PTR [edx+4]
  0007d	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00080	8b 50 04	 mov	 edx, DWORD PTR [eax+4]
  00083	2b 55 0c	 sub	 edx, DWORD PTR _t_col$[ebp]
  00086	8d 44 11 ff	 lea	 eax, DWORD PTR [ecx+edx-1]
  0008a	8b 4d fc	 mov	 ecx, DWORD PTR _this$[ebp]
  0008d	8b 11		 mov	 edx, DWORD PTR [ecx]
  0008f	8a 04 02	 mov	 al, BYTE PTR [edx+eax]
  00092	eb 25		 jmp	 SHORT $LN1@GetValue

; 74   :         } break;

  00094	eb 21		 jmp	 SHORT $LN2@GetValue
$LN7@GetValue:

; 75   :         
; 76   :         case 3:
; 77   :         {
; 78   :             return m_data[t_col * m_side + (m_side - t_row - 1)];

  00096	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  00099	8b 4d 0c	 mov	 ecx, DWORD PTR _t_col$[ebp]
  0009c	0f af 48 04	 imul	 ecx, DWORD PTR [eax+4]
  000a0	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000a3	8b 42 04	 mov	 eax, DWORD PTR [edx+4]
  000a6	2b 45 08	 sub	 eax, DWORD PTR _t_row$[ebp]
  000a9	8d 4c 01 ff	 lea	 ecx, DWORD PTR [ecx+eax-1]
  000ad	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  000b0	8b 02		 mov	 eax, DWORD PTR [edx]
  000b2	8a 04 08	 mov	 al, BYTE PTR [eax+ecx]
  000b5	eb 02		 jmp	 SHORT $LN1@GetValue
$LN2@GetValue:

; 79   :         } break;
; 80   :     }
; 81   :     
; 82   :     return 0;

  000b7	32 c0		 xor	 al, al
$LN1@GetValue:

; 83   : }

  000b9	8b e5		 mov	 esp, ebp
  000bb	5d		 pop	 ebp
  000bc	c2 0c 00	 ret	 12			; 0000000cH
  000bf	90		 npad	 1
$LN10@GetValue:
  000c0	00 00 00 00	 DD	 $LN4@GetValue
  000c4	00 00 00 00	 DD	 $LN5@GetValue
  000c8	00 00 00 00	 DD	 $LN6@GetValue
  000cc	00 00 00 00	 DD	 $LN7@GetValue
?GetValue@Tetromino@gameplay@core@@QAEEHHH@Z ENDP	; core::gameplay::Tetromino::GetValue
_TEXT	ENDS
; Function compile flags: /Odtp
; File c:\dev\tetris\src\tetromino.hpp
;	COMDAT ??0Tetromino@gameplay@core@@QAE@PBEH@Z
_TEXT	SEGMENT
_this$ = -4						; size = 4
_t_data$ = 8						; size = 4
_t_side$ = 12						; size = 4
??0Tetromino@gameplay@core@@QAE@PBEH@Z PROC		; core::gameplay::Tetromino::Tetromino, COMDAT
; _this$ = ecx

; 23   :             Tetromino(const u8 *t_data, i32 t_side)

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	89 4d fc	 mov	 DWORD PTR _this$[ebp], ecx

; 24   :                 : m_data(t_data), m_side(t_side) {}

  00007	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0000a	8b 4d 08	 mov	 ecx, DWORD PTR _t_data$[ebp]
  0000d	89 08		 mov	 DWORD PTR [eax], ecx
  0000f	8b 55 fc	 mov	 edx, DWORD PTR _this$[ebp]
  00012	8b 45 0c	 mov	 eax, DWORD PTR _t_side$[ebp]
  00015	89 42 04	 mov	 DWORD PTR [edx+4], eax
  00018	8b 45 fc	 mov	 eax, DWORD PTR _this$[ebp]
  0001b	8b e5		 mov	 esp, ebp
  0001d	5d		 pop	 ebp
  0001e	c2 08 00	 ret	 8
??0Tetromino@gameplay@core@@QAE@PBEH@Z ENDP		; core::gameplay::Tetromino::Tetromino
_TEXT	ENDS
END
