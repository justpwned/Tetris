#ifndef PALETTE_H
#define PALETTE_H

#include "color.h"

static class Palette
{
    public:
    
    static const i32 Size = 8;
    
    static const Color Base[Palette::Size];
    static const Color Light[Palette::Size];
    static const Color Dark[Palette::Size];
};

const Color Palette::Base[Palette::Size] = {
    Color(0x28, 0x28, 0x28, 0xFF),
    Color(0x2D, 0x99, 0x99, 0xFF),
    Color(0x99, 0x99, 0x2D, 0xFF),
    Color(0x99, 0x2D, 0x99, 0xFF),
    Color(0x2D, 0x99, 0x51, 0xFF),
    Color(0x99, 0x2D, 0x2D, 0xFF),
    Color(0x2D, 0x63, 0x99, 0xFF),
    Color(0x99, 0x63, 0x2D, 0xFF)
};

const Color Palette::Light[Palette::Size] = {
    Color(0x28, 0x28, 0x28, 0xFF),
    Color(0x44, 0xE5, 0xE5, 0xFF),
    Color(0xE5, 0xE5, 0x44, 0xFF),
    Color(0xE5, 0x44, 0xE5, 0xFF),
    Color(0x44, 0xE5, 0x7A, 0xFF),
    Color(0xE5, 0x44, 0x44, 0xFF),
    Color(0x44, 0x95, 0xE5, 0xFF),
    Color(0xE5, 0x95, 0x44, 0xFF)
};

const Color Dark[Palette::Size] = {
    Color(0x28, 0x28, 0x28, 0xFF),
    Color(0x1E, 0x66, 0x66, 0xFF),
    Color(0x66, 0x66, 0x1E, 0xFF),
    Color(0x66, 0x1E, 0x66, 0xFF),
    Color(0x1E, 0x66, 0x36, 0xFF),
    Color(0x66, 0x1E, 0x1E, 0xFF),
    Color(0x1E, 0x42, 0x66, 0xFF),
    Color(0x66, 0x42, 0x1E, 0xFF)
};

#endif